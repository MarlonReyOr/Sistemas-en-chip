

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 27 23:30:42 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,inline,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,inline,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,inline,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,space=0,merge=1,inline,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,space=0,merge=1,inline,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,space=0,delta=2
    46                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Generated 12/10/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F873A Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0004                     fsr             equ	4
    88     0004                     fsr0            equ	4
    89     0000                     indf            equ	0
    90     0000                     indf0           equ	0
    91     0002                     pc              equ	2
    92     0002                     pcl             equ	2
    93     000A                     pclath          equ	10
    94     0003                     status          equ	3
    95     0000                     INDF            equ	0	;# 
    96     0001                     TMR0            equ	1	;# 
    97     0002                     PCL             equ	2	;# 
    98     0003                     STATUS          equ	3	;# 
    99     0004                     FSR             equ	4	;# 
   100     0005                     PORTA           equ	5	;# 
   101     0006                     PORTB           equ	6	;# 
   102     0007                     PORTC           equ	7	;# 
   103     000A                     PCLATH          equ	10	;# 
   104     000B                     INTCON          equ	11	;# 
   105     000C                     PIR1            equ	12	;# 
   106     000D                     PIR2            equ	13	;# 
   107     000E                     TMR1            equ	14	;# 
   108     000E                     TMR1L           equ	14	;# 
   109     000F                     TMR1H           equ	15	;# 
   110     0010                     T1CON           equ	16	;# 
   111     0011                     TMR2            equ	17	;# 
   112     0012                     T2CON           equ	18	;# 
   113     0013                     SSPBUF          equ	19	;# 
   114     0014                     SSPCON          equ	20	;# 
   115     0015                     CCPR1           equ	21	;# 
   116     0015                     CCPR1L          equ	21	;# 
   117     0016                     CCPR1H          equ	22	;# 
   118     0017                     CCP1CON         equ	23	;# 
   119     0018                     RCSTA           equ	24	;# 
   120     0019                     TXREG           equ	25	;# 
   121     001A                     RCREG           equ	26	;# 
   122     001B                     CCPR2           equ	27	;# 
   123     001B                     CCPR2L          equ	27	;# 
   124     001C                     CCPR2H          equ	28	;# 
   125     001D                     CCP2CON         equ	29	;# 
   126     001E                     ADRESH          equ	30	;# 
   127     001F                     ADCON0          equ	31	;# 
   128     0081                     OPTION_REG      equ	129	;# 
   129     0085                     TRISA           equ	133	;# 
   130     0086                     TRISB           equ	134	;# 
   131     0087                     TRISC           equ	135	;# 
   132     008C                     PIE1            equ	140	;# 
   133     008D                     PIE2            equ	141	;# 
   134     008E                     PCON            equ	142	;# 
   135     0091                     SSPCON2         equ	145	;# 
   136     0092                     PR2             equ	146	;# 
   137     0093                     SSPADD          equ	147	;# 
   138     0094                     SSPSTAT         equ	148	;# 
   139     0098                     TXSTA           equ	152	;# 
   140     0099                     SPBRG           equ	153	;# 
   141     009C                     CMCON           equ	156	;# 
   142     009D                     CVRCON          equ	157	;# 
   143     009E                     ADRESL          equ	158	;# 
   144     009F                     ADCON1          equ	159	;# 
   145     010C                     EEDATA          equ	268	;# 
   146     010D                     EEADR           equ	269	;# 
   147     010E                     EEDATH          equ	270	;# 
   148     010F                     EEADRH          equ	271	;# 
   149     018C                     EECON1          equ	396	;# 
   150     018D                     EECON2          equ	397	;# 
   151     0000                     INDF            equ	0	;# 
   152     0001                     TMR0            equ	1	;# 
   153     0002                     PCL             equ	2	;# 
   154     0003                     STATUS          equ	3	;# 
   155     0004                     FSR             equ	4	;# 
   156     0005                     PORTA           equ	5	;# 
   157     0006                     PORTB           equ	6	;# 
   158     0007                     PORTC           equ	7	;# 
   159     000A                     PCLATH          equ	10	;# 
   160     000B                     INTCON          equ	11	;# 
   161     000C                     PIR1            equ	12	;# 
   162     000D                     PIR2            equ	13	;# 
   163     000E                     TMR1            equ	14	;# 
   164     000E                     TMR1L           equ	14	;# 
   165     000F                     TMR1H           equ	15	;# 
   166     0010                     T1CON           equ	16	;# 
   167     0011                     TMR2            equ	17	;# 
   168     0012                     T2CON           equ	18	;# 
   169     0013                     SSPBUF          equ	19	;# 
   170     0014                     SSPCON          equ	20	;# 
   171     0015                     CCPR1           equ	21	;# 
   172     0015                     CCPR1L          equ	21	;# 
   173     0016                     CCPR1H          equ	22	;# 
   174     0017                     CCP1CON         equ	23	;# 
   175     0018                     RCSTA           equ	24	;# 
   176     0019                     TXREG           equ	25	;# 
   177     001A                     RCREG           equ	26	;# 
   178     001B                     CCPR2           equ	27	;# 
   179     001B                     CCPR2L          equ	27	;# 
   180     001C                     CCPR2H          equ	28	;# 
   181     001D                     CCP2CON         equ	29	;# 
   182     001E                     ADRESH          equ	30	;# 
   183     001F                     ADCON0          equ	31	;# 
   184     0081                     OPTION_REG      equ	129	;# 
   185     0085                     TRISA           equ	133	;# 
   186     0086                     TRISB           equ	134	;# 
   187     0087                     TRISC           equ	135	;# 
   188     008C                     PIE1            equ	140	;# 
   189     008D                     PIE2            equ	141	;# 
   190     008E                     PCON            equ	142	;# 
   191     0091                     SSPCON2         equ	145	;# 
   192     0092                     PR2             equ	146	;# 
   193     0093                     SSPADD          equ	147	;# 
   194     0094                     SSPSTAT         equ	148	;# 
   195     0098                     TXSTA           equ	152	;# 
   196     0099                     SPBRG           equ	153	;# 
   197     009C                     CMCON           equ	156	;# 
   198     009D                     CVRCON          equ	157	;# 
   199     009E                     ADRESL          equ	158	;# 
   200     009F                     ADCON1          equ	159	;# 
   201     010C                     EEDATA          equ	268	;# 
   202     010D                     EEADR           equ	269	;# 
   203     010E                     EEDATH          equ	270	;# 
   204     010F                     EEADRH          equ	271	;# 
   205     018C                     EECON1          equ	396	;# 
   206     018D                     EECON2          equ	397	;# 
   207     0000                     INDF            equ	0	;# 
   208     0001                     TMR0            equ	1	;# 
   209     0002                     PCL             equ	2	;# 
   210     0003                     STATUS          equ	3	;# 
   211     0004                     FSR             equ	4	;# 
   212     0005                     PORTA           equ	5	;# 
   213     0006                     PORTB           equ	6	;# 
   214     0007                     PORTC           equ	7	;# 
   215     000A                     PCLATH          equ	10	;# 
   216     000B                     INTCON          equ	11	;# 
   217     000C                     PIR1            equ	12	;# 
   218     000D                     PIR2            equ	13	;# 
   219     000E                     TMR1            equ	14	;# 
   220     000E                     TMR1L           equ	14	;# 
   221     000F                     TMR1H           equ	15	;# 
   222     0010                     T1CON           equ	16	;# 
   223     0011                     TMR2            equ	17	;# 
   224     0012                     T2CON           equ	18	;# 
   225     0013                     SSPBUF          equ	19	;# 
   226     0014                     SSPCON          equ	20	;# 
   227     0015                     CCPR1           equ	21	;# 
   228     0015                     CCPR1L          equ	21	;# 
   229     0016                     CCPR1H          equ	22	;# 
   230     0017                     CCP1CON         equ	23	;# 
   231     0018                     RCSTA           equ	24	;# 
   232     0019                     TXREG           equ	25	;# 
   233     001A                     RCREG           equ	26	;# 
   234     001B                     CCPR2           equ	27	;# 
   235     001B                     CCPR2L          equ	27	;# 
   236     001C                     CCPR2H          equ	28	;# 
   237     001D                     CCP2CON         equ	29	;# 
   238     001E                     ADRESH          equ	30	;# 
   239     001F                     ADCON0          equ	31	;# 
   240     0081                     OPTION_REG      equ	129	;# 
   241     0085                     TRISA           equ	133	;# 
   242     0086                     TRISB           equ	134	;# 
   243     0087                     TRISC           equ	135	;# 
   244     008C                     PIE1            equ	140	;# 
   245     008D                     PIE2            equ	141	;# 
   246     008E                     PCON            equ	142	;# 
   247     0091                     SSPCON2         equ	145	;# 
   248     0092                     PR2             equ	146	;# 
   249     0093                     SSPADD          equ	147	;# 
   250     0094                     SSPSTAT         equ	148	;# 
   251     0098                     TXSTA           equ	152	;# 
   252     0099                     SPBRG           equ	153	;# 
   253     009C                     CMCON           equ	156	;# 
   254     009D                     CVRCON          equ	157	;# 
   255     009E                     ADRESL          equ	158	;# 
   256     009F                     ADCON1          equ	159	;# 
   257     010C                     EEDATA          equ	268	;# 
   258     010D                     EEADR           equ	269	;# 
   259     010E                     EEDATH          equ	270	;# 
   260     010F                     EEADRH          equ	271	;# 
   261     018C                     EECON1          equ	396	;# 
   262     018D                     EECON2          equ	397	;# 
   263     0000                     INDF            equ	0	;# 
   264     0001                     TMR0            equ	1	;# 
   265     0002                     PCL             equ	2	;# 
   266     0003                     STATUS          equ	3	;# 
   267     0004                     FSR             equ	4	;# 
   268     0005                     PORTA           equ	5	;# 
   269     0006                     PORTB           equ	6	;# 
   270     0007                     PORTC           equ	7	;# 
   271     000A                     PCLATH          equ	10	;# 
   272     000B                     INTCON          equ	11	;# 
   273     000C                     PIR1            equ	12	;# 
   274     000D                     PIR2            equ	13	;# 
   275     000E                     TMR1            equ	14	;# 
   276     000E                     TMR1L           equ	14	;# 
   277     000F                     TMR1H           equ	15	;# 
   278     0010                     T1CON           equ	16	;# 
   279     0011                     TMR2            equ	17	;# 
   280     0012                     T2CON           equ	18	;# 
   281     0013                     SSPBUF          equ	19	;# 
   282     0014                     SSPCON          equ	20	;# 
   283     0015                     CCPR1           equ	21	;# 
   284     0015                     CCPR1L          equ	21	;# 
   285     0016                     CCPR1H          equ	22	;# 
   286     0017                     CCP1CON         equ	23	;# 
   287     0018                     RCSTA           equ	24	;# 
   288     0019                     TXREG           equ	25	;# 
   289     001A                     RCREG           equ	26	;# 
   290     001B                     CCPR2           equ	27	;# 
   291     001B                     CCPR2L          equ	27	;# 
   292     001C                     CCPR2H          equ	28	;# 
   293     001D                     CCP2CON         equ	29	;# 
   294     001E                     ADRESH          equ	30	;# 
   295     001F                     ADCON0          equ	31	;# 
   296     0081                     OPTION_REG      equ	129	;# 
   297     0085                     TRISA           equ	133	;# 
   298     0086                     TRISB           equ	134	;# 
   299     0087                     TRISC           equ	135	;# 
   300     008C                     PIE1            equ	140	;# 
   301     008D                     PIE2            equ	141	;# 
   302     008E                     PCON            equ	142	;# 
   303     0091                     SSPCON2         equ	145	;# 
   304     0092                     PR2             equ	146	;# 
   305     0093                     SSPADD          equ	147	;# 
   306     0094                     SSPSTAT         equ	148	;# 
   307     0098                     TXSTA           equ	152	;# 
   308     0099                     SPBRG           equ	153	;# 
   309     009C                     CMCON           equ	156	;# 
   310     009D                     CVRCON          equ	157	;# 
   311     009E                     ADRESL          equ	158	;# 
   312     009F                     ADCON1          equ	159	;# 
   313     010C                     EEDATA          equ	268	;# 
   314     010D                     EEADR           equ	269	;# 
   315     010E                     EEDATH          equ	270	;# 
   316     010F                     EEADRH          equ	271	;# 
   317     018C                     EECON1          equ	396	;# 
   318     018D                     EECON2          equ	397	;# 
   319     0000                     INDF            equ	0	;# 
   320     0001                     TMR0            equ	1	;# 
   321     0002                     PCL             equ	2	;# 
   322     0003                     STATUS          equ	3	;# 
   323     0004                     FSR             equ	4	;# 
   324     0005                     PORTA           equ	5	;# 
   325     0006                     PORTB           equ	6	;# 
   326     0007                     PORTC           equ	7	;# 
   327     000A                     PCLATH          equ	10	;# 
   328     000B                     INTCON          equ	11	;# 
   329     000C                     PIR1            equ	12	;# 
   330     000D                     PIR2            equ	13	;# 
   331     000E                     TMR1            equ	14	;# 
   332     000E                     TMR1L           equ	14	;# 
   333     000F                     TMR1H           equ	15	;# 
   334     0010                     T1CON           equ	16	;# 
   335     0011                     TMR2            equ	17	;# 
   336     0012                     T2CON           equ	18	;# 
   337     0013                     SSPBUF          equ	19	;# 
   338     0014                     SSPCON          equ	20	;# 
   339     0015                     CCPR1           equ	21	;# 
   340     0015                     CCPR1L          equ	21	;# 
   341     0016                     CCPR1H          equ	22	;# 
   342     0017                     CCP1CON         equ	23	;# 
   343     0018                     RCSTA           equ	24	;# 
   344     0019                     TXREG           equ	25	;# 
   345     001A                     RCREG           equ	26	;# 
   346     001B                     CCPR2           equ	27	;# 
   347     001B                     CCPR2L          equ	27	;# 
   348     001C                     CCPR2H          equ	28	;# 
   349     001D                     CCP2CON         equ	29	;# 
   350     001E                     ADRESH          equ	30	;# 
   351     001F                     ADCON0          equ	31	;# 
   352     0081                     OPTION_REG      equ	129	;# 
   353     0085                     TRISA           equ	133	;# 
   354     0086                     TRISB           equ	134	;# 
   355     0087                     TRISC           equ	135	;# 
   356     008C                     PIE1            equ	140	;# 
   357     008D                     PIE2            equ	141	;# 
   358     008E                     PCON            equ	142	;# 
   359     0091                     SSPCON2         equ	145	;# 
   360     0092                     PR2             equ	146	;# 
   361     0093                     SSPADD          equ	147	;# 
   362     0094                     SSPSTAT         equ	148	;# 
   363     0098                     TXSTA           equ	152	;# 
   364     0099                     SPBRG           equ	153	;# 
   365     009C                     CMCON           equ	156	;# 
   366     009D                     CVRCON          equ	157	;# 
   367     009E                     ADRESL          equ	158	;# 
   368     009F                     ADCON1          equ	159	;# 
   369     010C                     EEDATA          equ	268	;# 
   370     010D                     EEADR           equ	269	;# 
   371     010E                     EEDATH          equ	270	;# 
   372     010F                     EEADRH          equ	271	;# 
   373     018C                     EECON1          equ	396	;# 
   374     018D                     EECON2          equ	397	;# 
   375                           
   376                           	psect	idataBANK0
   377     0B43                     __pidataBANK0:
   378                           
   379                           ;initializer for _columna
   380     0B43  3401               	retlw	1
   381     0B44  3400               	retlw	0
   382                           
   383                           ;initializer for _renglon
   384     0B45  3401               	retlw	1
   385     0B46  3400               	retlw	0
   386                           
   387                           ;initializer for _lenMap
   388     0B47  3404               	retlw	4
   389                           
   390                           ;initializer for _map
   391     0B48  3405               	retlw	low ((_idxRef-__stringbase)| (0+32768))
   392                           
   393                           ;initializer for _activeBuf
   394     0B49  34D3               	retlw	low (_ref0| 0)
   395                           
   396                           ;initializer for _line0
   397     0B4A  3441               	retlw	65
   398     0B4B  3431               	retlw	49
   399     0B4C  343A               	retlw	58
   400     0B4D  3430               	retlw	48
   401     0B4E  342E               	retlw	46
   402     0B4F  3430               	retlw	48
   403     0B50  3432               	retlw	50
   404     0B51  343A               	retlw	58
   405     0B52  3430               	retlw	48
   406     0B53  342E               	retlw	46
   407     0B54  3430               	retlw	48
   408     0B55  3433               	retlw	51
   409     0B56  343A               	retlw	58
   410     0B57  3430               	retlw	48
   411     0B58  342E               	retlw	46
   412     0B59  3430               	retlw	48
   413     0B5A  3400               	retlw	0
   414                           
   415                           	psect	idataBANK1
   416     0D99                     __pidataBANK1:
   417                           
   418                           ;initializer for _pwmStr
   419     0D99  3446               	retlw	70
   420     0D9A  343A               	retlw	58
   421     0D9B  3430               	retlw	48
   422     0D9C  3431               	retlw	49
   423     0D9D  346B               	retlw	107
   424     0D9E  3444               	retlw	68
   425     0D9F  343A               	retlw	58
   426     0DA0  3430               	retlw	48
   427     0DA1  3430               	retlw	48
   428     0DA2  3420               	retlw	32
   429     0DA3  3420               	retlw	32
   430     0DA4  3420               	retlw	32
   431     0DA5  3420               	retlw	32
   432     0DA6  3420               	retlw	32
   433     0DA7  3420               	retlw	32
   434     0DA8  3420               	retlw	32
   435     0DA9  3400               	retlw	0
   436                           
   437                           ;initializer for _cntStr
   438     0DAA  3443               	retlw	67
   439     0DAB  344E               	retlw	78
   440     0DAC  3454               	retlw	84
   441     0DAD  343A               	retlw	58
   442     0DAE  3430               	retlw	48
   443     0DAF  3430               	retlw	48
   444     0DB0  3430               	retlw	48
   445     0DB1  3430               	retlw	48
   446     0DB2  3430               	retlw	48
   447     0DB3  3420               	retlw	32
   448     0DB4  3420               	retlw	32
   449     0DB5  3420               	retlw	32
   450     0DB6  3420               	retlw	32
   451     0DB7  3420               	retlw	32
   452     0DB8  3420               	retlw	32
   453     0DB9  3420               	retlw	32
   454     0DBA  3400               	retlw	0
   455                           
   456                           ;initializer for _ref1
   457     0DBB  3456               	retlw	86
   458     0DBC  346F               	retlw	111
   459     0DBD  346C               	retlw	108
   460     0DBE  3474               	retlw	116
   461     0DBF  3461               	retlw	97
   462     0DC0  346A               	retlw	106
   463     0DC1  3465               	retlw	101
   464     0DC2  3473               	retlw	115
   465     0DC3  3420               	retlw	32
   466     0DC4  344E               	retlw	78
   467     0DC5  346F               	retlw	111
   468     0DC6  342E               	retlw	46
   469     0DC7  3432               	retlw	50
   470     0DC8  3420               	retlw	32
   471     0DC9  3420               	retlw	32
   472     0DCA  3420               	retlw	32
   473     0DCB  3400               	retlw	0
   474                           
   475                           ;initializer for _ref0
   476     0DCC  3452               	retlw	82
   477     0DCD  3431               	retlw	49
   478     0DCE  343A               	retlw	58
   479     0DCF  342D               	retlw	45
   480     0DD0  342E               	retlw	46
   481     0DD1  342D               	retlw	45
   482     0DD2  342A               	retlw	42
   483     0DD3  342A               	retlw	42
   484     0DD4  342A               	retlw	42
   485     0DD5  342A               	retlw	42
   486     0DD6  3452               	retlw	82
   487     0DD7  3433               	retlw	51
   488     0DD8  343A               	retlw	58
   489     0DD9  342D               	retlw	45
   490     0DDA  342E               	retlw	46
   491     0DDB  342D               	retlw	45
   492     0DDC  3400               	retlw	0
   493                           
   494                           	psect	strings
   495     0800                     __pstrings:
   496     0800                     stringtab:
   497     0800                     __stringtab:
   498                           
   499                           ;	String table - string pointers are 1 byte each
   500     0800  1BFF               	btfsc	btemp+1,7
   501     0801  280A               	ljmp	stringcode
   502     0802  1383               	bcf	3,7
   503     0803  187F               	btfsc	btemp+1,0
   504     0804  1783               	bsf	3,7
   505     0805  0800               	movf	0,w
   506     0806  0A84               	incf	4,f
   507     0807  1903               	skipnz
   508     0808  0AFF               	incf	btemp+1,f
   509     0809  0008               	return
   510     080A                     stringcode:
   511     080A                     stringdir:
   512     080A  3008               	movlw	high stringdir
   513     080B  008A               	movwf	10
   514     080C  0804               	movf	4,w
   515     080D  0A84               	incf	4,f
   516     080E  0782               	addwf	2,f
   517     080F                     __stringbase:
   518     080F  3400               	retlw	0
   519     0810                     __end_of__stringtab:
   520     0810                     _idxPWM:
   521     0810  3402               	retlw	2
   522     0811  3403               	retlw	3
   523     0812  3407               	retlw	7
   524     0813  3408               	retlw	8
   525     0814                     __end_of_idxPWM:
   526     0814                     _idxRef:
   527     0814  3403               	retlw	3
   528     0815  3405               	retlw	5
   529     0816  340D               	retlw	13
   530     0817  340F               	retlw	15
   531     0818                     __end_of_idxRef:
   532     0006                     _PORTBbits      set	6
   533     0001                     _TMR0           set	1
   534     0007                     _PORTCbits      set	7
   535     001D                     _CCP2CONbits    set	29
   536     001B                     _CCPR2L         set	27
   537     001D                     _CCP2CON        set	29
   538     0017                     _CCP1CONbits    set	23
   539     0015                     _CCPR1L         set	21
   540     0012                     _T2CON          set	18
   541     0017                     _CCP1CON        set	23
   542     001E                     _ADRESH         set	30
   543     001F                     _ADCON0bits     set	31
   544     001F                     _ADCON0         set	31
   545     001A                     _RCREG          set	26
   546     005F                     _GIE            set	95
   547     005D                     _T0IE           set	93
   548     00FA                     _GO_nDONE       set	250
   549     005A                     _T0IF           set	90
   550     0065                     _RCIF           set	101
   551     0086                     _TRISBbits      set	134
   552     0081                     _OPTION_REG     set	129
   553     0092                     _PR2            set	146
   554     0087                     _TRISCbits      set	135
   555     009E                     _ADRESL         set	158
   556     009F                     _ADCON1         set	159
   557     0085                     _TRISAbits      set	133
   558     0818                     STR_1:
   559     0818  3453               	retlw	83	;'S'
   560     0819  3445               	retlw	69	;'E'
   561     081A  3447               	retlw	71	;'G'
   562     081B  3455               	retlw	85	;'U'
   563     081C  344E               	retlw	78	;'N'
   564     081D  3444               	retlw	68	;'D'
   565     081E  3441               	retlw	65	;'A'
   566     081F  3420               	retlw	32	;' '
   567     0820  3450               	retlw	80	;'P'
   568     0821  3441               	retlw	65	;'A'
   569     0822  344E               	retlw	78	;'N'
   570     0823  3454               	retlw	84	;'T'
   571     0824  3441               	retlw	65	;'A'
   572     0825  344C               	retlw	76	;'L'
   573     0826  344C               	retlw	76	;'L'
   574     0827  3441               	retlw	65	;'A'
   575     0828  3400               	retlw	0
   576     0829                     STR_3:
   577     0829  3453               	retlw	83	;'S'
   578     082A  3465               	retlw	101	;'e'
   579     082B  3467               	retlw	103	;'g'
   580     082C  3475               	retlw	117	;'u'
   581     082D  346E               	retlw	110	;'n'
   582     082E  3464               	retlw	100	;'d'
   583     082F  346F               	retlw	111	;'o'
   584     0830  3420               	retlw	32	;' '
   585     0831  3450               	retlw	80	;'P'
   586     0832  3457               	retlw	87	;'W'
   587     0833  344D               	retlw	77	;'M'
   588     0834  3400               	retlw	0
   589     0818                     STR_2           equ	STR_1
   590                           
   591                           	psect	cinit
   592     000F                     start_initialization:	
   593                           ; #config settings
   594                           
   595     000F                     __initialization:
   596                           
   597                           ; Initialize objects allocated to BANK1
   598     000F  1383               	bcf	3,7	;select IRP bank0
   599     0010  30E4               	movlw	low (__pdataBANK1+68)
   600     0011  00FD               	movwf	btemp+-1
   601     0012  300D               	movlw	high __pidataBANK1
   602     0013  00FE               	movwf	btemp
   603     0014  3099               	movlw	low __pidataBANK1
   604     0015  00FF               	movwf	btemp+1
   605     0016  30A0               	movlw	low __pdataBANK1
   606     0017  0084               	movwf	4
   607     0018  158A  230D  118A   	fcall	init_ram0
   608                           
   609                           ; Initialize objects allocated to BANK0
   610     001B  3059               	movlw	low (__pdataBANK0+24)
   611     001C  00FD               	movwf	btemp+-1
   612     001D  300B               	movlw	high __pidataBANK0
   613     001E  00FE               	movwf	btemp
   614     001F  3043               	movlw	low __pidataBANK0
   615     0020  00FF               	movwf	btemp+1
   616     0021  3041               	movlw	low __pdataBANK0
   617     0022  0084               	movwf	4
   618     0023  158A  230D  118A   	fcall	init_ram0
   619                           
   620                           ; Clear objects allocated to BANK0
   621     0026  01D9               	clrf	__pbssBANK0& (0+127)
   622     0027  01DA               	clrf	(__pbssBANK0+1)& (0+127)
   623     0028  01DB               	clrf	(__pbssBANK0+2)& (0+127)
   624     0029  01DC               	clrf	(__pbssBANK0+3)& (0+127)
   625     002A  01DD               	clrf	(__pbssBANK0+4)& (0+127)
   626     002B  01DE               	clrf	(__pbssBANK0+5)& (0+127)
   627     002C  01DF               	clrf	(__pbssBANK0+6)& (0+127)
   628     002D  01E0               	clrf	(__pbssBANK0+7)& (0+127)
   629     002E  01E1               	clrf	(__pbssBANK0+8)& (0+127)
   630     002F                     end_of_initialization:	
   631                           ;End of C runtime variable initialization code
   632                           
   633     002F                     __end_of__initialization:
   634     002F  0183               	clrf	3
   635     0030  118A  2832         	ljmp	_main	;jump to C main() function
   636                           
   637                           	psect	bssBANK0
   638     0059                     __pbssBANK0:
   639     0059                     _pulseCnt:
   640     0059                     	ds	2
   641     005B                     ISR@st:
   642     005B                     	ds	1
   643     005C                     ISR@rChr:
   644     005C                     	ds	1
   645     005D                     ISR@rCol:
   646     005D                     	ds	1
   647     005E                     ISR@rRow:
   648     005E                     	ds	1
   649     005F                     _key:
   650     005F                     	ds	1
   651     0060                     _pos:
   652     0060                     	ds	1
   653     0061                     _page:
   654     0061                     	ds	1
   655                           
   656                           	psect	dataBANK0
   657     0041                     __pdataBANK0:
   658     0041                     _columna:
   659     0041                     	ds	2
   660     0043                     _renglon:
   661     0043                     	ds	2
   662     0045                     _lenMap:
   663     0045                     	ds	1
   664     0046                     _map:
   665     0046                     	ds	1
   666     0047                     _activeBuf:
   667     0047                     	ds	1
   668     0048                     _line0:
   669     0048                     	ds	17
   670                           
   671                           	psect	dataBANK1
   672     00A0                     __pdataBANK1:
   673     00A0                     _pwmStr:
   674     00A0                     	ds	17
   675     00B1                     _cntStr:
   676     00B1                     	ds	17
   677     00C2                     _ref1:
   678     00C2                     	ds	17
   679     00D3                     _ref0:
   680     00D3                     	ds	17
   681                           
   682                           	psect	inittext
   683     0B09                     init_fetch0:	
   684                           ;	Called with low address in FSR and high address in W
   685                           
   686     0B09  087E               	movf	btemp,w
   687     0B0A  008A               	movwf	10
   688     0B0B  087F               	movf	btemp+1,w
   689     0B0C  0082               	movwf	2
   690     0B0D                     init_ram0:	
   691                           ;Called with:
   692                           ;	high address of idata address in btemp 
   693                           ;	low address of idata address in btemp+1 
   694                           ;	low address of data in FSR
   695                           ;	high address + 1 of data in btemp-1
   696                           
   697     0B0D  158A  2309  158A   	fcall	init_fetch0
   698     0B10  0080               	movwf	0
   699     0B11  0A84               	incf	4,f
   700     0B12  0804               	movf	4,w
   701     0B13  067D               	xorwf	btemp+-1,w
   702     0B14  1903               	btfsc	3,2
   703     0B15  3400               	retlw	0
   704     0B16  0AFF               	incf	btemp+1,f
   705     0B17  1903               	btfsc	3,2
   706     0B18  0AFE               	incf	btemp,f
   707     0B19  2B0D               	goto	init_ram0
   708                           
   709                           	psect	cstackBANK1
   710     00E4                     __pcstackBANK1:
   711     00E4                     main@k:
   712                           
   713                           ; 1 bytes @ 0x0
   714     00E4                     	ds	1
   715     00E5                     main@d:
   716                           
   717                           ; 1 bytes @ 0x1
   718     00E5                     	ds	1
   719     00E6                     _main$349:
   720                           
   721                           ; 2 bytes @ 0x2
   722     00E6                     	ds	2
   723     00E8                     _main$350:
   724                           
   725                           ; 2 bytes @ 0x4
   726     00E8                     	ds	2
   727     00EA                     _main$351:
   728                           
   729                           ; 2 bytes @ 0x6
   730     00EA                     	ds	2
   731     00EC                     _main$344:
   732                           
   733                           ; 1 bytes @ 0x8
   734     00EC                     	ds	1
   735     00ED                     _main$347:
   736                           
   737                           ; 1 bytes @ 0x9
   738     00ED                     	ds	1
   739     00EE                     main@d0:
   740                           
   741                           ; 1 bytes @ 0xA
   742     00EE                     	ds	1
   743     00EF                     main@d1:
   744                           
   745                           ; 1 bytes @ 0xB
   746     00EF                     	ds	1
   747     00F0                     main@d2:
   748                           
   749                           ; 1 bytes @ 0xC
   750     00F0                     	ds	1
   751     00F1                     main@r1:
   752                           
   753                           ; 1 bytes @ 0xD
   754     00F1                     	ds	1
   755     00F2                     main@r3:
   756                           
   757                           ; 1 bytes @ 0xE
   758     00F2                     	ds	1
   759     00F3                     main@total:
   760                           
   761                           ; 2 bytes @ 0xF
   762     00F3                     	ds	2
   763                           
   764                           	psect	cstackCOMMON
   765     0000                     __pcstackCOMMON:
   766     0000                     ??_Lcd_Blink:
   767     0000                     ??_Lcd_NoBlink:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0000                     ??_Keypad_Init:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0000                     ??_toDeciv:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0000                     ??_PWM_LED_Init:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0000                     ??_PWM1_Init:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0000                     ??_cursorLCD:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0000                     ??_showPage:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0000                     ??_Lcd_Port:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0000                     ??___wmul:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0000                     ??___bmul:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0000                     ??___awdiv:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0000                     ??___awmod:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0000                     ??___lwdiv:	
   804                           ; 1 bytes @ 0x0
   805                           
   806     0000                     ??___lwmod:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0000                     ??i1_Lcd_Port:	
   810                           ; 1 bytes @ 0x0
   811                           
   812                           
   813                           	psect	cstackBANK0
   814     0020                     __pcstackBANK0:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0020                     ?_Lcd_Write_Char:
   818     0020                     ?_Lcd_Clear:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0020                     ?_Lcd_Blink:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0020                     ?_Lcd_NoBlink:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0020                     ?_Keypad_Init:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0020                     ?_Lcd_Init:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0020                     ?_Keypad_Get_Char:	
   834                           ; 1 bytes @ 0x0
   835                           
   836     0020                     ?_ISR:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0020                     ?_ADC_Init:	
   840                           ; 1 bytes @ 0x0
   841                           
   842     0020                     ?_PWM_LED_Init:	
   843                           ; 1 bytes @ 0x0
   844                           
   845     0020                     ?_PWM_LED_Set:	
   846                           ; 1 bytes @ 0x0
   847                           
   848     0020                     ?_PWM1_Init:	
   849                           ; 1 bytes @ 0x0
   850                           
   851     0020                     ?_cursorLCD:	
   852                           ; 1 bytes @ 0x0
   853                           
   854     0020                     ?_showPage:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0020                     ?_main:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0020                     ?_Lcd_Port:	
   861                           ; 1 bytes @ 0x0
   862                           
   863     0020                     ?_Lcd_Cmd:	
   864                           ; 1 bytes @ 0x0
   865                           
   866     0020                     ?i1_Lcd_Port:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0020                     ?i1_Lcd_Cmd:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0020                     ?i1_Lcd_Write_Char:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0020                     i1Lcd_Port@a:	
   876                           ; 1 bytes @ 0x0
   877                           
   878                           
   879                           ; 1 bytes @ 0x0
   880     0020                     	ds	1
   881     0021                     ??i1_Lcd_Cmd:
   882     0021                     ??i1_Lcd_Write_Char:	
   883                           ; 1 bytes @ 0x1
   884                           
   885                           
   886                           ; 1 bytes @ 0x1
   887     0021                     	ds	1
   888     0022                     i1Lcd_Write_Char@temp:
   889                           
   890                           ; 1 bytes @ 0x2
   891     0022                     	ds	1
   892     0023                     i1Lcd_Cmd@a:
   893     0023                     i1Lcd_Write_Char@y:	
   894                           ; 1 bytes @ 0x3
   895                           
   896                           
   897                           ; 1 bytes @ 0x3
   898     0023                     	ds	1
   899     0024                     ?i1_Lcd_Set_Cursor:
   900     0024                     i1Lcd_Set_Cursor@b:	
   901                           ; 1 bytes @ 0x4
   902                           
   903     0024                     i1Lcd_Write_Char@a:	
   904                           ; 1 bytes @ 0x4
   905                           
   906                           
   907                           ; 1 bytes @ 0x4
   908     0024                     	ds	1
   909     0025                     ??i1_Lcd_Set_Cursor:
   910                           
   911                           ; 1 bytes @ 0x5
   912     0025                     	ds	1
   913     0026                     i1Lcd_Set_Cursor@a:
   914                           
   915                           ; 1 bytes @ 0x6
   916     0026                     	ds	1
   917     0027                     i1Lcd_Set_Cursor@z:
   918                           
   919                           ; 1 bytes @ 0x7
   920     0027                     	ds	1
   921     0028                     i1Lcd_Set_Cursor@y:
   922                           
   923                           ; 1 bytes @ 0x8
   924     0028                     	ds	1
   925     0029                     i1Lcd_Set_Cursor@temp:
   926                           
   927                           ; 1 bytes @ 0x9
   928     0029                     	ds	1
   929     002A                     ??_ISR:
   930                           
   931                           ; 1 bytes @ 0xA
   932     002A                     	ds	2
   933     002C                     ISR@d:
   934                           
   935                           ; 1 bytes @ 0xC
   936     002C                     	ds	1
   937     002D                     ?___bmul:
   938     002D                     ?_adcRead:	
   939                           ; 1 bytes @ 0xD
   940                           
   941     002D                     ?___wmul:	
   942                           ; 2 bytes @ 0xD
   943                           
   944     002D                     ?___awdiv:	
   945                           ; 2 bytes @ 0xD
   946                           
   947     002D                     ?___awmod:	
   948                           ; 2 bytes @ 0xD
   949                           
   950     002D                     Lcd_Port@a:	
   951                           ; 2 bytes @ 0xD
   952                           
   953     002D                     ___bmul@multiplicand:	
   954                           ; 1 bytes @ 0xD
   955                           
   956     002D                     ___wmul@multiplier:	
   957                           ; 1 bytes @ 0xD
   958                           
   959     002D                     ___awdiv@divisor:	
   960                           ; 2 bytes @ 0xD
   961                           
   962     002D                     ___awmod@divisor:	
   963                           ; 2 bytes @ 0xD
   964                           
   965     002D                     ??_Keypad_Get_Char:	
   966                           ; 2 bytes @ 0xD
   967                           
   968     002D                     ??_ADC_Init:	
   969                           ; 1 bytes @ 0xD
   970                           
   971                           
   972                           ; 1 bytes @ 0xD
   973     002D                     	ds	1
   974     002E                     ___bmul@product:
   975     002E                     ??_Lcd_Write_Char:	
   976                           ; 1 bytes @ 0xE
   977                           
   978     002E                     ??_Lcd_Cmd:	
   979                           ; 1 bytes @ 0xE
   980                           
   981                           
   982                           ; 1 bytes @ 0xE
   983     002E                     	ds	1
   984     002F                     Lcd_Write_Char@temp:
   985     002F                     ___bmul@multiplier:	
   986                           ; 1 bytes @ 0xF
   987                           
   988     002F                     ___wmul@multiplicand:	
   989                           ; 1 bytes @ 0xF
   990                           
   991     002F                     ___awdiv@dividend:	
   992                           ; 2 bytes @ 0xF
   993                           
   994     002F                     ___awmod@dividend:	
   995                           ; 2 bytes @ 0xF
   996                           
   997     002F                     ??_adcRead:	
   998                           ; 2 bytes @ 0xF
   999                           
  1000                           
  1001                           ; 1 bytes @ 0xF
  1002     002F                     	ds	1
  1003     0030                     ?_refToDeciv:
  1004     0030                     adcRead@ch:	
  1005                           ; 1 bytes @ 0x10
  1006                           
  1007     0030                     refToDeciv@p:	
  1008                           ; 1 bytes @ 0x10
  1009                           
  1010     0030                     Lcd_Cmd@a:	
  1011                           ; 1 bytes @ 0x10
  1012                           
  1013     0030                     Lcd_Write_Char@y:	
  1014                           ; 1 bytes @ 0x10
  1015                           
  1016                           
  1017                           ; 1 bytes @ 0x10
  1018     0030                     	ds	1
  1019     0031                     ?_Lcd_Set_Cursor:
  1020     0031                     Lcd_Set_Cursor@b:	
  1021                           ; 1 bytes @ 0x11
  1022                           
  1023     0031                     Lcd_Write_Char@a:	
  1024                           ; 1 bytes @ 0x11
  1025                           
  1026     0031                     ___awdiv@counter:	
  1027                           ; 1 bytes @ 0x11
  1028                           
  1029     0031                     ___awmod@counter:	
  1030                           ; 1 bytes @ 0x11
  1031                           
  1032     0031                     ___wmul@product:	
  1033                           ; 1 bytes @ 0x11
  1034                           
  1035     0031                     ??_Lcd_Clear:	
  1036                           ; 2 bytes @ 0x11
  1037                           
  1038     0031                     ??_Lcd_Init:	
  1039                           ; 1 bytes @ 0x11
  1040                           
  1041     0031                     ??_refToDeciv:	
  1042                           ; 1 bytes @ 0x11
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x11
  1046     0031                     	ds	1
  1047     0032                     ?_Lcd_Write_String:
  1048     0032                     ___awdiv@sign:	
  1049                           ; 1 bytes @ 0x12
  1050                           
  1051     0032                     ___awmod@sign:	
  1052                           ; 1 bytes @ 0x12
  1053                           
  1054     0032                     Lcd_Write_String@a:	
  1055                           ; 1 bytes @ 0x12
  1056                           
  1057     0032                     ??_Lcd_Set_Cursor:	
  1058                           ; 2 bytes @ 0x12
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x12
  1062     0032                     	ds	1
  1063     0033                     ?_PWM1_Set:
  1064     0033                     ?___lwdiv:	
  1065                           ; 1 bytes @ 0x13
  1066                           
  1067     0033                     PWM1_Set@duty:	
  1068                           ; 2 bytes @ 0x13
  1069                           
  1070     0033                     Lcd_Set_Cursor@a:	
  1071                           ; 1 bytes @ 0x13
  1072                           
  1073     0033                     ___awdiv@quotient:	
  1074                           ; 1 bytes @ 0x13
  1075                           
  1076     0033                     ___lwdiv@divisor:	
  1077                           ; 2 bytes @ 0x13
  1078                           
  1079     0033                     ??_PWM_LED_Set:	
  1080                           ; 2 bytes @ 0x13
  1081                           
  1082                           
  1083                           ; 1 bytes @ 0x13
  1084     0033                     	ds	1
  1085     0034                     Lcd_Set_Cursor@z:
  1086     0034                     _refToDeciv$305:	
  1087                           ; 1 bytes @ 0x14
  1088                           
  1089     0034                     ??_Lcd_Write_String:	
  1090                           ; 2 bytes @ 0x14
  1091                           
  1092     0034                     ??_PWM1_Set:	
  1093                           ; 1 bytes @ 0x14
  1094                           
  1095                           
  1096                           ; 1 bytes @ 0x14
  1097     0034                     	ds	1
  1098     0035                     ?_buildLine0:
  1099     0035                     buildLine0@d1:	
  1100                           ; 1 bytes @ 0x15
  1101                           
  1102     0035                     Lcd_Set_Cursor@y:	
  1103                           ; 1 bytes @ 0x15
  1104                           
  1105     0035                     ___lwdiv@dividend:	
  1106                           ; 1 bytes @ 0x15
  1107                           
  1108                           
  1109                           ; 2 bytes @ 0x15
  1110     0035                     	ds	1
  1111     0036                     PWM_LED_Set@pct:
  1112     0036                     buildLine0@d2:	
  1113                           ; 1 bytes @ 0x16
  1114                           
  1115     0036                     Lcd_Set_Cursor@temp:	
  1116                           ; 1 bytes @ 0x16
  1117                           
  1118                           
  1119                           ; 1 bytes @ 0x16
  1120     0036                     	ds	1
  1121     0037                     PWM1_Set@kHz:
  1122     0037                     ___lwdiv@counter:	
  1123                           ; 1 bytes @ 0x17
  1124                           
  1125     0037                     PWM_LED_Set@r:	
  1126                           ; 1 bytes @ 0x17
  1127                           
  1128     0037                     Lcd_Write_String@i:	
  1129                           ; 2 bytes @ 0x17
  1130                           
  1131     0037                     ??_buildLine0:	
  1132                           ; 2 bytes @ 0x17
  1133                           
  1134                           
  1135                           ; 1 bytes @ 0x17
  1136     0037                     	ds	1
  1137     0038                     PWM1_Set@r:
  1138     0038                     ___lwdiv@quotient:	
  1139                           ; 2 bytes @ 0x18
  1140                           
  1141                           
  1142                           ; 2 bytes @ 0x18
  1143     0038                     	ds	1
  1144     0039                     buildLine0@d0:
  1145     0039                     showPage@pg:	
  1146                           ; 1 bytes @ 0x19
  1147                           
  1148                           
  1149                           ; 1 bytes @ 0x19
  1150     0039                     	ds	1
  1151     003A                     ?_toDeciv:
  1152     003A                     ?___lwmod:	
  1153                           ; 1 bytes @ 0x1A
  1154                           
  1155     003A                     toDeciv@v:	
  1156                           ; 2 bytes @ 0x1A
  1157                           
  1158     003A                     ___lwmod@divisor:	
  1159                           ; 2 bytes @ 0x1A
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0x1A
  1163     003A                     	ds	2
  1164     003C                     ___lwmod@dividend:
  1165                           
  1166                           ; 2 bytes @ 0x1C
  1167     003C                     	ds	2
  1168     003E                     ___lwmod@counter:
  1169                           
  1170                           ; 1 bytes @ 0x1E
  1171     003E                     	ds	1
  1172     003F                     ??_main:
  1173                           
  1174                           ; 1 bytes @ 0x1F
  1175     003F                     	ds	2
  1176                           
  1177                           	psect	maintext
  1178     0032                     __pmaintext:	
  1179 ;;
  1180 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1181 ;;
  1182 ;; *************** function _main *****************
  1183 ;; Defined at:
  1184 ;;		line 95 in file "Practica-3-main.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  d               1    1[BANK1 ] unsigned char 
  1189 ;;  k               1    0[BANK1 ] unsigned char 
  1190 ;;  total           2   15[BANK1 ] unsigned short 
  1191 ;;  r3              1   14[BANK1 ] unsigned char 
  1192 ;;  r1              1   13[BANK1 ] unsigned char 
  1193 ;;  d2              1   12[BANK1 ] unsigned char 
  1194 ;;  d1              1   11[BANK1 ] unsigned char 
  1195 ;;  d0              1   10[BANK1 ] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : B00/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1
  1205 ;;      Params:         0       0       0
  1206 ;;      Locals:         0       0      17
  1207 ;;      Temps:          0       2       0
  1208 ;;      Totals:         0       2      17
  1209 ;;Total ram usage:       19 bytes
  1210 ;; Hardware stack levels required when called: 9
  1211 ;; This function calls:
  1212 ;;		_ADC_Init
  1213 ;;		_Keypad_Get_Char
  1214 ;;		_Keypad_Init
  1215 ;;		_Lcd_Init
  1216 ;;		_Lcd_Set_Cursor
  1217 ;;		_Lcd_Write_String
  1218 ;;		_PWM1_Init
  1219 ;;		_PWM1_Set
  1220 ;;		_PWM_LED_Init
  1221 ;;		_PWM_LED_Set
  1222 ;;		___bmul
  1223 ;;		___lwdiv
  1224 ;;		___lwmod
  1225 ;;		_adcRead
  1226 ;;		_buildLine0
  1227 ;;		_cursorLCD
  1228 ;;		_refToDeciv
  1229 ;;		_showPage
  1230 ;;		_toDeciv
  1231 ;; This function is called by:
  1232 ;;		Startup code after reset
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236     0032                     _main:	
  1237                           ;psect for function _main
  1238                           
  1239     0032                     l3253:	
  1240                           ;incstack = 0
  1241 ;; hardware stack exceeded
  1242                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1243                           
  1244                           
  1245                           ;Practica-3-main.c: 97:     TRISCbits.TRISC0=0; PORTCbits.RC0=0; TRISCbits.TRISC4=0; POR
      +                          TCbits.RC4=1;
  1246     0032  1683               	bsf	3,5	;RP0=1, select bank1
  1247     0033  1303               	bcf	3,6	;RP1=0, select bank1
  1248     0034  1007               	bcf	7,0	;volatile
  1249     0035  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0036  1303               	bcf	3,6	;RP1=0, select bank0
  1251     0037  1007               	bcf	7,0	;volatile
  1252     0038  1683               	bsf	3,5	;RP0=1, select bank1
  1253     0039  1303               	bcf	3,6	;RP1=0, select bank1
  1254     003A  1207               	bcf	7,4	;volatile
  1255     003B  1283               	bcf	3,5	;RP0=0, select bank0
  1256     003C  1303               	bcf	3,6	;RP1=0, select bank0
  1257     003D  1607               	bsf	7,4	;volatile
  1258     003E                     l3255:
  1259                           
  1260                           ;Practica-3-main.c: 99:     PWM_LED_Init(); PWM1_Init(); ADC_Init();
  1261     003E  158A  22EC  118A   	fcall	_PWM_LED_Init
  1262     0041  158A  22D2  118A   	fcall	_PWM1_Init
  1263     0044                     l3257:
  1264     0044  158A  241A  118A   	fcall	_ADC_Init
  1265     0047                     l3259:
  1266                           
  1267                           ;Practica-3-main.c: 101:     TMR0=0; OPTION_REG=0b00000001; T0IE=1; GIE=1;
  1268     0047  1283               	bcf	3,5	;RP0=0, select bank0
  1269     0048  1303               	bcf	3,6	;RP1=0, select bank0
  1270     0049  0181               	clrf	1	;volatile
  1271     004A                     l3261:
  1272     004A  3001               	movlw	1
  1273     004B  1683               	bsf	3,5	;RP0=1, select bank1
  1274     004C  1303               	bcf	3,6	;RP1=0, select bank1
  1275     004D  0081               	movwf	1	;volatile
  1276     004E                     l3263:
  1277     004E  168B               	bsf	11,5	;volatile
  1278     004F                     l3265:
  1279     004F  178B               	bsf	11,7	;volatile
  1280     0050                     l3267:
  1281                           
  1282                           ;Practica-3-main.c: 103:     Keypad_Init(); Lcd_Init(); showPage(page);
  1283     0050  158A  22CB  118A   	fcall	_Keypad_Init
  1284     0053                     l3269:
  1285     0053  118A  25E5  118A   	fcall	_Lcd_Init
  1286     0056                     l3271:
  1287     0056  1283               	bcf	3,5	;RP0=0, select bank0
  1288     0057  1303               	bcf	3,6	;RP1=0, select bank0
  1289     0058  0861               	movf	_page,w
  1290     0059  118A  252D  118A   	fcall	_showPage
  1291     005C                     l3273:
  1292                           
  1293                           ;Practica-3-main.c: 106:         if(page==0){
  1294     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1295     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1296     005E  0861               	movf	_page,w
  1297     005F  1D03               	btfss	3,2
  1298     0060  2862               	goto	u3631
  1299     0061  2863               	goto	u3630
  1300     0062                     u3631:
  1301     0062  28FC               	goto	l179
  1302     0063                     u3630:
  1303     0063                     l3275:
  1304                           
  1305                           ;Practica-3-main.c: 107:             uint8_t d0=toDeciv(adcRead(0));
  1306     0063  3000               	movlw	0
  1307     0064  158A  2445  118A   	fcall	_adcRead
  1308     0067  1283               	bcf	3,5	;RP0=0, select bank0
  1309     0068  1303               	bcf	3,6	;RP1=0, select bank0
  1310     0069  082E               	movf	?_adcRead+1,w
  1311     006A  00BB               	movwf	toDeciv@v+1
  1312     006B  082D               	movf	?_adcRead,w
  1313     006C  00BA               	movwf	toDeciv@v
  1314     006D  158A  23D1  118A   	fcall	_toDeciv
  1315     0070  1683               	bsf	3,5	;RP0=1, select bank1
  1316     0071  1303               	bcf	3,6	;RP1=0, select bank1
  1317     0072  00EE               	movwf	main@d0^(0+128)
  1318                           
  1319                           ;Practica-3-main.c: 108:             uint8_t d1=toDeciv(adcRead(1));
  1320     0073  3001               	movlw	1
  1321     0074  158A  2445  118A   	fcall	_adcRead
  1322     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1323     0078  1303               	bcf	3,6	;RP1=0, select bank0
  1324     0079  082E               	movf	?_adcRead+1,w
  1325     007A  00BB               	movwf	toDeciv@v+1
  1326     007B  082D               	movf	?_adcRead,w
  1327     007C  00BA               	movwf	toDeciv@v
  1328     007D  158A  23D1  118A   	fcall	_toDeciv
  1329     0080  1683               	bsf	3,5	;RP0=1, select bank1
  1330     0081  1303               	bcf	3,6	;RP1=0, select bank1
  1331     0082  00EF               	movwf	main@d1^(0+128)
  1332                           
  1333                           ;Practica-3-main.c: 109:             uint8_t d2=toDeciv(adcRead(2));
  1334     0083  3002               	movlw	2
  1335     0084  158A  2445  118A   	fcall	_adcRead
  1336     0087  1283               	bcf	3,5	;RP0=0, select bank0
  1337     0088  1303               	bcf	3,6	;RP1=0, select bank0
  1338     0089  082E               	movf	?_adcRead+1,w
  1339     008A  00BB               	movwf	toDeciv@v+1
  1340     008B  082D               	movf	?_adcRead,w
  1341     008C  00BA               	movwf	toDeciv@v
  1342     008D  158A  23D1  118A   	fcall	_toDeciv
  1343     0090  1683               	bsf	3,5	;RP0=1, select bank1
  1344     0091  1303               	bcf	3,6	;RP1=0, select bank1
  1345     0092  00F0               	movwf	main@d2^(0+128)
  1346                           
  1347                           ;Practica-3-main.c: 110:             buildLine0(d0,d1,d2);
  1348     0093  086F               	movf	main@d1^(0+128),w
  1349     0094  1283               	bcf	3,5	;RP0=0, select bank0
  1350     0095  1303               	bcf	3,6	;RP1=0, select bank0
  1351     0096  00B5               	movwf	buildLine0@d1
  1352     0097  1683               	bsf	3,5	;RP0=1, select bank1
  1353     0098  1303               	bcf	3,6	;RP1=0, select bank1
  1354     0099  0870               	movf	main@d2^(0+128),w
  1355     009A  1283               	bcf	3,5	;RP0=0, select bank0
  1356     009B  1303               	bcf	3,6	;RP1=0, select bank0
  1357     009C  00B6               	movwf	buildLine0@d2
  1358     009D  1683               	bsf	3,5	;RP0=1, select bank1
  1359     009E  1303               	bcf	3,6	;RP1=0, select bank1
  1360     009F  086E               	movf	main@d0^(0+128),w
  1361     00A0  158A  2784  118A   	fcall	_buildLine0
  1362                           
  1363                           ;Practica-3-main.c: 111:             Lcd_Set_Cursor(1,1); Lcd_Write_String(line0);
  1364     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1365     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1366     00A5  01B1               	clrf	Lcd_Set_Cursor@b
  1367     00A6  0AB1               	incf	Lcd_Set_Cursor@b,f
  1368     00A7  3001               	movlw	1
  1369     00A8  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  1370     00AB                     l3277:
  1371     00AB  3048               	movlw	(low (_line0| 0))& (0+255)
  1372     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1373     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1374     00AE  00B2               	movwf	Lcd_Write_String@a
  1375     00AF  3000               	movlw	0
  1376     00B0  00B3               	movwf	Lcd_Write_String@a+1
  1377     00B1  158A  266F  118A   	fcall	_Lcd_Write_String
  1378     00B4                     l3279:
  1379                           
  1380                           ;Practica-3-main.c: 113:             uint8_t r1=refToDeciv(&ref0[3]);
  1381     00B4  30D6               	movlw	(low ((_ref0| 0+3)))& (0+255)
  1382     00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1383     00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1384     00B7  00B0               	movwf	refToDeciv@p
  1385     00B8  158A  2477  118A   	fcall	_refToDeciv
  1386     00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1387     00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1388     00BD  00F1               	movwf	main@r1^(0+128)
  1389     00BE                     l3281:
  1390                           
  1391                           ;Practica-3-main.c: 114:             PORTCbits.RC0 = (r1!=255 && d0>r1);
  1392     00BE  01EC               	clrf	_main$344^(0+128)
  1393     00BF                     l3283:
  1394     00BF  0A71               	incf	main@r1^(0+128),w
  1395     00C0  1903               	btfsc	3,2
  1396     00C1  28C3               	goto	u3641
  1397     00C2  28C4               	goto	u3640
  1398     00C3                     u3641:
  1399     00C3  28CC               	goto	l3289
  1400     00C4                     u3640:
  1401     00C4                     l3285:
  1402     00C4  086E               	movf	main@d0^(0+128),w
  1403     00C5  0271               	subwf	main@r1^(0+128),w
  1404     00C6  1803               	skipnc
  1405     00C7  28C9               	goto	u3651
  1406     00C8  28CA               	goto	u3650
  1407     00C9                     u3651:
  1408     00C9  28CC               	goto	l3289
  1409     00CA                     u3650:
  1410     00CA                     l3287:
  1411     00CA  3001               	movlw	1
  1412     00CB  00EC               	movwf	_main$344^(0+128)
  1413     00CC                     l3289:
  1414     00CC  0C6C               	rrf	_main$344^(0+128),w
  1415     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1416     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1417     00CF  1C03               	skipc
  1418     00D0  1007               	bcf	7,0	;volatile
  1419     00D1  1803               	skipnc
  1420     00D2  1407               	bsf	7,0	;volatile
  1421     00D3                     l3291:
  1422                           
  1423                           ;Practica-3-main.c: 116:             PWM_LED_Set(d1*2);
  1424     00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1425     00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1426     00D5  086F               	movf	main@d1^(0+128),w
  1427     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1428     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1429     00D8  00BF               	movwf	??_main
  1430     00D9  073F               	addwf	??_main,w
  1431     00DA  158A  2624  118A   	fcall	_PWM_LED_Set
  1432     00DD                     l3293:
  1433                           
  1434                           ;Practica-3-main.c: 118:             uint8_t r3=refToDeciv(&ref0[13]);
  1435     00DD  30E0               	movlw	(low ((_ref0| 0+13)))& (0+255)
  1436     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1437     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1438     00E0  00B0               	movwf	refToDeciv@p
  1439     00E1  158A  2477  118A   	fcall	_refToDeciv
  1440     00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1441     00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1442     00E6  00F2               	movwf	main@r3^(0+128)
  1443     00E7                     l3295:
  1444                           
  1445                           ;Practica-3-main.c: 119:             PORTCbits.RC4 = (r3!=255 && d2>r3) ? 0 : 1;
  1446     00E7  3001               	movlw	1
  1447     00E8  00ED               	movwf	_main$347^(0+128)
  1448     00E9                     l3297:
  1449     00E9  0A72               	incf	main@r3^(0+128),w
  1450     00EA  1903               	btfsc	3,2
  1451     00EB  28ED               	goto	u3661
  1452     00EC  28EE               	goto	u3660
  1453     00ED                     u3661:
  1454     00ED  28F5               	goto	l3303
  1455     00EE                     u3660:
  1456     00EE                     l3299:
  1457     00EE  0870               	movf	main@d2^(0+128),w
  1458     00EF  0272               	subwf	main@r3^(0+128),w
  1459     00F0  1803               	skipnc
  1460     00F1  28F3               	goto	u3671
  1461     00F2  28F4               	goto	u3670
  1462     00F3                     u3671:
  1463     00F3  28F5               	goto	l3303
  1464     00F4                     u3670:
  1465     00F4                     l3301:
  1466     00F4  01ED               	clrf	_main$347^(0+128)
  1467     00F5                     l3303:
  1468     00F5  0C6D               	rrf	_main$347^(0+128),w
  1469     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1470     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1471     00F8  1C03               	skipc
  1472     00F9  1207               	bcf	7,4	;volatile
  1473     00FA  1803               	skipnc
  1474     00FB  1607               	bsf	7,4	;volatile
  1475     00FC                     l179:	
  1476                           ;Practica-3-main.c: 120:         }
  1477                           
  1478                           
  1479                           ;Practica-3-main.c: 122:         if(page==2){
  1480     00FC  3002               	movlw	2
  1481     00FD  0661               	xorwf	_page,w
  1482     00FE  1D03               	btfss	3,2
  1483     00FF  2901               	goto	u3681
  1484     0100  2902               	goto	u3680
  1485     0101                     u3681:
  1486     0101  29E4               	goto	l3321
  1487     0102                     u3680:
  1488     0102                     l3305:
  1489                           
  1490                           ;Practica-3-main.c: 123:             uint16_t total=pulseCnt+TMR0;
  1491     0102  0801               	movf	1,w	;volatile
  1492     0103  0759               	addwf	_pulseCnt,w	;volatile
  1493     0104  00BF               	movwf	??_main
  1494     0105  085A               	movf	_pulseCnt+1,w	;volatile
  1495     0106  1803               	skipnc
  1496     0107  0A5A               	incf	_pulseCnt+1,w	;volatile
  1497     0108  00C0               	movwf	??_main+1
  1498     0109  083F               	movf	??_main,w
  1499     010A  1683               	bsf	3,5	;RP0=1, select bank1
  1500     010B  1303               	bcf	3,6	;RP1=0, select bank1
  1501     010C  00F3               	movwf	main@total^(0+128)
  1502     010D  1283               	bcf	3,5	;RP0=0, select bank0
  1503     010E  1303               	bcf	3,6	;RP1=0, select bank0
  1504     010F  0840               	movf	??_main+1,w
  1505     0110  1683               	bsf	3,5	;RP0=1, select bank1
  1506     0111  1303               	bcf	3,6	;RP1=0, select bank1
  1507     0112  00F4               	movwf	(main@total+1)^(0+128)
  1508     0113                     l3307:
  1509                           
  1510                           ;Practica-3-main.c: 124:             cntStr[4]=(total/10000)%10+'0';
  1511     0113  300A               	movlw	10
  1512     0114  1283               	bcf	3,5	;RP0=0, select bank0
  1513     0115  1303               	bcf	3,6	;RP1=0, select bank0
  1514     0116  00BA               	movwf	___lwmod@divisor
  1515     0117  3000               	movlw	0
  1516     0118  00BB               	movwf	___lwmod@divisor+1
  1517     0119  3010               	movlw	16
  1518     011A  00B3               	movwf	___lwdiv@divisor
  1519     011B  3027               	movlw	39
  1520     011C  00B4               	movwf	___lwdiv@divisor+1
  1521     011D  1683               	bsf	3,5	;RP0=1, select bank1
  1522     011E  1303               	bcf	3,6	;RP1=0, select bank1
  1523     011F  0874               	movf	(main@total+1)^(0+128),w
  1524     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1525     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1526     0122  00B6               	movwf	___lwdiv@dividend+1
  1527     0123  1683               	bsf	3,5	;RP0=1, select bank1
  1528     0124  1303               	bcf	3,6	;RP1=0, select bank1
  1529     0125  0873               	movf	main@total^(0+128),w
  1530     0126  1283               	bcf	3,5	;RP0=0, select bank0
  1531     0127  1303               	bcf	3,6	;RP1=0, select bank0
  1532     0128  00B5               	movwf	___lwdiv@dividend
  1533     0129  158A  2555  118A   	fcall	___lwdiv
  1534     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1535     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1536     012E  0834               	movf	?___lwdiv+1,w
  1537     012F  00BD               	movwf	___lwmod@dividend+1
  1538     0130  0833               	movf	?___lwdiv,w
  1539     0131  00BC               	movwf	___lwmod@dividend
  1540     0132  158A  251B  118A   	fcall	___lwmod
  1541     0135  1283               	bcf	3,5	;RP0=0, select bank0
  1542     0136  1303               	bcf	3,6	;RP1=0, select bank0
  1543     0137  083A               	movf	?___lwmod,w
  1544     0138  3E30               	addlw	48
  1545     0139  1683               	bsf	3,5	;RP0=1, select bank1
  1546     013A  1303               	bcf	3,6	;RP1=0, select bank1
  1547     013B  00B5               	movwf	(_cntStr^(0+128)+4)
  1548     013C                     l3309:
  1549                           
  1550                           ;Practica-3-main.c: 125:             cntStr[5]=(total/1000)%10+'0';
  1551     013C  300A               	movlw	10
  1552     013D  1283               	bcf	3,5	;RP0=0, select bank0
  1553     013E  1303               	bcf	3,6	;RP1=0, select bank0
  1554     013F  00BA               	movwf	___lwmod@divisor
  1555     0140  3000               	movlw	0
  1556     0141  00BB               	movwf	___lwmod@divisor+1
  1557     0142  30E8               	movlw	232
  1558     0143  00B3               	movwf	___lwdiv@divisor
  1559     0144  3003               	movlw	3
  1560     0145  00B4               	movwf	___lwdiv@divisor+1
  1561     0146  1683               	bsf	3,5	;RP0=1, select bank1
  1562     0147  1303               	bcf	3,6	;RP1=0, select bank1
  1563     0148  0874               	movf	(main@total+1)^(0+128),w
  1564     0149  1283               	bcf	3,5	;RP0=0, select bank0
  1565     014A  1303               	bcf	3,6	;RP1=0, select bank0
  1566     014B  00B6               	movwf	___lwdiv@dividend+1
  1567     014C  1683               	bsf	3,5	;RP0=1, select bank1
  1568     014D  1303               	bcf	3,6	;RP1=0, select bank1
  1569     014E  0873               	movf	main@total^(0+128),w
  1570     014F  1283               	bcf	3,5	;RP0=0, select bank0
  1571     0150  1303               	bcf	3,6	;RP1=0, select bank0
  1572     0151  00B5               	movwf	___lwdiv@dividend
  1573     0152  158A  2555  118A   	fcall	___lwdiv
  1574     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1575     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1576     0157  0834               	movf	?___lwdiv+1,w
  1577     0158  00BD               	movwf	___lwmod@dividend+1
  1578     0159  0833               	movf	?___lwdiv,w
  1579     015A  00BC               	movwf	___lwmod@dividend
  1580     015B  158A  251B  118A   	fcall	___lwmod
  1581     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1582     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1583     0160  083A               	movf	?___lwmod,w
  1584     0161  3E30               	addlw	48
  1585     0162  1683               	bsf	3,5	;RP0=1, select bank1
  1586     0163  1303               	bcf	3,6	;RP1=0, select bank1
  1587     0164  00B6               	movwf	(_cntStr^(0+128)+5)
  1588     0165                     l3311:
  1589                           
  1590                           ;Practica-3-main.c: 126:             cntStr[6]=(total/100)%10+'0';
  1591     0165  300A               	movlw	10
  1592     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1593     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1594     0168  00BA               	movwf	___lwmod@divisor
  1595     0169  3000               	movlw	0
  1596     016A  00BB               	movwf	___lwmod@divisor+1
  1597     016B  3064               	movlw	100
  1598     016C  00B3               	movwf	___lwdiv@divisor
  1599     016D  3000               	movlw	0
  1600     016E  00B4               	movwf	___lwdiv@divisor+1
  1601     016F  1683               	bsf	3,5	;RP0=1, select bank1
  1602     0170  1303               	bcf	3,6	;RP1=0, select bank1
  1603     0171  0874               	movf	(main@total+1)^(0+128),w
  1604     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1605     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1606     0174  00B6               	movwf	___lwdiv@dividend+1
  1607     0175  1683               	bsf	3,5	;RP0=1, select bank1
  1608     0176  1303               	bcf	3,6	;RP1=0, select bank1
  1609     0177  0873               	movf	main@total^(0+128),w
  1610     0178  1283               	bcf	3,5	;RP0=0, select bank0
  1611     0179  1303               	bcf	3,6	;RP1=0, select bank0
  1612     017A  00B5               	movwf	___lwdiv@dividend
  1613     017B  158A  2555  118A   	fcall	___lwdiv
  1614     017E  1283               	bcf	3,5	;RP0=0, select bank0
  1615     017F  1303               	bcf	3,6	;RP1=0, select bank0
  1616     0180  0834               	movf	?___lwdiv+1,w
  1617     0181  00BD               	movwf	___lwmod@dividend+1
  1618     0182  0833               	movf	?___lwdiv,w
  1619     0183  00BC               	movwf	___lwmod@dividend
  1620     0184  158A  251B  118A   	fcall	___lwmod
  1621     0187  1283               	bcf	3,5	;RP0=0, select bank0
  1622     0188  1303               	bcf	3,6	;RP1=0, select bank0
  1623     0189  083A               	movf	?___lwmod,w
  1624     018A  3E30               	addlw	48
  1625     018B  1683               	bsf	3,5	;RP0=1, select bank1
  1626     018C  1303               	bcf	3,6	;RP1=0, select bank1
  1627     018D  00B7               	movwf	(_cntStr^(0+128)+6)
  1628     018E                     l3313:
  1629                           
  1630                           ;Practica-3-main.c: 127:             cntStr[7]=(total/10)%10+'0';
  1631     018E  300A               	movlw	10
  1632     018F  1283               	bcf	3,5	;RP0=0, select bank0
  1633     0190  1303               	bcf	3,6	;RP1=0, select bank0
  1634     0191  00BA               	movwf	___lwmod@divisor
  1635     0192  3000               	movlw	0
  1636     0193  00BB               	movwf	___lwmod@divisor+1
  1637     0194  300A               	movlw	10
  1638     0195  00B3               	movwf	___lwdiv@divisor
  1639     0196  3000               	movlw	0
  1640     0197  00B4               	movwf	___lwdiv@divisor+1
  1641     0198  1683               	bsf	3,5	;RP0=1, select bank1
  1642     0199  1303               	bcf	3,6	;RP1=0, select bank1
  1643     019A  0874               	movf	(main@total+1)^(0+128),w
  1644     019B  1283               	bcf	3,5	;RP0=0, select bank0
  1645     019C  1303               	bcf	3,6	;RP1=0, select bank0
  1646     019D  00B6               	movwf	___lwdiv@dividend+1
  1647     019E  1683               	bsf	3,5	;RP0=1, select bank1
  1648     019F  1303               	bcf	3,6	;RP1=0, select bank1
  1649     01A0  0873               	movf	main@total^(0+128),w
  1650     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1651     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1652     01A3  00B5               	movwf	___lwdiv@dividend
  1653     01A4  158A  2555  118A   	fcall	___lwdiv
  1654     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1655     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1656     01A9  0834               	movf	?___lwdiv+1,w
  1657     01AA  00BD               	movwf	___lwmod@dividend+1
  1658     01AB  0833               	movf	?___lwdiv,w
  1659     01AC  00BC               	movwf	___lwmod@dividend
  1660     01AD  158A  251B  118A   	fcall	___lwmod
  1661     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1662     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1663     01B2  083A               	movf	?___lwmod,w
  1664     01B3  3E30               	addlw	48
  1665     01B4  1683               	bsf	3,5	;RP0=1, select bank1
  1666     01B5  1303               	bcf	3,6	;RP1=0, select bank1
  1667     01B6  00B8               	movwf	(_cntStr^(0+128)+7)
  1668     01B7                     l3315:
  1669                           
  1670                           ;Practica-3-main.c: 128:             cntStr[8]= total%10+'0';
  1671     01B7  300A               	movlw	10
  1672     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1673     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1674     01BA  00BA               	movwf	___lwmod@divisor
  1675     01BB  3000               	movlw	0
  1676     01BC  00BB               	movwf	___lwmod@divisor+1
  1677     01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1678     01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1679     01BF  0874               	movf	(main@total+1)^(0+128),w
  1680     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1681     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1682     01C2  00BD               	movwf	___lwmod@dividend+1
  1683     01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1684     01C4  1303               	bcf	3,6	;RP1=0, select bank1
  1685     01C5  0873               	movf	main@total^(0+128),w
  1686     01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1687     01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1688     01C8  00BC               	movwf	___lwmod@dividend
  1689     01C9  158A  251B  118A   	fcall	___lwmod
  1690     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1691     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1692     01CE  083A               	movf	?___lwmod,w
  1693     01CF  3E30               	addlw	48
  1694     01D0  1683               	bsf	3,5	;RP0=1, select bank1
  1695     01D1  1303               	bcf	3,6	;RP1=0, select bank1
  1696     01D2  00B9               	movwf	(_cntStr^(0+128)+8)
  1697     01D3                     l3317:
  1698                           
  1699                           ;Practica-3-main.c: 129:             Lcd_Set_Cursor(1,1); Lcd_Write_String(cntStr);
  1700     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1701     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1702     01D5  01B1               	clrf	Lcd_Set_Cursor@b
  1703     01D6  0AB1               	incf	Lcd_Set_Cursor@b,f
  1704     01D7  3001               	movlw	1
  1705     01D8  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  1706     01DB                     l3319:
  1707     01DB  30B1               	movlw	(low (_cntStr| 0))& (0+255)
  1708     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1709     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1710     01DE  00B2               	movwf	Lcd_Write_String@a
  1711     01DF  3000               	movlw	0
  1712     01E0  00B3               	movwf	Lcd_Write_String@a+1
  1713     01E1  158A  266F  118A   	fcall	_Lcd_Write_String
  1714     01E4                     l3321:
  1715                           
  1716                           ;Practica-3-main.c: 132:         key=Keypad_Get_Char(); if(!key) continue;
  1717     01E4  118A  22F9  118A   	fcall	_Keypad_Get_Char
  1718     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1719     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1720     01E9  00DF               	movwf	_key
  1721     01EA                     l3323:
  1722     01EA  085F               	movf	_key,w
  1723     01EB  1D03               	btfss	3,2
  1724     01EC  29EE               	goto	u3691
  1725     01ED  29EF               	goto	u3690
  1726     01EE                     u3691:
  1727     01EE  29F0               	goto	l3327
  1728     01EF                     u3690:
  1729     01EF  285C               	goto	l3273
  1730     01F0                     l3327:
  1731                           
  1732                           ;Practica-3-main.c: 134:         if(key=='D'){ page=(page+1)%4; showPage(page); _delay((
      +                          unsigned long)((120)*(4000000/4000.0))); continue; }
  1733     01F0  3044               	movlw	68
  1734     01F1  065F               	xorwf	_key,w
  1735     01F2  1D03               	btfss	3,2
  1736     01F3  29F5               	goto	u3701
  1737     01F4  29F6               	goto	u3700
  1738     01F5                     u3701:
  1739     01F5  2A0B               	goto	l3335
  1740     01F6                     u3700:
  1741     01F6                     l3329:
  1742     01F6  0861               	movf	_page,w
  1743     01F7  3E01               	addlw	1
  1744     01F8  00E1               	movwf	_page
  1745     01F9  3003               	movlw	3
  1746     01FA  05E1               	andwf	_page,f
  1747     01FB                     l3331:
  1748     01FB  0861               	movf	_page,w
  1749     01FC  118A  252D  118A   	fcall	_showPage
  1750     01FF                     l3333:
  1751     01FF  309C               	movlw	156
  1752     0200  1283               	bcf	3,5	;RP0=0, select bank0
  1753     0201  1303               	bcf	3,6	;RP1=0, select bank0
  1754     0202  00C0               	movwf	??_main+1
  1755     0203  30D6               	movlw	214
  1756     0204  00BF               	movwf	??_main
  1757     0205                     u3787:
  1758     0205  0BBF               	decfsz	??_main,f
  1759     0206  2A05               	goto	u3787
  1760     0207  0BC0               	decfsz	??_main+1,f
  1761     0208  2A05               	goto	u3787
  1762     0209  2A0A               	nop2
  1763     020A  285C               	goto	l3273
  1764     020B                     l3335:
  1765                           
  1766                           ;Practica-3-main.c: 135:         if(page==3) continue;
  1767     020B  3003               	movlw	3
  1768     020C  0661               	xorwf	_page,w
  1769     020D  1D03               	btfss	3,2
  1770     020E  2A10               	goto	u3711
  1771     020F  2A11               	goto	u3710
  1772     0210                     u3711:
  1773     0210  2AEC               	goto	l3389
  1774     0211                     u3710:
  1775     0211  285C               	goto	l3273
  1776     0212                     l3339:
  1777     0212  0860               	movf	_pos,w
  1778     0213  1903               	btfsc	3,2
  1779     0214  2A16               	goto	u3721
  1780     0215  2A17               	goto	u3720
  1781     0216                     u3721:
  1782     0216  2A21               	goto	l3343
  1783     0217                     u3720:
  1784     0217                     l3341:
  1785     0217  0860               	movf	_pos,w
  1786     0218  3EFF               	addlw	255
  1787     0219  1683               	bsf	3,5	;RP0=1, select bank1
  1788     021A  1303               	bcf	3,6	;RP1=0, select bank1
  1789     021B  00E6               	movwf	_main$349^(0+128)
  1790     021C  30FF               	movlw	255
  1791     021D  1803               	skipnc
  1792     021E  3000               	movlw	0
  1793     021F  00E7               	movwf	(_main$349^(0+128)+1)
  1794     0220  2A2A               	goto	l194
  1795     0221                     l3343:
  1796     0221  0845               	movf	_lenMap,w
  1797     0222  3EFF               	addlw	255
  1798     0223  1683               	bsf	3,5	;RP0=1, select bank1
  1799     0224  1303               	bcf	3,6	;RP1=0, select bank1
  1800     0225  00E6               	movwf	_main$349^(0+128)
  1801     0226  30FF               	movlw	255
  1802     0227  1803               	skipnc
  1803     0228  3000               	movlw	0
  1804     0229  00E7               	movwf	(_main$349^(0+128)+1)
  1805     022A                     l194:
  1806     022A  0866               	movf	_main$349^(0+128),w
  1807     022B  1283               	bcf	3,5	;RP0=0, select bank0
  1808     022C  1303               	bcf	3,6	;RP1=0, select bank0
  1809     022D  00E0               	movwf	_pos
  1810     022E                     l3345:
  1811     022E  158A  22FA  118A   	fcall	_cursorLCD
  1812     0231  285C               	goto	l3273
  1813     0232                     l3347:
  1814     0232  0845               	movf	_lenMap,w
  1815     0233  3EFF               	addlw	255
  1816     0234  00BF               	movwf	??_main
  1817     0235  30FF               	movlw	255
  1818     0236  1803               	skipnc
  1819     0237  3000               	movlw	0
  1820     0238  00C0               	movwf	??_main+1
  1821     0239  0860               	movf	_pos,w
  1822     023A  063F               	xorwf	??_main,w
  1823     023B  0440               	iorwf	??_main+1,w
  1824     023C  1903               	skipnz
  1825     023D  2A3F               	goto	u3731
  1826     023E  2A40               	goto	u3730
  1827     023F                     u3731:
  1828     023F  2A4A               	goto	l3351
  1829     0240                     u3730:
  1830     0240                     l3349:
  1831     0240  0860               	movf	_pos,w
  1832     0241  3E01               	addlw	1
  1833     0242  1683               	bsf	3,5	;RP0=1, select bank1
  1834     0243  1303               	bcf	3,6	;RP1=0, select bank1
  1835     0244  00E8               	movwf	_main$350^(0+128)
  1836     0245  3000               	movlw	0
  1837     0246  1803               	skipnc
  1838     0247  3001               	movlw	1
  1839     0248  00E9               	movwf	(_main$350^(0+128)+1)
  1840     0249  2A4E               	goto	l3353
  1841     024A                     l3351:
  1842     024A  1683               	bsf	3,5	;RP0=1, select bank1
  1843     024B  1303               	bcf	3,6	;RP1=0, select bank1
  1844     024C  01E8               	clrf	_main$350^(0+128)
  1845     024D  01E9               	clrf	(_main$350+1)^(0+128)
  1846     024E                     l3353:
  1847     024E  0868               	movf	_main$350^(0+128),w
  1848     024F  1283               	bcf	3,5	;RP0=0, select bank0
  1849     0250  1303               	bcf	3,6	;RP1=0, select bank0
  1850     0251  00E0               	movwf	_pos
  1851     0252  2A2E               	goto	l3345
  1852     0253                     l3357:
  1853     0253  0860               	movf	_pos,w
  1854     0254  0746               	addwf	_map,w
  1855     0255  0084               	movwf	4
  1856     0256  158A  200A  118A   	fcall	stringdir
  1857     0259  0747               	addwf	_activeBuf,w
  1858     025A  00BF               	movwf	??_main
  1859     025B  083F               	movf	??_main,w
  1860     025C  0084               	movwf	4
  1861     025D  302D               	movlw	45
  1862     025E  1383               	bcf	3,7	;select IRP bank0
  1863     025F  0080               	movwf	0
  1864     0260                     l3359:
  1865     0260  01B1               	clrf	Lcd_Set_Cursor@b
  1866     0261  0AB1               	incf	Lcd_Set_Cursor@b,f
  1867     0262  3002               	movlw	2
  1868     0263  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  1869     0266                     l3361:
  1870     0266  1283               	bcf	3,5	;RP0=0, select bank0
  1871     0267  1303               	bcf	3,6	;RP1=0, select bank0
  1872     0268  0847               	movf	_activeBuf,w
  1873     0269  00B2               	movwf	Lcd_Write_String@a
  1874     026A  3000               	movlw	0
  1875     026B  00B3               	movwf	Lcd_Write_String@a+1
  1876     026C  158A  266F  118A   	fcall	_Lcd_Write_String
  1877     026F  2A2E               	goto	l3345
  1878     0270                     l3365:
  1879                           
  1880                           ;Practica-3-main.c: 142:                 if(key>='0'&&key<='9'){
  1881     0270  3030               	movlw	48
  1882     0271  025F               	subwf	_key,w
  1883     0272  1C03               	skipc
  1884     0273  2A75               	goto	u3741
  1885     0274  2A76               	goto	u3740
  1886     0275                     u3741:
  1887     0275  285C               	goto	l3273
  1888     0276                     u3740:
  1889     0276                     l3367:
  1890     0276  303A               	movlw	58
  1891     0277  025F               	subwf	_key,w
  1892     0278  1803               	skipnc
  1893     0279  2A7B               	goto	u3751
  1894     027A  2A7C               	goto	u3750
  1895     027B                     u3751:
  1896     027B  285C               	goto	l3273
  1897     027C                     u3750:
  1898     027C                     l3369:
  1899                           
  1900                           ;Practica-3-main.c: 143:                     activeBuf[map[pos]]=key;
  1901     027C  0860               	movf	_pos,w
  1902     027D  0746               	addwf	_map,w
  1903     027E  0084               	movwf	4
  1904     027F  158A  200A  118A   	fcall	stringdir
  1905     0282  0747               	addwf	_activeBuf,w
  1906     0283  00BF               	movwf	??_main
  1907     0284  083F               	movf	??_main,w
  1908     0285  0084               	movwf	4
  1909     0286  085F               	movf	_key,w
  1910     0287  1383               	bcf	3,7	;select IRP bank0
  1911     0288  0080               	movwf	0
  1912     0289                     l3371:
  1913                           
  1914                           ;Practica-3-main.c: 144:                     Lcd_Set_Cursor(2,1); Lcd_Write_String(activ
      +                          eBuf);
  1915     0289  01B1               	clrf	Lcd_Set_Cursor@b
  1916     028A  0AB1               	incf	Lcd_Set_Cursor@b,f
  1917     028B  3002               	movlw	2
  1918     028C  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  1919     028F                     l3373:
  1920     028F  1283               	bcf	3,5	;RP0=0, select bank0
  1921     0290  1303               	bcf	3,6	;RP1=0, select bank0
  1922     0291  0847               	movf	_activeBuf,w
  1923     0292  00B2               	movwf	Lcd_Write_String@a
  1924     0293  3000               	movlw	0
  1925     0294  00B3               	movwf	Lcd_Write_String@a+1
  1926     0295  158A  266F  118A   	fcall	_Lcd_Write_String
  1927     0298                     l3375:
  1928                           
  1929                           ;Practica-3-main.c: 145:                     pos=(pos==lenMap-1)?0:pos+1; cursorLCD();
  1930     0298  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0299  1303               	bcf	3,6	;RP1=0, select bank0
  1932     029A  0845               	movf	_lenMap,w
  1933     029B  3EFF               	addlw	255
  1934     029C  00BF               	movwf	??_main
  1935     029D  30FF               	movlw	255
  1936     029E  1803               	skipnc
  1937     029F  3000               	movlw	0
  1938     02A0  00C0               	movwf	??_main+1
  1939     02A1  0860               	movf	_pos,w
  1940     02A2  063F               	xorwf	??_main,w
  1941     02A3  0440               	iorwf	??_main+1,w
  1942     02A4  1903               	skipnz
  1943     02A5  2AA7               	goto	u3761
  1944     02A6  2AA8               	goto	u3760
  1945     02A7                     u3761:
  1946     02A7  2AB2               	goto	l3379
  1947     02A8                     u3760:
  1948     02A8                     l3377:
  1949     02A8  0860               	movf	_pos,w
  1950     02A9  3E01               	addlw	1
  1951     02AA  1683               	bsf	3,5	;RP0=1, select bank1
  1952     02AB  1303               	bcf	3,6	;RP1=0, select bank1
  1953     02AC  00EA               	movwf	_main$351^(0+128)
  1954     02AD  3000               	movlw	0
  1955     02AE  1803               	skipnc
  1956     02AF  3001               	movlw	1
  1957     02B0  00EB               	movwf	(_main$351^(0+128)+1)
  1958     02B1  2AB6               	goto	l3381
  1959     02B2                     l3379:
  1960     02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1961     02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1962     02B4  01EA               	clrf	_main$351^(0+128)
  1963     02B5  01EB               	clrf	(_main$351+1)^(0+128)
  1964     02B6                     l3381:
  1965     02B6  086A               	movf	_main$351^(0+128),w
  1966     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1967     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1968     02B9  00E0               	movwf	_pos
  1969     02BA                     l3383:
  1970     02BA  158A  22FA  118A   	fcall	_cursorLCD
  1971     02BD                     l3385:
  1972                           
  1973                           ;Practica-3-main.c: 146:                     if(page==2){
  1974     02BD  3002               	movlw	2
  1975     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1976     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1977     02C0  0661               	xorwf	_page,w
  1978     02C1  1D03               	btfss	3,2
  1979     02C2  2AC4               	goto	u3771
  1980     02C3  2AC5               	goto	u3770
  1981     02C4                     u3771:
  1982     02C4  285C               	goto	l3273
  1983     02C5                     u3770:
  1984     02C5                     l3387:
  1985                           
  1986                           ;Practica-3-main.c: 147:                         uint8_t k=(pwmStr[2]-'0')*10+(pwmStr[3]
      +                          -'0');
  1987     02C5  300A               	movlw	10
  1988     02C6  00AD               	movwf	___bmul@multiplicand
  1989     02C7  1683               	bsf	3,5	;RP0=1, select bank1
  1990     02C8  1303               	bcf	3,6	;RP1=0, select bank1
  1991     02C9  0822               	movf	(_pwmStr^(0+128)+2),w
  1992     02CA  158A  232E  118A   	fcall	___bmul
  1993     02CD  1683               	bsf	3,5	;RP0=1, select bank1
  1994     02CE  1303               	bcf	3,6	;RP1=0, select bank1
  1995     02CF  0723               	addwf	(_pwmStr^(0+128)+3),w
  1996     02D0  3EF0               	addlw	240
  1997     02D1  00E4               	movwf	main@k^(0+128)
  1998                           
  1999                           ;Practica-3-main.c: 148:                         uint8_t d=(pwmStr[7]-'0')*10+(pwmStr[8]
      +                          -'0');
  2000     02D2  300A               	movlw	10
  2001     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2002     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2003     02D5  00AD               	movwf	___bmul@multiplicand
  2004     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2005     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2006     02D8  0827               	movf	(_pwmStr^(0+128)+7),w
  2007     02D9  158A  232E  118A   	fcall	___bmul
  2008     02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2009     02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2010     02DE  0728               	addwf	(_pwmStr^(0+128)+8),w
  2011     02DF  3EF0               	addlw	240
  2012     02E0  00E5               	movwf	main@d^(0+128)
  2013                           
  2014                           ;Practica-3-main.c: 149:                         PWM1_Set(k,d);
  2015     02E1  0865               	movf	main@d^(0+128),w
  2016     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2017     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2018     02E4  00B3               	movwf	PWM1_Set@duty
  2019     02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2020     02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2021     02E7  0864               	movf	main@k^(0+128),w
  2022     02E8  158A  26BE  118A   	fcall	_PWM1_Set
  2023     02EB  285C               	goto	l3273
  2024     02EC                     l3389:
  2025     02EC  085F               	movf	_key,w
  2026                           
  2027                           ; Switch size 1, requested type "simple"
  2028                           ; Number of cases is 3, Range of values is 35 to 66
  2029                           ; switch strategies available:
  2030                           ; Name         Instructions Cycles
  2031                           ; simple_byte           10     6 (average)
  2032                           ; direct_byte           74    10 (fixed)
  2033                           ; jumptable            263     9 (fixed)
  2034                           ;	Chosen strategy is simple_byte
  2035     02ED  3A23               	xorlw	35	; case 35
  2036     02EE  1903               	skipnz
  2037     02EF  2A32               	goto	l3347
  2038     02F0  3A09               	xorlw	9	; case 42
  2039     02F1  1903               	skipnz
  2040     02F2  2A12               	goto	l3339
  2041     02F3  3A68               	xorlw	104	; case 66
  2042     02F4  1903               	skipnz
  2043     02F5  2A53               	goto	l3357
  2044     02F6  2A70               	goto	l3365
  2045     02F7  118A  280D         	ljmp	start
  2046     02F9                     __end_of_main:
  2047                           
  2048                           	psect	text1
  2049     0BD1                     __ptext1:	
  2050 ;; *************** function _toDeciv *****************
  2051 ;; Defined at:
  2052 ;;		line 50 in file "Practica-3-main.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  v               2   26[BANK0 ] unsigned short 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      unsigned char 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1
  2066 ;;      Params:         0       2       0
  2067 ;;      Locals:         0       0       0
  2068 ;;      Temps:          0       0       0
  2069 ;;      Totals:         0       2       0
  2070 ;;Total ram usage:        2 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 5
  2073 ;; This function calls:
  2074 ;;		___lwdiv
  2075 ;;		___wmul
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081     0BD1                     _toDeciv:	
  2082                           ;psect for function _toDeciv
  2083                           
  2084     0BD1                     l2913:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _toDeciv: [wreg+status,2+status,0+pclath+cstack]
  2087                           
  2088     0BD1  30FF               	movlw	255
  2089     0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  2090     0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  2091     0BD4  00B3               	movwf	___lwdiv@divisor
  2092     0BD5  3003               	movlw	3
  2093     0BD6  00B4               	movwf	___lwdiv@divisor+1
  2094     0BD7  083B               	movf	toDeciv@v+1,w
  2095     0BD8  00AE               	movwf	___wmul@multiplier+1
  2096     0BD9  083A               	movf	toDeciv@v,w
  2097     0BDA  00AD               	movwf	___wmul@multiplier
  2098     0BDB  3032               	movlw	50
  2099     0BDC  00AF               	movwf	___wmul@multiplicand
  2100     0BDD  3000               	movlw	0
  2101     0BDE  00B0               	movwf	___wmul@multiplicand+1
  2102     0BDF  158A  23F3  158A   	fcall	___wmul
  2103     0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  2104     0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  2105     0BE4  082D               	movf	?___wmul,w
  2106     0BE5  3EFF               	addlw	255
  2107     0BE6  00B5               	movwf	___lwdiv@dividend
  2108     0BE7  082E               	movf	?___wmul+1,w
  2109     0BE8  1803               	skipnc
  2110     0BE9  3E01               	addlw	1
  2111     0BEA  3E01               	addlw	1
  2112     0BEB  00B6               	movwf	___lwdiv@dividend+1
  2113     0BEC  158A  2555  158A   	fcall	___lwdiv
  2114     0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  2115     0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  2116     0BF1  0833               	movf	?___lwdiv,w
  2117     0BF2                     l122:
  2118     0BF2  0008               	return
  2119     0BF3                     __end_of_toDeciv:
  2120                           
  2121                           	psect	text2
  2122     0D55                     __ptext2:	
  2123 ;; *************** function ___lwdiv *****************
  2124 ;; Defined at:
  2125 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  divisor         2   19[BANK0 ] unsigned int 
  2128 ;;  dividend        2   21[BANK0 ] unsigned int 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  quotient        2   24[BANK0 ] unsigned int 
  2131 ;;  counter         1   23[BANK0 ] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2   19[BANK0 ] unsigned int 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1
  2141 ;;      Params:         0       4       0
  2142 ;;      Locals:         0       3       0
  2143 ;;      Temps:          0       0       0
  2144 ;;      Totals:         0       7       0
  2145 ;;Total ram usage:        7 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 4
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_toDeciv
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156     0D55                     ___lwdiv:	
  2157                           ;psect for function ___lwdiv
  2158                           
  2159     0D55                     l2887:	
  2160                           ;incstack = 0
  2161                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2162                           
  2163     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  2164     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  2165     0D57  01B8               	clrf	___lwdiv@quotient
  2166     0D58  01B9               	clrf	___lwdiv@quotient+1
  2167     0D59                     l2889:
  2168     0D59  0833               	movf	___lwdiv@divisor,w
  2169     0D5A  0434               	iorwf	___lwdiv@divisor+1,w
  2170     0D5B  1903               	btfsc	3,2
  2171     0D5C  2D5E               	goto	u3061
  2172     0D5D  2D5F               	goto	u3060
  2173     0D5E                     u3061:
  2174     0D5E  2D94               	goto	l2909
  2175     0D5F                     u3060:
  2176     0D5F                     l2891:
  2177     0D5F  3001               	movlw	1
  2178     0D60  00B7               	movwf	___lwdiv@counter
  2179     0D61  2D6B               	goto	l2897
  2180     0D62                     l2893:
  2181     0D62  3001               	movlw	1
  2182     0D63                     u3075:
  2183     0D63  1003               	clrc
  2184     0D64  0DB3               	rlf	___lwdiv@divisor,f
  2185     0D65  0DB4               	rlf	___lwdiv@divisor+1,f
  2186     0D66  3EFF               	addlw	-1
  2187     0D67  1D03               	skipz
  2188     0D68  2D63               	goto	u3075
  2189     0D69                     l2895:
  2190     0D69  3001               	movlw	1
  2191     0D6A  07B7               	addwf	___lwdiv@counter,f
  2192     0D6B                     l2897:
  2193     0D6B  1FB4               	btfss	___lwdiv@divisor+1,7
  2194     0D6C  2D6E               	goto	u3081
  2195     0D6D  2D6F               	goto	u3080
  2196     0D6E                     u3081:
  2197     0D6E  2D62               	goto	l2893
  2198     0D6F                     u3080:
  2199     0D6F                     l2899:
  2200     0D6F  3001               	movlw	1
  2201     0D70                     u3095:
  2202     0D70  1003               	clrc
  2203     0D71  0DB8               	rlf	___lwdiv@quotient,f
  2204     0D72  0DB9               	rlf	___lwdiv@quotient+1,f
  2205     0D73  3EFF               	addlw	-1
  2206     0D74  1D03               	skipz
  2207     0D75  2D70               	goto	u3095
  2208     0D76  0834               	movf	___lwdiv@divisor+1,w
  2209     0D77  0236               	subwf	___lwdiv@dividend+1,w
  2210     0D78  1D03               	skipz
  2211     0D79  2D7C               	goto	u3105
  2212     0D7A  0833               	movf	___lwdiv@divisor,w
  2213     0D7B  0235               	subwf	___lwdiv@dividend,w
  2214     0D7C                     u3105:
  2215     0D7C  1C03               	skipc
  2216     0D7D  2D7F               	goto	u3101
  2217     0D7E  2D80               	goto	u3100
  2218     0D7F                     u3101:
  2219     0D7F  2D87               	goto	l2905
  2220     0D80                     u3100:
  2221     0D80                     l2901:
  2222     0D80  0833               	movf	___lwdiv@divisor,w
  2223     0D81  02B5               	subwf	___lwdiv@dividend,f
  2224     0D82  0834               	movf	___lwdiv@divisor+1,w
  2225     0D83  1C03               	skipc
  2226     0D84  03B6               	decf	___lwdiv@dividend+1,f
  2227     0D85  02B6               	subwf	___lwdiv@dividend+1,f
  2228     0D86                     l2903:
  2229     0D86  1438               	bsf	___lwdiv@quotient,0
  2230     0D87                     l2905:
  2231     0D87  3001               	movlw	1
  2232     0D88                     u3115:
  2233     0D88  1003               	clrc
  2234     0D89  0CB4               	rrf	___lwdiv@divisor+1,f
  2235     0D8A  0CB3               	rrf	___lwdiv@divisor,f
  2236     0D8B  3EFF               	addlw	-1
  2237     0D8C  1D03               	skipz
  2238     0D8D  2D88               	goto	u3115
  2239     0D8E                     l2907:
  2240     0D8E  3001               	movlw	1
  2241     0D8F  02B7               	subwf	___lwdiv@counter,f
  2242     0D90  1D03               	btfss	3,2
  2243     0D91  2D93               	goto	u3121
  2244     0D92  2D94               	goto	u3120
  2245     0D93                     u3121:
  2246     0D93  2D6F               	goto	l2899
  2247     0D94                     u3120:
  2248     0D94                     l2909:
  2249     0D94  0839               	movf	___lwdiv@quotient+1,w
  2250     0D95  00B4               	movwf	?___lwdiv+1
  2251     0D96  0838               	movf	___lwdiv@quotient,w
  2252     0D97  00B3               	movwf	?___lwdiv
  2253     0D98                     l735:
  2254     0D98  0008               	return
  2255     0D99                     __end_of___lwdiv:
  2256                           
  2257                           	psect	text3
  2258     052D                     __ptext3:	
  2259 ;; *************** function _showPage *****************
  2260 ;; Defined at:
  2261 ;;		line 70 in file "Practica-3-main.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  pg              1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  pg              1   25[BANK0 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1
  2275 ;;      Params:         0       0       0
  2276 ;;      Locals:         0       1       0
  2277 ;;      Temps:          0       0       0
  2278 ;;      Totals:         0       1       0
  2279 ;;Total ram usage:        1 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 8
  2282 ;; This function calls:
  2283 ;;		_Lcd_Blink
  2284 ;;		_Lcd_Clear
  2285 ;;		_Lcd_NoBlink
  2286 ;;		_Lcd_Set_Cursor
  2287 ;;		_Lcd_Write_String
  2288 ;;		_cursorLCD
  2289 ;; This function is called by:
  2290 ;;		_main
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294     052D                     _showPage:	
  2295                           ;psect for function _showPage
  2296                           
  2297                           
  2298                           ;incstack = 0
  2299 ;; hardware stack exceeded
  2300                           ; Regs used in _showPage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2301                           ;showPage@pg stored from wreg
  2302     052D  1283               	bcf	3,5	;RP0=0, select bank0
  2303     052E  1303               	bcf	3,6	;RP1=0, select bank0
  2304     052F  00B9               	movwf	showPage@pg
  2305     0530                     l2999:
  2306                           
  2307                           ;Practica-3-main.c: 71:     Lcd_Clear();
  2308     0530  158A  231A  118A   	fcall	_Lcd_Clear
  2309                           
  2310                           ;Practica-3-main.c: 72:     switch(pg){
  2311     0533  2DD4               	goto	l3065
  2312     0534                     l3001:
  2313                           
  2314                           ;Practica-3-main.c: 74:             Lcd_Set_Cursor(1,1); Lcd_Write_String(line0);
  2315     0534  01B1               	clrf	Lcd_Set_Cursor@b
  2316     0535  0AB1               	incf	Lcd_Set_Cursor@b,f
  2317     0536  3001               	movlw	1
  2318     0537  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  2319     053A                     l3003:
  2320     053A  3048               	movlw	(low (_line0| 0))& (0+255)
  2321     053B  1283               	bcf	3,5	;RP0=0, select bank0
  2322     053C  1303               	bcf	3,6	;RP1=0, select bank0
  2323     053D  00B2               	movwf	Lcd_Write_String@a
  2324     053E  3000               	movlw	0
  2325     053F  00B3               	movwf	Lcd_Write_String@a+1
  2326     0540  158A  266F  118A   	fcall	_Lcd_Write_String
  2327     0543                     l3005:
  2328                           
  2329                           ;Practica-3-main.c: 75:             Lcd_Set_Cursor(2,1); Lcd_Write_String(ref0);
  2330     0543  1283               	bcf	3,5	;RP0=0, select bank0
  2331     0544  1303               	bcf	3,6	;RP1=0, select bank0
  2332     0545  01B1               	clrf	Lcd_Set_Cursor@b
  2333     0546  0AB1               	incf	Lcd_Set_Cursor@b,f
  2334     0547  3002               	movlw	2
  2335     0548  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  2336     054B  30D3               	movlw	(low (_ref0| 0))& (0+255)
  2337     054C  1283               	bcf	3,5	;RP0=0, select bank0
  2338     054D  1303               	bcf	3,6	;RP1=0, select bank0
  2339     054E  00B2               	movwf	Lcd_Write_String@a
  2340     054F  3000               	movlw	0
  2341     0550  00B3               	movwf	Lcd_Write_String@a+1
  2342     0551  158A  266F  118A   	fcall	_Lcd_Write_String
  2343     0554                     l3007:
  2344                           
  2345                           ;Practica-3-main.c: 76:             activeBuf=ref0; map=idxRef; lenMap=4; pos=0;
  2346     0554  30D3               	movlw	(low (_ref0| 0))& (0+255)
  2347     0555  1283               	bcf	3,5	;RP0=0, select bank0
  2348     0556  1303               	bcf	3,6	;RP1=0, select bank0
  2349     0557  00C7               	movwf	_activeBuf
  2350     0558                     l3009:
  2351     0558  3005               	movlw	(low ((_idxRef-__stringbase)| (0+32768)))& (0+255)
  2352     0559  00C6               	movwf	_map
  2353     055A                     l3011:
  2354     055A  3004               	movlw	4
  2355     055B  00C5               	movwf	_lenMap
  2356     055C                     l3013:
  2357     055C  01E0               	clrf	_pos
  2358     055D                     l3015:
  2359                           
  2360                           ;Practica-3-main.c: 77:             Lcd_Blink(); cursorLCD(); break;
  2361     055D  158A  22DA  118A   	fcall	_Lcd_Blink
  2362     0560                     l3017:
  2363     0560  158A  22FA  118A   	fcall	_cursorLCD
  2364     0563  2DE4               	goto	l173
  2365     0564                     l3019:
  2366                           
  2367                           ;Practica-3-main.c: 79:             Lcd_Set_Cursor(1,1); Lcd_Write_String("SEGUNDA PANTA
      +                          LLA");
  2368     0564  01B1               	clrf	Lcd_Set_Cursor@b
  2369     0565  0AB1               	incf	Lcd_Set_Cursor@b,f
  2370     0566  3001               	movlw	1
  2371     0567  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  2372     056A                     l3021:
  2373     056A  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2374     056B  1283               	bcf	3,5	;RP0=0, select bank0
  2375     056C  1303               	bcf	3,6	;RP1=0, select bank0
  2376     056D  00B2               	movwf	Lcd_Write_String@a
  2377     056E  3080               	movlw	128
  2378     056F  00B3               	movwf	Lcd_Write_String@a+1
  2379     0570  158A  266F  118A   	fcall	_Lcd_Write_String
  2380     0573                     l3023:
  2381                           
  2382                           ;Practica-3-main.c: 80:             Lcd_Set_Cursor(2,1); Lcd_Write_String(ref1);
  2383     0573  1283               	bcf	3,5	;RP0=0, select bank0
  2384     0574  1303               	bcf	3,6	;RP1=0, select bank0
  2385     0575  01B1               	clrf	Lcd_Set_Cursor@b
  2386     0576  0AB1               	incf	Lcd_Set_Cursor@b,f
  2387     0577  3002               	movlw	2
  2388     0578  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  2389     057B  30C2               	movlw	(low (_ref1| 0))& (0+255)
  2390     057C  1283               	bcf	3,5	;RP0=0, select bank0
  2391     057D  1303               	bcf	3,6	;RP1=0, select bank0
  2392     057E  00B2               	movwf	Lcd_Write_String@a
  2393     057F  3000               	movlw	0
  2394     0580  00B3               	movwf	Lcd_Write_String@a+1
  2395     0581  158A  266F  118A   	fcall	_Lcd_Write_String
  2396     0584                     l3025:
  2397                           
  2398                           ;Practica-3-main.c: 81:             activeBuf=ref1; map=idxRef; lenMap=4; pos=0;
  2399     0584  30C2               	movlw	(low (_ref1| 0))& (0+255)
  2400     0585  1283               	bcf	3,5	;RP0=0, select bank0
  2401     0586  1303               	bcf	3,6	;RP1=0, select bank0
  2402     0587  00C7               	movwf	_activeBuf
  2403     0588  2D58               	goto	l3009
  2404     0589                     l3037:
  2405                           
  2406                           ;Practica-3-main.c: 84:             Lcd_Set_Cursor(1,1); Lcd_Write_String(cntStr);
  2407     0589  01B1               	clrf	Lcd_Set_Cursor@b
  2408     058A  0AB1               	incf	Lcd_Set_Cursor@b,f
  2409     058B  3001               	movlw	1
  2410     058C  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  2411     058F                     l3039:
  2412     058F  30B1               	movlw	(low (_cntStr| 0))& (0+255)
  2413     0590  1283               	bcf	3,5	;RP0=0, select bank0
  2414     0591  1303               	bcf	3,6	;RP1=0, select bank0
  2415     0592  00B2               	movwf	Lcd_Write_String@a
  2416     0593  3000               	movlw	0
  2417     0594  00B3               	movwf	Lcd_Write_String@a+1
  2418     0595  158A  266F  118A   	fcall	_Lcd_Write_String
  2419     0598                     l3041:
  2420                           
  2421                           ;Practica-3-main.c: 85:             Lcd_Set_Cursor(2,1); Lcd_Write_String(pwmStr);
  2422     0598  1283               	bcf	3,5	;RP0=0, select bank0
  2423     0599  1303               	bcf	3,6	;RP1=0, select bank0
  2424     059A  01B1               	clrf	Lcd_Set_Cursor@b
  2425     059B  0AB1               	incf	Lcd_Set_Cursor@b,f
  2426     059C  3002               	movlw	2
  2427     059D  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  2428     05A0  30A0               	movlw	(low (_pwmStr| 0))& (0+255)
  2429     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2430     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2431     05A3  00B2               	movwf	Lcd_Write_String@a
  2432     05A4  3000               	movlw	0
  2433     05A5  00B3               	movwf	Lcd_Write_String@a+1
  2434     05A6  158A  266F  118A   	fcall	_Lcd_Write_String
  2435     05A9                     l3043:
  2436                           
  2437                           ;Practica-3-main.c: 86:             activeBuf=pwmStr; map=idxPWM; lenMap=4; pos=0;
  2438     05A9  30A0               	movlw	(low (_pwmStr| 0))& (0+255)
  2439     05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2440     05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2441     05AC  00C7               	movwf	_activeBuf
  2442     05AD                     l3045:
  2443     05AD  3001               	movlw	(low ((_idxPWM-__stringbase)| (0+32768)))& (0+255)
  2444     05AE  00C6               	movwf	_map
  2445     05AF  2D5A               	goto	l3011
  2446     05B0                     l3055:
  2447                           
  2448                           ;Practica-3-main.c: 89:             Lcd_Set_Cursor(1,1); Lcd_Write_String("SEGUNDA PANTA
      +                          LLA");
  2449     05B0  01B1               	clrf	Lcd_Set_Cursor@b
  2450     05B1  0AB1               	incf	Lcd_Set_Cursor@b,f
  2451     05B2  3001               	movlw	1
  2452     05B3  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  2453     05B6                     l3057:
  2454     05B6  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2455     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2456     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2457     05B9  00B2               	movwf	Lcd_Write_String@a
  2458     05BA  3080               	movlw	128
  2459     05BB  00B3               	movwf	Lcd_Write_String@a+1
  2460     05BC  158A  266F  118A   	fcall	_Lcd_Write_String
  2461     05BF                     l3059:
  2462                           
  2463                           ;Practica-3-main.c: 90:             Lcd_Set_Cursor(2,1); Lcd_Write_String("Segundo PWM")
      +                          ;
  2464     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2465     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2466     05C1  01B1               	clrf	Lcd_Set_Cursor@b
  2467     05C2  0AB1               	incf	Lcd_Set_Cursor@b,f
  2468     05C3  3002               	movlw	2
  2469     05C4  118A  2690  118A   	fcall	_Lcd_Set_Cursor
  2470     05C7  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2471     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2472     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2473     05CA  00B2               	movwf	Lcd_Write_String@a
  2474     05CB  3080               	movlw	128
  2475     05CC  00B3               	movwf	Lcd_Write_String@a+1
  2476     05CD  158A  266F  118A   	fcall	_Lcd_Write_String
  2477     05D0                     l3061:
  2478                           
  2479                           ;Practica-3-main.c: 91:             Lcd_NoBlink(); break;
  2480     05D0  158A  22E3  118A   	fcall	_Lcd_NoBlink
  2481     05D3  2DE4               	goto	l173
  2482     05D4                     l3065:
  2483     05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2484     05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2485     05D6  0839               	movf	showPage@pg,w
  2486                           
  2487                           ; Switch size 1, requested type "simple"
  2488                           ; Number of cases is 4, Range of values is 0 to 3
  2489                           ; switch strategies available:
  2490                           ; Name         Instructions Cycles
  2491                           ; simple_byte           13     7 (average)
  2492                           ; direct_byte           15     7 (fixed)
  2493                           ; jumptable            260     6 (fixed)
  2494                           ;	Chosen strategy is simple_byte
  2495     05D7  3A00               	xorlw	0	; case 0
  2496     05D8  1903               	skipnz
  2497     05D9  2D34               	goto	l3001
  2498     05DA  3A01               	xorlw	1	; case 1
  2499     05DB  1903               	skipnz
  2500     05DC  2D64               	goto	l3019
  2501     05DD  3A03               	xorlw	3	; case 2
  2502     05DE  1903               	skipnz
  2503     05DF  2D89               	goto	l3037
  2504     05E0  3A01               	xorlw	1	; case 3
  2505     05E1  1903               	skipnz
  2506     05E2  2DB0               	goto	l3055
  2507     05E3  2DE4               	goto	l173
  2508     05E4                     l173:
  2509     05E4  0008               	return
  2510     05E5                     __end_of_showPage:
  2511                           
  2512                           	psect	text4
  2513     0AFA                     __ptext4:	
  2514 ;; *************** function _cursorLCD *****************
  2515 ;; Defined at:
  2516 ;;		line 68 in file "Practica-3-main.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1
  2530 ;;      Params:         0       0       0
  2531 ;;      Locals:         0       0       0
  2532 ;;      Temps:          0       0       0
  2533 ;;      Totals:         0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 7
  2537 ;; This function calls:
  2538 ;;		_Lcd_Set_Cursor
  2539 ;; This function is called by:
  2540 ;;		_showPage
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545     0AFA                     _cursorLCD:	
  2546                           ;psect for function _cursorLCD
  2547                           
  2548     0AFA                     l2757:	
  2549                           ;incstack = 0
  2550 ;; hardware stack exceeded
  2551                           ; Regs used in _cursorLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2552                           
  2553     0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  2554     0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  2555     0AFC  0860               	movf	_pos,w
  2556     0AFD  0746               	addwf	_map,w
  2557     0AFE  0084               	movwf	4
  2558     0AFF  158A  200A  158A   	fcall	stringdir
  2559     0B02  3E01               	addlw	1
  2560     0B03  00B1               	movwf	Lcd_Set_Cursor@b
  2561     0B04  3002               	movlw	2
  2562     0B05  118A  2690  158A   	fcall	_Lcd_Set_Cursor
  2563     0B08                     l164:
  2564     0B08  0008               	return
  2565     0B09                     __end_of_cursorLCD:
  2566                           
  2567                           	psect	text5
  2568     0690                     __ptext5:	
  2569 ;; *************** function _Lcd_Set_Cursor *****************
  2570 ;; Defined at:
  2571 ;;		line 28 in file "lcd.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  a               1    wreg     unsigned char 
  2574 ;;  b               1   17[BANK0 ] unsigned char 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  a               1   19[BANK0 ] unsigned char 
  2577 ;;  temp            1   22[BANK0 ] unsigned char 
  2578 ;;  y               1   21[BANK0 ] unsigned char 
  2579 ;;  z               1   20[BANK0 ] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, pclath, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1
  2589 ;;      Params:         0       1       0
  2590 ;;      Locals:         0       4       0
  2591 ;;      Temps:          0       1       0
  2592 ;;      Totals:         0       6       0
  2593 ;;Total ram usage:        6 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 6
  2596 ;; This function calls:
  2597 ;;		_Lcd_Cmd
  2598 ;; This function is called by:
  2599 ;;		_cursorLCD
  2600 ;;		_showPage
  2601 ;;		_main
  2602 ;;		_Lcd_Delete_Char
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606     0690                     _Lcd_Set_Cursor:	
  2607                           ;psect for function _Lcd_Set_Cursor
  2608                           
  2609                           
  2610                           ;incstack = 0
  2611 ;; hardware stack exceeded
  2612                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2613                           ;Lcd_Set_Cursor@a stored from wreg
  2614     0690  1283               	bcf	3,5	;RP0=0, select bank0
  2615     0691  1303               	bcf	3,6	;RP1=0, select bank0
  2616     0692  00B3               	movwf	Lcd_Set_Cursor@a
  2617     0693                     l2679:
  2618                           
  2619                           ;lcd.c: 28: void Lcd_Set_Cursor(char a, char b);lcd.c: 29: {;lcd.c: 30:     char temp,z,
      +                          y;;lcd.c: 31:     if(a == 1)
  2620     0693  0333               	decf	Lcd_Set_Cursor@a,w
  2621     0694  1D03               	btfss	3,2
  2622     0695  2E97               	goto	u2681
  2623     0696  2E98               	goto	u2680
  2624     0697                     u2681:
  2625     0697  2EB4               	goto	l2691
  2626     0698                     u2680:
  2627     0698                     l2681:
  2628                           
  2629                           ;lcd.c: 32:     {;lcd.c: 33:         temp = 0x80 + b - 1;
  2630     0698  0831               	movf	Lcd_Set_Cursor@b,w
  2631     0699  3E7F               	addlw	127
  2632     069A  00B6               	movwf	Lcd_Set_Cursor@temp
  2633                           
  2634                           ;lcd.c: 34:         z = temp>>4;
  2635     069B  0836               	movf	Lcd_Set_Cursor@temp,w
  2636     069C  00B2               	movwf	??_Lcd_Set_Cursor
  2637     069D  3004               	movlw	4
  2638     069E                     u2695:
  2639     069E  1003               	clrc
  2640     069F  0CB2               	rrf	??_Lcd_Set_Cursor,f
  2641     06A0  3EFF               	addlw	-1
  2642     06A1  1D03               	skipz
  2643     06A2  2E9E               	goto	u2695
  2644     06A3  0832               	movf	??_Lcd_Set_Cursor,w
  2645     06A4  00B4               	movwf	Lcd_Set_Cursor@z
  2646     06A5                     l2683:
  2647                           
  2648                           ;lcd.c: 35:         y = temp & 0x0F;
  2649     06A5  0836               	movf	Lcd_Set_Cursor@temp,w
  2650     06A6  00B5               	movwf	Lcd_Set_Cursor@y
  2651     06A7                     l2685:
  2652     06A7  300F               	movlw	15
  2653     06A8  05B5               	andwf	Lcd_Set_Cursor@y,f
  2654     06A9                     l2687:
  2655                           
  2656                           ;lcd.c: 36:         Lcd_Cmd(z);
  2657     06A9  0834               	movf	Lcd_Set_Cursor@z,w
  2658     06AA  158A  2376  118A   	fcall	_Lcd_Cmd
  2659     06AD                     l2689:
  2660                           
  2661                           ;lcd.c: 37:         Lcd_Cmd(y);
  2662     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2663     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2664     06AF  0835               	movf	Lcd_Set_Cursor@y,w
  2665     06B0  158A  2376  118A   	fcall	_Lcd_Cmd
  2666                           
  2667                           ;lcd.c: 38:     }
  2668     06B3  2F1A               	goto	l331
  2669     06B4                     l2691:
  2670     06B4  3002               	movlw	2
  2671     06B5  0633               	xorwf	Lcd_Set_Cursor@a,w
  2672     06B6  1D03               	btfss	3,2
  2673     06B7  2EB9               	goto	u2701
  2674     06B8  2EBA               	goto	u2700
  2675     06B9                     u2701:
  2676     06B9  2ED6               	goto	l2703
  2677     06BA                     u2700:
  2678     06BA                     l2693:
  2679                           
  2680                           ;lcd.c: 40:     {;lcd.c: 41:         temp = 0xC0 + b - 1;
  2681     06BA  0831               	movf	Lcd_Set_Cursor@b,w
  2682     06BB  3EBF               	addlw	191
  2683     06BC  00B6               	movwf	Lcd_Set_Cursor@temp
  2684                           
  2685                           ;lcd.c: 42:         z = temp>>4;
  2686     06BD  0836               	movf	Lcd_Set_Cursor@temp,w
  2687     06BE  00B2               	movwf	??_Lcd_Set_Cursor
  2688     06BF  3004               	movlw	4
  2689     06C0                     u2715:
  2690     06C0  1003               	clrc
  2691     06C1  0CB2               	rrf	??_Lcd_Set_Cursor,f
  2692     06C2  3EFF               	addlw	-1
  2693     06C3  1D03               	skipz
  2694     06C4  2EC0               	goto	u2715
  2695     06C5  0832               	movf	??_Lcd_Set_Cursor,w
  2696     06C6  00B4               	movwf	Lcd_Set_Cursor@z
  2697     06C7                     l2695:
  2698                           
  2699                           ;lcd.c: 43:         y = temp & 0x0F;
  2700     06C7  0836               	movf	Lcd_Set_Cursor@temp,w
  2701     06C8  00B5               	movwf	Lcd_Set_Cursor@y
  2702     06C9                     l2697:
  2703     06C9  300F               	movlw	15
  2704     06CA  05B5               	andwf	Lcd_Set_Cursor@y,f
  2705     06CB                     l2699:
  2706                           
  2707                           ;lcd.c: 44:         Lcd_Cmd(z);
  2708     06CB  0834               	movf	Lcd_Set_Cursor@z,w
  2709     06CC  158A  2376  118A   	fcall	_Lcd_Cmd
  2710     06CF                     l2701:
  2711                           
  2712                           ;lcd.c: 45:         Lcd_Cmd(y);
  2713     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  2714     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  2715     06D1  0835               	movf	Lcd_Set_Cursor@y,w
  2716     06D2  158A  2376  118A   	fcall	_Lcd_Cmd
  2717                           
  2718                           ;lcd.c: 46:     }
  2719     06D5  2F1A               	goto	l331
  2720     06D6                     l2703:
  2721     06D6  3003               	movlw	3
  2722     06D7  0633               	xorwf	Lcd_Set_Cursor@a,w
  2723     06D8  1D03               	btfss	3,2
  2724     06D9  2EDB               	goto	u2721
  2725     06DA  2EDC               	goto	u2720
  2726     06DB                     u2721:
  2727     06DB  2EF8               	goto	l2715
  2728     06DC                     u2720:
  2729     06DC                     l2705:
  2730                           
  2731                           ;lcd.c: 48:     {;lcd.c: 49:         temp = 0x94 + b - 1;
  2732     06DC  0831               	movf	Lcd_Set_Cursor@b,w
  2733     06DD  3E93               	addlw	147
  2734     06DE  00B6               	movwf	Lcd_Set_Cursor@temp
  2735                           
  2736                           ;lcd.c: 50:         z = temp>>4;
  2737     06DF  0836               	movf	Lcd_Set_Cursor@temp,w
  2738     06E0  00B2               	movwf	??_Lcd_Set_Cursor
  2739     06E1  3004               	movlw	4
  2740     06E2                     u2735:
  2741     06E2  1003               	clrc
  2742     06E3  0CB2               	rrf	??_Lcd_Set_Cursor,f
  2743     06E4  3EFF               	addlw	-1
  2744     06E5  1D03               	skipz
  2745     06E6  2EE2               	goto	u2735
  2746     06E7  0832               	movf	??_Lcd_Set_Cursor,w
  2747     06E8  00B4               	movwf	Lcd_Set_Cursor@z
  2748     06E9                     l2707:
  2749                           
  2750                           ;lcd.c: 51:         y = temp & 0x0F;
  2751     06E9  0836               	movf	Lcd_Set_Cursor@temp,w
  2752     06EA  00B5               	movwf	Lcd_Set_Cursor@y
  2753     06EB                     l2709:
  2754     06EB  300F               	movlw	15
  2755     06EC  05B5               	andwf	Lcd_Set_Cursor@y,f
  2756     06ED                     l2711:
  2757                           
  2758                           ;lcd.c: 52:         Lcd_Cmd(z);
  2759     06ED  0834               	movf	Lcd_Set_Cursor@z,w
  2760     06EE  158A  2376  118A   	fcall	_Lcd_Cmd
  2761     06F1                     l2713:
  2762                           
  2763                           ;lcd.c: 53:         Lcd_Cmd(y);
  2764     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2765     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2766     06F3  0835               	movf	Lcd_Set_Cursor@y,w
  2767     06F4  158A  2376  118A   	fcall	_Lcd_Cmd
  2768                           
  2769                           ;lcd.c: 54:     }
  2770     06F7  2F1A               	goto	l331
  2771     06F8                     l2715:
  2772     06F8  3004               	movlw	4
  2773     06F9  0633               	xorwf	Lcd_Set_Cursor@a,w
  2774     06FA  1D03               	btfss	3,2
  2775     06FB  2EFD               	goto	u2741
  2776     06FC  2EFE               	goto	u2740
  2777     06FD                     u2741:
  2778     06FD  2F1A               	goto	l327
  2779     06FE                     u2740:
  2780     06FE                     l2717:
  2781                           
  2782                           ;lcd.c: 56:     {;lcd.c: 57:         temp = 0xD4 + b - 1;
  2783     06FE  0831               	movf	Lcd_Set_Cursor@b,w
  2784     06FF  3ED3               	addlw	211
  2785     0700  00B6               	movwf	Lcd_Set_Cursor@temp
  2786                           
  2787                           ;lcd.c: 58:         z = temp>>4;
  2788     0701  0836               	movf	Lcd_Set_Cursor@temp,w
  2789     0702  00B2               	movwf	??_Lcd_Set_Cursor
  2790     0703  3004               	movlw	4
  2791     0704                     u2755:
  2792     0704  1003               	clrc
  2793     0705  0CB2               	rrf	??_Lcd_Set_Cursor,f
  2794     0706  3EFF               	addlw	-1
  2795     0707  1D03               	skipz
  2796     0708  2F04               	goto	u2755
  2797     0709  0832               	movf	??_Lcd_Set_Cursor,w
  2798     070A  00B4               	movwf	Lcd_Set_Cursor@z
  2799     070B                     l2719:
  2800                           
  2801                           ;lcd.c: 59:         y = temp & 0x0F;
  2802     070B  0836               	movf	Lcd_Set_Cursor@temp,w
  2803     070C  00B5               	movwf	Lcd_Set_Cursor@y
  2804     070D                     l2721:
  2805     070D  300F               	movlw	15
  2806     070E  05B5               	andwf	Lcd_Set_Cursor@y,f
  2807     070F                     l2723:
  2808                           
  2809                           ;lcd.c: 60:         Lcd_Cmd(z);
  2810     070F  0834               	movf	Lcd_Set_Cursor@z,w
  2811     0710  158A  2376  118A   	fcall	_Lcd_Cmd
  2812     0713                     l2725:
  2813                           
  2814                           ;lcd.c: 61:         Lcd_Cmd(y);
  2815     0713  1283               	bcf	3,5	;RP0=0, select bank0
  2816     0714  1303               	bcf	3,6	;RP1=0, select bank0
  2817     0715  0835               	movf	Lcd_Set_Cursor@y,w
  2818     0716  158A  2376  118A   	fcall	_Lcd_Cmd
  2819     0719  2F1A               	goto	l331
  2820     071A                     l327:
  2821     071A                     l331:
  2822     071A  0008               	return
  2823     071B                     __end_of_Lcd_Set_Cursor:
  2824                           
  2825                           	psect	text6
  2826     0E6F                     __ptext6:	
  2827 ;; *************** function _Lcd_Write_String *****************
  2828 ;; Defined at:
  2829 ;;		line 160 in file "lcd.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  a               2   18[BANK0 ] PTR const unsigned char 
  2832 ;;		 -> STR_3(12), STR_2(17), pwmStr(17), cntStr(17), 
  2833 ;;		 -> ref1(17), STR_1(17), line0(17), ref0(17), 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  i               2   23[BANK0 ] int 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1
  2845 ;;      Params:         0       2       0
  2846 ;;      Locals:         0       2       0
  2847 ;;      Temps:          0       3       0
  2848 ;;      Totals:         0       7       0
  2849 ;;Total ram usage:        7 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 6
  2852 ;; This function calls:
  2853 ;;		_Lcd_Write_Char
  2854 ;; This function is called by:
  2855 ;;		_showPage
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860     0E6F                     _Lcd_Write_String:	
  2861                           ;psect for function _Lcd_Write_String
  2862                           
  2863     0E6F                     l2763:	
  2864                           ;incstack = 0
  2865 ;; using string table level
  2866                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2867                           
  2868                           
  2869                           ;lcd.c: 160: void Lcd_Write_String(const char *a);lcd.c: 161: {;lcd.c: 162:     int i;;l
      +                          cd.c: 163:     for(i=0; a[i]!='\0' && i<16; i++)
  2870     0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  2871     0E70  1303               	bcf	3,6	;RP1=0, select bank0
  2872     0E71  01B7               	clrf	Lcd_Write_String@i
  2873     0E72  01B8               	clrf	Lcd_Write_String@i+1
  2874     0E73  2E96               	goto	l2769
  2875     0E74                     l2765:
  2876                           
  2877                           ;lcd.c: 164:         Lcd_Write_Char(a[i]);
  2878     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  2879     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  2880     0E76  0837               	movf	Lcd_Write_String@i,w
  2881     0E77  0732               	addwf	Lcd_Write_String@a,w
  2882     0E78  00B5               	movwf	??_Lcd_Write_String+1
  2883     0E79  0833               	movf	Lcd_Write_String@a+1,w
  2884     0E7A  00B4               	movwf	??_Lcd_Write_String
  2885     0E7B  1803               	skipnc
  2886     0E7C  0AB4               	incf	??_Lcd_Write_String,f
  2887     0E7D  1FB7               	btfss	Lcd_Write_String@i,7
  2888     0E7E  2E80               	goto	u2770
  2889     0E7F  03B4               	decf	??_Lcd_Write_String,f
  2890     0E80                     u2770:
  2891     0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2892     0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2893     0E82  0834               	movf	??_Lcd_Write_String,w
  2894     0E83  00B6               	movwf	??_Lcd_Write_String+2
  2895     0E84  0836               	movf	??_Lcd_Write_String+2,w
  2896     0E85  00FF               	movwf	btemp+1
  2897     0E86  0835               	movf	??_Lcd_Write_String+1,w
  2898     0E87  0084               	movwf	4
  2899     0E88  158A  2000  158A   	fcall	stringtab
  2900     0E8B  158A  24E2  158A   	fcall	_Lcd_Write_Char
  2901     0E8E                     l2767:
  2902     0E8E  3001               	movlw	1
  2903     0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2904     0E90  1303               	bcf	3,6	;RP1=0, select bank0
  2905     0E91  07B7               	addwf	Lcd_Write_String@i,f
  2906     0E92  1803               	skipnc
  2907     0E93  0AB8               	incf	Lcd_Write_String@i+1,f
  2908     0E94  3000               	movlw	0
  2909     0E95  07B8               	addwf	Lcd_Write_String@i+1,f
  2910     0E96                     l2769:
  2911     0E96  0837               	movf	Lcd_Write_String@i,w
  2912     0E97  0732               	addwf	Lcd_Write_String@a,w
  2913     0E98  00B5               	movwf	??_Lcd_Write_String+1
  2914     0E99  0833               	movf	Lcd_Write_String@a+1,w
  2915     0E9A  00B4               	movwf	??_Lcd_Write_String
  2916     0E9B  1803               	skipnc
  2917     0E9C  0AB4               	incf	??_Lcd_Write_String,f
  2918     0E9D  1FB7               	btfss	Lcd_Write_String@i,7
  2919     0E9E  2EA0               	goto	u2780
  2920     0E9F  03B4               	decf	??_Lcd_Write_String,f
  2921     0EA0                     u2780:
  2922     0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  2923     0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  2924     0EA2  0834               	movf	??_Lcd_Write_String,w
  2925     0EA3  00B6               	movwf	??_Lcd_Write_String+2
  2926     0EA4  0836               	movf	??_Lcd_Write_String+2,w
  2927     0EA5  00FF               	movwf	btemp+1
  2928     0EA6  0835               	movf	??_Lcd_Write_String+1,w
  2929     0EA7  0084               	movwf	4
  2930     0EA8  158A  2000  158A   	fcall	stringtab
  2931     0EAB  3A00               	xorlw	0
  2932     0EAC  1903               	skipnz
  2933     0EAD  2EAF               	goto	u2791
  2934     0EAE  2EB0               	goto	u2790
  2935     0EAF                     u2791:
  2936     0EAF  2EBD               	goto	l345
  2937     0EB0                     u2790:
  2938     0EB0                     l2771:
  2939     0EB0  0838               	movf	Lcd_Write_String@i+1,w
  2940     0EB1  3A80               	xorlw	128
  2941     0EB2  00FF               	movwf	btemp+1
  2942     0EB3  3080               	movlw	128
  2943     0EB4  027F               	subwf	btemp+1,w
  2944     0EB5  1D03               	skipz
  2945     0EB6  2EB9               	goto	u2805
  2946     0EB7  3010               	movlw	16
  2947     0EB8  0237               	subwf	Lcd_Write_String@i,w
  2948     0EB9                     u2805:
  2949     0EB9  1C03               	skipc
  2950     0EBA  2EBC               	goto	u2801
  2951     0EBB  2EBD               	goto	u2800
  2952     0EBC                     u2801:
  2953     0EBC  2E74               	goto	l2765
  2954     0EBD                     u2800:
  2955     0EBD                     l345:
  2956     0EBD  0008               	return
  2957     0EBE                     __end_of_Lcd_Write_String:
  2958                           
  2959                           	psect	text7
  2960     0CE2                     __ptext7:	
  2961 ;; *************** function _Lcd_Write_Char *****************
  2962 ;; Defined at:
  2963 ;;		line 137 in file "lcd.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  a               1    wreg     unsigned char 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  a               1   17[BANK0 ] unsigned char 
  2968 ;;  y               1   16[BANK0 ] unsigned char 
  2969 ;;  temp            1   15[BANK0 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1
  2979 ;;      Params:         0       0       0
  2980 ;;      Locals:         0       3       0
  2981 ;;      Temps:          0       1       0
  2982 ;;      Totals:         0       4       0
  2983 ;;Total ram usage:        4 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 5
  2986 ;; This function calls:
  2987 ;;		_Lcd_Port
  2988 ;; This function is called by:
  2989 ;;		_Lcd_Write_String
  2990 ;;		_Lcd_Delete_Char
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994     0CE2                     _Lcd_Write_Char:	
  2995                           ;psect for function _Lcd_Write_Char
  2996                           
  2997                           
  2998                           ;incstack = 0
  2999                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3000                           ;Lcd_Write_Char@a stored from wreg
  3001     0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  3002     0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  3003     0CE4  00B1               	movwf	Lcd_Write_Char@a
  3004     0CE5                     l2727:
  3005                           
  3006                           ;lcd.c: 137: void Lcd_Write_Char(char a);lcd.c: 138: {;lcd.c: 139:     char temp,y;;lcd.
      +                          c: 140:     temp = a & 0x0F;
  3007     0CE5  0831               	movf	Lcd_Write_Char@a,w
  3008     0CE6  00AF               	movwf	Lcd_Write_Char@temp
  3009     0CE7                     l2729:
  3010     0CE7  300F               	movlw	15
  3011     0CE8  05AF               	andwf	Lcd_Write_Char@temp,f
  3012     0CE9                     l2731:
  3013                           
  3014                           ;lcd.c: 141:     y = (a & 0xF0) >> 4;
  3015     0CE9  0831               	movf	Lcd_Write_Char@a,w
  3016     0CEA  00AE               	movwf	??_Lcd_Write_Char
  3017     0CEB  3004               	movlw	4
  3018     0CEC                     u2765:
  3019     0CEC  1003               	clrc
  3020     0CED  0CAE               	rrf	??_Lcd_Write_Char,f
  3021     0CEE  3EFF               	addlw	-1
  3022     0CEF  1D03               	skipz
  3023     0CF0  2CEC               	goto	u2765
  3024     0CF1  082E               	movf	??_Lcd_Write_Char,w
  3025     0CF2  00B0               	movwf	Lcd_Write_Char@y
  3026     0CF3                     l2733:
  3027     0CF3  300F               	movlw	15
  3028     0CF4  05B0               	andwf	Lcd_Write_Char@y,f
  3029     0CF5                     l2735:
  3030                           
  3031                           ;lcd.c: 143:     PORTCbits.RC3 = 1;
  3032     0CF5  1587               	bsf	7,3	;volatile
  3033     0CF6                     l2737:
  3034                           
  3035                           ;lcd.c: 146:     Lcd_Port(y);
  3036     0CF6  0830               	movf	Lcd_Write_Char@y,w
  3037     0CF7  158A  23B1  158A   	fcall	_Lcd_Port
  3038     0CFA                     l2739:
  3039                           
  3040                           ;lcd.c: 147:     PORTCbits.RC5 = 1;
  3041     0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  3042     0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  3043     0CFC  1687               	bsf	7,5	;volatile
  3044     0CFD                     l2741:
  3045                           
  3046                           ;lcd.c: 148:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  3047     0CFD  0000               	nop
  3048     0CFE                     l2743:
  3049                           
  3050                           ;lcd.c: 149:     PORTCbits.RC5 = 0;
  3051     0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3052     0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3053     0D00  1287               	bcf	7,5	;volatile
  3054     0D01                     l2745:
  3055                           
  3056                           ;lcd.c: 150:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  3057     0D01  3010               	movlw	16
  3058     0D02  1283               	bcf	3,5	;RP0=0, select bank0
  3059     0D03  1303               	bcf	3,6	;RP1=0, select bank0
  3060     0D04  00AE               	movwf	??_Lcd_Write_Char
  3061     0D05                     u3797:
  3062     0D05  0BAE               	decfsz	??_Lcd_Write_Char,f
  3063     0D06  2D05               	goto	u3797
  3064     0D07                     l2747:
  3065                           
  3066                           ;lcd.c: 153:     Lcd_Port(temp);
  3067     0D07  1283               	bcf	3,5	;RP0=0, select bank0
  3068     0D08  1303               	bcf	3,6	;RP1=0, select bank0
  3069     0D09  082F               	movf	Lcd_Write_Char@temp,w
  3070     0D0A  158A  23B1  158A   	fcall	_Lcd_Port
  3071     0D0D                     l2749:
  3072                           
  3073                           ;lcd.c: 154:     PORTCbits.RC5 = 1;
  3074     0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  3075     0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  3076     0D0F  1687               	bsf	7,5	;volatile
  3077     0D10                     l2751:
  3078                           
  3079                           ;lcd.c: 155:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  3080     0D10  0000               	nop
  3081     0D11                     l2753:
  3082                           
  3083                           ;lcd.c: 156:     PORTCbits.RC5 = 0;
  3084     0D11  1283               	bcf	3,5	;RP0=0, select bank0
  3085     0D12  1303               	bcf	3,6	;RP1=0, select bank0
  3086     0D13  1287               	bcf	7,5	;volatile
  3087     0D14                     l2755:
  3088                           
  3089                           ;lcd.c: 157:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  3090     0D14  3010               	movlw	16
  3091     0D15  1283               	bcf	3,5	;RP0=0, select bank0
  3092     0D16  1303               	bcf	3,6	;RP1=0, select bank0
  3093     0D17  00AE               	movwf	??_Lcd_Write_Char
  3094     0D18                     u3807:
  3095     0D18  0BAE               	decfsz	??_Lcd_Write_Char,f
  3096     0D19  2D18               	goto	u3807
  3097     0D1A                     l337:
  3098     0D1A  0008               	return
  3099     0D1B                     __end_of_Lcd_Write_Char:
  3100                           
  3101                           	psect	text8
  3102     0AE3                     __ptext8:	
  3103 ;; *************** function _Lcd_NoBlink *****************
  3104 ;; Defined at:
  3105 ;;		line 173 in file "lcd.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, pclath, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1
  3119 ;;      Params:         0       0       0
  3120 ;;      Locals:         0       0       0
  3121 ;;      Temps:          0       0       0
  3122 ;;      Totals:         0       0       0
  3123 ;;Total ram usage:        0 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 6
  3126 ;; This function calls:
  3127 ;;		_Lcd_Cmd
  3128 ;; This function is called by:
  3129 ;;		_showPage
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133     0AE3                     _Lcd_NoBlink:	
  3134                           ;psect for function _Lcd_NoBlink
  3135                           
  3136     0AE3                     l2775:	
  3137                           ;incstack = 0
  3138                           ; Regs used in _Lcd_NoBlink: [wreg+status,2+status,0+pclath+cstack]
  3139                           
  3140                           
  3141                           ;lcd.c: 175:     Lcd_Cmd(0x00);
  3142     0AE3  3000               	movlw	0
  3143     0AE4  158A  2376  158A   	fcall	_Lcd_Cmd
  3144                           
  3145                           ;lcd.c: 176:     Lcd_Cmd(0x0C);
  3146     0AE7  300C               	movlw	12
  3147     0AE8  158A  2376  158A   	fcall	_Lcd_Cmd
  3148     0AEB                     l351:
  3149     0AEB  0008               	return
  3150     0AEC                     __end_of_Lcd_NoBlink:
  3151                           
  3152                           	psect	text9
  3153     0B1A                     __ptext9:	
  3154 ;; *************** function _Lcd_Clear *****************
  3155 ;; Defined at:
  3156 ;;		line 21 in file "lcd.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, pclath, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1
  3170 ;;      Params:         0       0       0
  3171 ;;      Locals:         0       0       0
  3172 ;;      Temps:          0       2       0
  3173 ;;      Totals:         0       2       0
  3174 ;;Total ram usage:        2 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 6
  3177 ;; This function calls:
  3178 ;;		_Lcd_Cmd
  3179 ;; This function is called by:
  3180 ;;		_showPage
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184     0B1A                     _Lcd_Clear:	
  3185                           ;psect for function _Lcd_Clear
  3186                           
  3187     0B1A                     l2759:	
  3188                           ;incstack = 0
  3189                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3190                           
  3191                           
  3192                           ;lcd.c: 23:     Lcd_Cmd(0);
  3193     0B1A  3000               	movlw	0
  3194     0B1B  158A  2376  158A   	fcall	_Lcd_Cmd
  3195                           
  3196                           ;lcd.c: 24:     Lcd_Cmd(1);
  3197     0B1E  3001               	movlw	1
  3198     0B1F  158A  2376  158A   	fcall	_Lcd_Cmd
  3199     0B22                     l2761:
  3200                           
  3201                           ;lcd.c: 25:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3202     0B22  3003               	movlw	3
  3203     0B23  1283               	bcf	3,5	;RP0=0, select bank0
  3204     0B24  1303               	bcf	3,6	;RP1=0, select bank0
  3205     0B25  00B2               	movwf	??_Lcd_Clear+1
  3206     0B26  3097               	movlw	151
  3207     0B27  00B1               	movwf	??_Lcd_Clear
  3208     0B28                     u3817:
  3209     0B28  0BB1               	decfsz	??_Lcd_Clear,f
  3210     0B29  2B28               	goto	u3817
  3211     0B2A  0BB2               	decfsz	??_Lcd_Clear+1,f
  3212     0B2B  2B28               	goto	u3817
  3213     0B2C  0000               	nop
  3214     0B2D                     l321:
  3215     0B2D  0008               	return
  3216     0B2E                     __end_of_Lcd_Clear:
  3217                           
  3218                           	psect	text10
  3219     0ADA                     __ptext10:	
  3220 ;; *************** function _Lcd_Blink *****************
  3221 ;; Defined at:
  3222 ;;		line 167 in file "lcd.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1
  3236 ;;      Params:         0       0       0
  3237 ;;      Locals:         0       0       0
  3238 ;;      Temps:          0       0       0
  3239 ;;      Totals:         0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 6
  3243 ;; This function calls:
  3244 ;;		_Lcd_Cmd
  3245 ;; This function is called by:
  3246 ;;		_showPage
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250     0ADA                     _Lcd_Blink:	
  3251                           ;psect for function _Lcd_Blink
  3252                           
  3253     0ADA                     l2773:	
  3254                           ;incstack = 0
  3255                           ; Regs used in _Lcd_Blink: [wreg+status,2+status,0+pclath+cstack]
  3256                           
  3257                           
  3258                           ;lcd.c: 169:     Lcd_Cmd(0x00);
  3259     0ADA  3000               	movlw	0
  3260     0ADB  158A  2376  158A   	fcall	_Lcd_Cmd
  3261                           
  3262                           ;lcd.c: 170:     Lcd_Cmd(0x0F);
  3263     0ADE  300F               	movlw	15
  3264     0ADF  158A  2376  158A   	fcall	_Lcd_Cmd
  3265     0AE2                     l348:
  3266     0AE2  0008               	return
  3267     0AE3                     __end_of_Lcd_Blink:
  3268                           
  3269                           	psect	text11
  3270     0C77                     __ptext11:	
  3271 ;; *************** function _refToDeciv *****************
  3272 ;; Defined at:
  3273 ;;		line 64 in file "Practica-3-main.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  p               1   16[BANK0 ] PTR const unsigned char 
  3276 ;;		 -> ref0(17), 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      unsigned char 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1
  3288 ;;      Params:         0       1       0
  3289 ;;      Locals:         0       2       0
  3290 ;;      Temps:          0       3       0
  3291 ;;      Totals:         0       6       0
  3292 ;;Total ram usage:        6 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 5
  3295 ;; This function calls:
  3296 ;;		___bmul
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302     0C77                     _refToDeciv:	
  3303                           ;psect for function _refToDeciv
  3304                           
  3305     0C77                     l2981:	
  3306                           ;incstack = 0
  3307                           ; Regs used in _refToDeciv: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3308                           
  3309     0C77  1283               	bcf	3,5	;RP0=0, select bank0
  3310     0C78  1303               	bcf	3,6	;RP1=0, select bank0
  3311     0C79  0830               	movf	refToDeciv@p,w
  3312     0C7A  0084               	movwf	4
  3313     0C7B  302D               	movlw	45
  3314     0C7C  1383               	bcf	3,7	;select IRP bank0
  3315     0C7D  0600               	xorwf	0,w
  3316     0C7E  1903               	btfsc	3,2
  3317     0C7F  2C81               	goto	u3231
  3318     0C80  2C82               	goto	u3230
  3319     0C81                     u3231:
  3320     0C81  2CA3               	goto	l2987
  3321     0C82                     u3230:
  3322     0C82                     l2983:
  3323     0C82  0830               	movf	refToDeciv@p,w
  3324     0C83  3E02               	addlw	2
  3325     0C84  0084               	movwf	4
  3326     0C85  302D               	movlw	45
  3327     0C86  0600               	xorwf	0,w
  3328     0C87  1903               	btfsc	3,2
  3329     0C88  2C8A               	goto	u3241
  3330     0C89  2C8B               	goto	u3240
  3331     0C8A                     u3241:
  3332     0C8A  2CA3               	goto	l2987
  3333     0C8B                     u3240:
  3334     0C8B                     l2985:
  3335     0C8B  0830               	movf	refToDeciv@p,w
  3336     0C8C  3E02               	addlw	2
  3337     0C8D  0084               	movwf	4
  3338     0C8E  0800               	movf	0,w
  3339     0C8F  00B1               	movwf	??_refToDeciv
  3340     0C90  300A               	movlw	10
  3341     0C91  00AD               	movwf	___bmul@multiplicand
  3342     0C92  0830               	movf	refToDeciv@p,w
  3343     0C93  0084               	movwf	4
  3344     0C94  0800               	movf	0,w
  3345     0C95  158A  232E  158A   	fcall	___bmul
  3346     0C98  1283               	bcf	3,5	;RP0=0, select bank0
  3347     0C99  1303               	bcf	3,6	;RP1=0, select bank0
  3348     0C9A  0731               	addwf	??_refToDeciv,w
  3349     0C9B  3EF0               	addlw	240
  3350     0C9C  00B2               	movwf	??_refToDeciv+1
  3351     0C9D  01B3               	clrf	??_refToDeciv+2
  3352     0C9E  0832               	movf	??_refToDeciv+1,w
  3353     0C9F  00B4               	movwf	_refToDeciv$305
  3354     0CA0  0833               	movf	??_refToDeciv+2,w
  3355     0CA1  00B5               	movwf	_refToDeciv$305+1
  3356     0CA2  2CA7               	goto	l157
  3357     0CA3                     l2987:
  3358     0CA3  30FF               	movlw	255
  3359     0CA4  00B4               	movwf	_refToDeciv$305
  3360     0CA5  3000               	movlw	0
  3361     0CA6  00B5               	movwf	_refToDeciv$305+1
  3362     0CA7                     l157:
  3363     0CA7  0834               	movf	_refToDeciv$305,w
  3364     0CA8                     l158:
  3365     0CA8  0008               	return
  3366     0CA9                     __end_of_refToDeciv:
  3367                           
  3368                           	psect	text12
  3369     0B2E                     __ptext12:	
  3370 ;; *************** function ___bmul *****************
  3371 ;; Defined at:
  3372 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  multiplier      1    wreg     unsigned char 
  3375 ;;  multiplicand    1   13[BANK0 ] unsigned char 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  multiplier      1   15[BANK0 ] unsigned char 
  3378 ;;  product         1   14[BANK0 ] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      unsigned char 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1
  3388 ;;      Params:         0       1       0
  3389 ;;      Locals:         0       2       0
  3390 ;;      Temps:          0       0       0
  3391 ;;      Totals:         0       3       0
  3392 ;;Total ram usage:        3 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 4
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_refToDeciv
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403     0B2E                     ___bmul:	
  3404                           ;psect for function ___bmul
  3405                           
  3406                           
  3407                           ;incstack = 0
  3408                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3409                           ;___bmul@multiplier stored from wreg
  3410     0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  3411     0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  3412     0B30  00AF               	movwf	___bmul@multiplier
  3413     0B31                     l2791:
  3414     0B31  01AE               	clrf	___bmul@product
  3415     0B32                     l2793:
  3416     0B32  1C2F               	btfss	___bmul@multiplier,0
  3417     0B33  2B35               	goto	u2851
  3418     0B34  2B36               	goto	u2850
  3419     0B35                     u2851:
  3420     0B35  2B38               	goto	l2797
  3421     0B36                     u2850:
  3422     0B36                     l2795:
  3423     0B36  082D               	movf	___bmul@multiplicand,w
  3424     0B37  07AE               	addwf	___bmul@product,f
  3425     0B38                     l2797:
  3426     0B38  1003               	clrc
  3427     0B39  0DAD               	rlf	___bmul@multiplicand,f
  3428     0B3A                     l2799:
  3429     0B3A  1003               	clrc
  3430     0B3B  0CAF               	rrf	___bmul@multiplier,f
  3431     0B3C  082F               	movf	___bmul@multiplier,w
  3432     0B3D  1D03               	btfss	3,2
  3433     0B3E  2B40               	goto	u2861
  3434     0B3F  2B41               	goto	u2860
  3435     0B40                     u2861:
  3436     0B40  2B32               	goto	l2793
  3437     0B41                     u2860:
  3438     0B41                     l2801:
  3439     0B41  082E               	movf	___bmul@product,w
  3440     0B42                     l481:
  3441     0B42  0008               	return
  3442     0B43                     __end_of___bmul:
  3443                           
  3444                           	psect	text13
  3445     0F84                     __ptext13:	
  3446 ;; *************** function _buildLine0 *****************
  3447 ;; Defined at:
  3448 ;;		line 66 in file "Practica-3-main.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  d0              1    wreg     unsigned char 
  3451 ;;  d1              1   21[BANK0 ] unsigned char 
  3452 ;;  d2              1   22[BANK0 ] unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  d0              1   25[BANK0 ] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0, pclath, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1
  3464 ;;      Params:         0       2       0
  3465 ;;      Locals:         0       1       0
  3466 ;;      Temps:          0       2       0
  3467 ;;      Totals:         0       5       0
  3468 ;;Total ram usage:        5 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 5
  3471 ;; This function calls:
  3472 ;;		___awdiv
  3473 ;;		___awmod
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479     0F84                     _buildLine0:	
  3480                           ;psect for function _buildLine0
  3481                           
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _buildLine0: [wreg+status,2+status,0+pclath+cstack]
  3485                           ;buildLine0@d0 stored from wreg
  3486     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3487     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3488     0F86  00B9               	movwf	buildLine0@d0
  3489     0F87                     l2991:
  3490     0F87  300A               	movlw	10
  3491     0F88  00AD               	movwf	___awdiv@divisor
  3492     0F89  3000               	movlw	0
  3493     0F8A  00AE               	movwf	___awdiv@divisor+1
  3494     0F8B  0839               	movf	buildLine0@d0,w
  3495     0F8C  00B7               	movwf	??_buildLine0
  3496     0F8D  01B8               	clrf	??_buildLine0+1
  3497     0F8E  0837               	movf	??_buildLine0,w
  3498     0F8F  00AF               	movwf	___awdiv@dividend
  3499     0F90  0838               	movf	??_buildLine0+1,w
  3500     0F91  00B0               	movwf	___awdiv@dividend+1
  3501     0F92  158A  271F  158A   	fcall	___awdiv
  3502     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3503     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3504     0F97  082D               	movf	?___awdiv,w
  3505     0F98  3E30               	addlw	48
  3506     0F99  00CB               	movwf	_line0+3
  3507     0F9A                     l2993:
  3508     0F9A  302E               	movlw	46
  3509     0F9B  00CC               	movwf	_line0+4
  3510     0F9C  300A               	movlw	10
  3511     0F9D  00AD               	movwf	___awmod@divisor
  3512     0F9E  3000               	movlw	0
  3513     0F9F  00AE               	movwf	___awmod@divisor+1
  3514     0FA0  0839               	movf	buildLine0@d0,w
  3515     0FA1  00B7               	movwf	??_buildLine0
  3516     0FA2  01B8               	clrf	??_buildLine0+1
  3517     0FA3  0837               	movf	??_buildLine0,w
  3518     0FA4  00AF               	movwf	___awmod@dividend
  3519     0FA5  0838               	movf	??_buildLine0+1,w
  3520     0FA6  00B0               	movwf	___awmod@dividend+1
  3521     0FA7  118A  27A6  158A   	fcall	___awmod
  3522     0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  3523     0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  3524     0FAC  082D               	movf	?___awmod,w
  3525     0FAD  3E30               	addlw	48
  3526     0FAE  00CD               	movwf	_line0+5
  3527     0FAF  300A               	movlw	10
  3528     0FB0  00AD               	movwf	___awdiv@divisor
  3529     0FB1  3000               	movlw	0
  3530     0FB2  00AE               	movwf	___awdiv@divisor+1
  3531     0FB3  0835               	movf	buildLine0@d1,w
  3532     0FB4  00B7               	movwf	??_buildLine0
  3533     0FB5  01B8               	clrf	??_buildLine0+1
  3534     0FB6  0837               	movf	??_buildLine0,w
  3535     0FB7  00AF               	movwf	___awdiv@dividend
  3536     0FB8  0838               	movf	??_buildLine0+1,w
  3537     0FB9  00B0               	movwf	___awdiv@dividend+1
  3538     0FBA  158A  271F  158A   	fcall	___awdiv
  3539     0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  3540     0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  3541     0FBF  082D               	movf	?___awdiv,w
  3542     0FC0  3E30               	addlw	48
  3543     0FC1  00D0               	movwf	_line0+8
  3544     0FC2                     l2995:
  3545     0FC2  302E               	movlw	46
  3546     0FC3  00D1               	movwf	_line0+9
  3547     0FC4  300A               	movlw	10
  3548     0FC5  00AD               	movwf	___awmod@divisor
  3549     0FC6  3000               	movlw	0
  3550     0FC7  00AE               	movwf	___awmod@divisor+1
  3551     0FC8  0835               	movf	buildLine0@d1,w
  3552     0FC9  00B7               	movwf	??_buildLine0
  3553     0FCA  01B8               	clrf	??_buildLine0+1
  3554     0FCB  0837               	movf	??_buildLine0,w
  3555     0FCC  00AF               	movwf	___awmod@dividend
  3556     0FCD  0838               	movf	??_buildLine0+1,w
  3557     0FCE  00B0               	movwf	___awmod@dividend+1
  3558     0FCF  118A  27A6  158A   	fcall	___awmod
  3559     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  3560     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  3561     0FD4  082D               	movf	?___awmod,w
  3562     0FD5  3E30               	addlw	48
  3563     0FD6  00D2               	movwf	_line0+10
  3564     0FD7  300A               	movlw	10
  3565     0FD8  00AD               	movwf	___awdiv@divisor
  3566     0FD9  3000               	movlw	0
  3567     0FDA  00AE               	movwf	___awdiv@divisor+1
  3568     0FDB  0836               	movf	buildLine0@d2,w
  3569     0FDC  00B7               	movwf	??_buildLine0
  3570     0FDD  01B8               	clrf	??_buildLine0+1
  3571     0FDE  0837               	movf	??_buildLine0,w
  3572     0FDF  00AF               	movwf	___awdiv@dividend
  3573     0FE0  0838               	movf	??_buildLine0+1,w
  3574     0FE1  00B0               	movwf	___awdiv@dividend+1
  3575     0FE2  158A  271F  158A   	fcall	___awdiv
  3576     0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3577     0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  3578     0FE7  082D               	movf	?___awdiv,w
  3579     0FE8  3E30               	addlw	48
  3580     0FE9  00D5               	movwf	_line0+13
  3581     0FEA                     l2997:
  3582     0FEA  302E               	movlw	46
  3583     0FEB  00D6               	movwf	_line0+14
  3584     0FEC  300A               	movlw	10
  3585     0FED  00AD               	movwf	___awmod@divisor
  3586     0FEE  3000               	movlw	0
  3587     0FEF  00AE               	movwf	___awmod@divisor+1
  3588     0FF0  0836               	movf	buildLine0@d2,w
  3589     0FF1  00B7               	movwf	??_buildLine0
  3590     0FF2  01B8               	clrf	??_buildLine0+1
  3591     0FF3  0837               	movf	??_buildLine0,w
  3592     0FF4  00AF               	movwf	___awmod@dividend
  3593     0FF5  0838               	movf	??_buildLine0+1,w
  3594     0FF6  00B0               	movwf	___awmod@dividend+1
  3595     0FF7  118A  27A6  158A   	fcall	___awmod
  3596     0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  3597     0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  3598     0FFC  082D               	movf	?___awmod,w
  3599     0FFD  3E30               	addlw	48
  3600     0FFE  00D7               	movwf	_line0+15
  3601     0FFF                     l161:
  3602     0FFF  0008               	return
  3603     1000                     __end_of_buildLine0:
  3604                           
  3605                           	psect	text14
  3606     07A6                     __ptext14:	
  3607 ;; *************** function ___awmod *****************
  3608 ;; Defined at:
  3609 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  divisor         2   13[BANK0 ] int 
  3612 ;;  dividend        2   15[BANK0 ] int 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  sign            1   18[BANK0 ] unsigned char 
  3615 ;;  counter         1   17[BANK0 ] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  2   13[BANK0 ] int 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1
  3625 ;;      Params:         0       4       0
  3626 ;;      Locals:         0       2       0
  3627 ;;      Temps:          0       0       0
  3628 ;;      Totals:         0       6       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 4
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_buildLine0
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639     07A6                     ___awmod:	
  3640                           ;psect for function ___awmod
  3641                           
  3642     07A6                     l2849:	
  3643                           ;incstack = 0
  3644                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3645                           
  3646     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  3647     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  3648     07A8  01B2               	clrf	___awmod@sign
  3649     07A9                     l2851:
  3650     07A9  1FB0               	btfss	___awmod@dividend+1,7
  3651     07AA  2FAC               	goto	u2971
  3652     07AB  2FAD               	goto	u2970
  3653     07AC                     u2971:
  3654     07AC  2FB4               	goto	l2857
  3655     07AD                     u2970:
  3656     07AD                     l2853:
  3657     07AD  09AF               	comf	___awmod@dividend,f
  3658     07AE  09B0               	comf	___awmod@dividend+1,f
  3659     07AF  0AAF               	incf	___awmod@dividend,f
  3660     07B0  1903               	skipnz
  3661     07B1  0AB0               	incf	___awmod@dividend+1,f
  3662     07B2                     l2855:
  3663     07B2  3001               	movlw	1
  3664     07B3  00B2               	movwf	___awmod@sign
  3665     07B4                     l2857:
  3666     07B4  1FAE               	btfss	___awmod@divisor+1,7
  3667     07B5  2FB7               	goto	u2981
  3668     07B6  2FB8               	goto	u2980
  3669     07B7                     u2981:
  3670     07B7  2FBD               	goto	l2861
  3671     07B8                     u2980:
  3672     07B8                     l2859:
  3673     07B8  09AD               	comf	___awmod@divisor,f
  3674     07B9  09AE               	comf	___awmod@divisor+1,f
  3675     07BA  0AAD               	incf	___awmod@divisor,f
  3676     07BB  1903               	skipnz
  3677     07BC  0AAE               	incf	___awmod@divisor+1,f
  3678     07BD                     l2861:
  3679     07BD  082D               	movf	___awmod@divisor,w
  3680     07BE  042E               	iorwf	___awmod@divisor+1,w
  3681     07BF  1903               	btfsc	3,2
  3682     07C0  2FC2               	goto	u2991
  3683     07C1  2FC3               	goto	u2990
  3684     07C2                     u2991:
  3685     07C2  2FF0               	goto	l2879
  3686     07C3                     u2990:
  3687     07C3                     l2863:
  3688     07C3  3001               	movlw	1
  3689     07C4  00B1               	movwf	___awmod@counter
  3690     07C5  2FCF               	goto	l2869
  3691     07C6                     l2865:
  3692     07C6  3001               	movlw	1
  3693     07C7                     u3005:
  3694     07C7  1003               	clrc
  3695     07C8  0DAD               	rlf	___awmod@divisor,f
  3696     07C9  0DAE               	rlf	___awmod@divisor+1,f
  3697     07CA  3EFF               	addlw	-1
  3698     07CB  1D03               	skipz
  3699     07CC  2FC7               	goto	u3005
  3700     07CD                     l2867:
  3701     07CD  3001               	movlw	1
  3702     07CE  07B1               	addwf	___awmod@counter,f
  3703     07CF                     l2869:
  3704     07CF  1FAE               	btfss	___awmod@divisor+1,7
  3705     07D0  2FD2               	goto	u3011
  3706     07D1  2FD3               	goto	u3010
  3707     07D2                     u3011:
  3708     07D2  2FC6               	goto	l2865
  3709     07D3                     u3010:
  3710     07D3                     l2871:
  3711     07D3  082E               	movf	___awmod@divisor+1,w
  3712     07D4  0230               	subwf	___awmod@dividend+1,w
  3713     07D5  1D03               	skipz
  3714     07D6  2FD9               	goto	u3025
  3715     07D7  082D               	movf	___awmod@divisor,w
  3716     07D8  022F               	subwf	___awmod@dividend,w
  3717     07D9                     u3025:
  3718     07D9  1C03               	skipc
  3719     07DA  2FDC               	goto	u3021
  3720     07DB  2FDD               	goto	u3020
  3721     07DC                     u3021:
  3722     07DC  2FE3               	goto	l2875
  3723     07DD                     u3020:
  3724     07DD                     l2873:
  3725     07DD  082D               	movf	___awmod@divisor,w
  3726     07DE  02AF               	subwf	___awmod@dividend,f
  3727     07DF  082E               	movf	___awmod@divisor+1,w
  3728     07E0  1C03               	skipc
  3729     07E1  03B0               	decf	___awmod@dividend+1,f
  3730     07E2  02B0               	subwf	___awmod@dividend+1,f
  3731     07E3                     l2875:
  3732     07E3  3001               	movlw	1
  3733     07E4                     u3035:
  3734     07E4  1003               	clrc
  3735     07E5  0CAE               	rrf	___awmod@divisor+1,f
  3736     07E6  0CAD               	rrf	___awmod@divisor,f
  3737     07E7  3EFF               	addlw	-1
  3738     07E8  1D03               	skipz
  3739     07E9  2FE4               	goto	u3035
  3740     07EA                     l2877:
  3741     07EA  3001               	movlw	1
  3742     07EB  02B1               	subwf	___awmod@counter,f
  3743     07EC  1D03               	btfss	3,2
  3744     07ED  2FEF               	goto	u3041
  3745     07EE  2FF0               	goto	u3040
  3746     07EF                     u3041:
  3747     07EF  2FD3               	goto	l2871
  3748     07F0                     u3040:
  3749     07F0                     l2879:
  3750     07F0  0832               	movf	___awmod@sign,w
  3751     07F1  1903               	btfsc	3,2
  3752     07F2  2FF4               	goto	u3051
  3753     07F3  2FF5               	goto	u3050
  3754     07F4                     u3051:
  3755     07F4  2FFA               	goto	l2883
  3756     07F5                     u3050:
  3757     07F5                     l2881:
  3758     07F5  09AF               	comf	___awmod@dividend,f
  3759     07F6  09B0               	comf	___awmod@dividend+1,f
  3760     07F7  0AAF               	incf	___awmod@dividend,f
  3761     07F8  1903               	skipnz
  3762     07F9  0AB0               	incf	___awmod@dividend+1,f
  3763     07FA                     l2883:
  3764     07FA  0830               	movf	___awmod@dividend+1,w
  3765     07FB  00AE               	movwf	?___awmod+1
  3766     07FC  082F               	movf	___awmod@dividend,w
  3767     07FD  00AD               	movwf	?___awmod
  3768     07FE                     l621:
  3769     07FE  0008               	return
  3770     07FF                     __end_of___awmod:
  3771                           
  3772                           	psect	text15
  3773     0F1F                     __ptext15:	
  3774 ;; *************** function ___awdiv *****************
  3775 ;; Defined at:
  3776 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  divisor         2   13[BANK0 ] int 
  3779 ;;  dividend        2   15[BANK0 ] int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  quotient        2   19[BANK0 ] int 
  3782 ;;  sign            1   18[BANK0 ] unsigned char 
  3783 ;;  counter         1   17[BANK0 ] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  2   13[BANK0 ] int 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1
  3793 ;;      Params:         0       4       0
  3794 ;;      Locals:         0       4       0
  3795 ;;      Temps:          0       0       0
  3796 ;;      Totals:         0       8       0
  3797 ;;Total ram usage:        8 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 4
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_buildLine0
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807     0F1F                     ___awdiv:	
  3808                           ;psect for function ___awdiv
  3809                           
  3810     0F1F                     l2805:	
  3811                           ;incstack = 0
  3812                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3813                           
  3814     0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3815     0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3816     0F21  01B2               	clrf	___awdiv@sign
  3817     0F22                     l2807:
  3818     0F22  1FAE               	btfss	___awdiv@divisor+1,7
  3819     0F23  2F25               	goto	u2871
  3820     0F24  2F26               	goto	u2870
  3821     0F25                     u2871:
  3822     0F25  2F2D               	goto	l2813
  3823     0F26                     u2870:
  3824     0F26                     l2809:
  3825     0F26  09AD               	comf	___awdiv@divisor,f
  3826     0F27  09AE               	comf	___awdiv@divisor+1,f
  3827     0F28  0AAD               	incf	___awdiv@divisor,f
  3828     0F29  1903               	skipnz
  3829     0F2A  0AAE               	incf	___awdiv@divisor+1,f
  3830     0F2B                     l2811:
  3831     0F2B  3001               	movlw	1
  3832     0F2C  00B2               	movwf	___awdiv@sign
  3833     0F2D                     l2813:
  3834     0F2D  1FB0               	btfss	___awdiv@dividend+1,7
  3835     0F2E  2F30               	goto	u2881
  3836     0F2F  2F31               	goto	u2880
  3837     0F30                     u2881:
  3838     0F30  2F38               	goto	l2819
  3839     0F31                     u2880:
  3840     0F31                     l2815:
  3841     0F31  09AF               	comf	___awdiv@dividend,f
  3842     0F32  09B0               	comf	___awdiv@dividend+1,f
  3843     0F33  0AAF               	incf	___awdiv@dividend,f
  3844     0F34  1903               	skipnz
  3845     0F35  0AB0               	incf	___awdiv@dividend+1,f
  3846     0F36                     l2817:
  3847     0F36  3001               	movlw	1
  3848     0F37  06B2               	xorwf	___awdiv@sign,f
  3849     0F38                     l2819:
  3850     0F38  01B3               	clrf	___awdiv@quotient
  3851     0F39  01B4               	clrf	___awdiv@quotient+1
  3852     0F3A                     l2821:
  3853     0F3A  082D               	movf	___awdiv@divisor,w
  3854     0F3B  042E               	iorwf	___awdiv@divisor+1,w
  3855     0F3C  1903               	btfsc	3,2
  3856     0F3D  2F3F               	goto	u2891
  3857     0F3E  2F40               	goto	u2890
  3858     0F3F                     u2891:
  3859     0F3F  2F75               	goto	l2841
  3860     0F40                     u2890:
  3861     0F40                     l2823:
  3862     0F40  3001               	movlw	1
  3863     0F41  00B1               	movwf	___awdiv@counter
  3864     0F42  2F4C               	goto	l2829
  3865     0F43                     l2825:
  3866     0F43  3001               	movlw	1
  3867     0F44                     u2905:
  3868     0F44  1003               	clrc
  3869     0F45  0DAD               	rlf	___awdiv@divisor,f
  3870     0F46  0DAE               	rlf	___awdiv@divisor+1,f
  3871     0F47  3EFF               	addlw	-1
  3872     0F48  1D03               	skipz
  3873     0F49  2F44               	goto	u2905
  3874     0F4A                     l2827:
  3875     0F4A  3001               	movlw	1
  3876     0F4B  07B1               	addwf	___awdiv@counter,f
  3877     0F4C                     l2829:
  3878     0F4C  1FAE               	btfss	___awdiv@divisor+1,7
  3879     0F4D  2F4F               	goto	u2911
  3880     0F4E  2F50               	goto	u2910
  3881     0F4F                     u2911:
  3882     0F4F  2F43               	goto	l2825
  3883     0F50                     u2910:
  3884     0F50                     l2831:
  3885     0F50  3001               	movlw	1
  3886     0F51                     u2925:
  3887     0F51  1003               	clrc
  3888     0F52  0DB3               	rlf	___awdiv@quotient,f
  3889     0F53  0DB4               	rlf	___awdiv@quotient+1,f
  3890     0F54  3EFF               	addlw	-1
  3891     0F55  1D03               	skipz
  3892     0F56  2F51               	goto	u2925
  3893     0F57  082E               	movf	___awdiv@divisor+1,w
  3894     0F58  0230               	subwf	___awdiv@dividend+1,w
  3895     0F59  1D03               	skipz
  3896     0F5A  2F5D               	goto	u2935
  3897     0F5B  082D               	movf	___awdiv@divisor,w
  3898     0F5C  022F               	subwf	___awdiv@dividend,w
  3899     0F5D                     u2935:
  3900     0F5D  1C03               	skipc
  3901     0F5E  2F60               	goto	u2931
  3902     0F5F  2F61               	goto	u2930
  3903     0F60                     u2931:
  3904     0F60  2F68               	goto	l2837
  3905     0F61                     u2930:
  3906     0F61                     l2833:
  3907     0F61  082D               	movf	___awdiv@divisor,w
  3908     0F62  02AF               	subwf	___awdiv@dividend,f
  3909     0F63  082E               	movf	___awdiv@divisor+1,w
  3910     0F64  1C03               	skipc
  3911     0F65  03B0               	decf	___awdiv@dividend+1,f
  3912     0F66  02B0               	subwf	___awdiv@dividend+1,f
  3913     0F67                     l2835:
  3914     0F67  1433               	bsf	___awdiv@quotient,0
  3915     0F68                     l2837:
  3916     0F68  3001               	movlw	1
  3917     0F69                     u2945:
  3918     0F69  1003               	clrc
  3919     0F6A  0CAE               	rrf	___awdiv@divisor+1,f
  3920     0F6B  0CAD               	rrf	___awdiv@divisor,f
  3921     0F6C  3EFF               	addlw	-1
  3922     0F6D  1D03               	skipz
  3923     0F6E  2F69               	goto	u2945
  3924     0F6F                     l2839:
  3925     0F6F  3001               	movlw	1
  3926     0F70  02B1               	subwf	___awdiv@counter,f
  3927     0F71  1D03               	btfss	3,2
  3928     0F72  2F74               	goto	u2951
  3929     0F73  2F75               	goto	u2950
  3930     0F74                     u2951:
  3931     0F74  2F50               	goto	l2831
  3932     0F75                     u2950:
  3933     0F75                     l2841:
  3934     0F75  0832               	movf	___awdiv@sign,w
  3935     0F76  1903               	btfsc	3,2
  3936     0F77  2F79               	goto	u2961
  3937     0F78  2F7A               	goto	u2960
  3938     0F79                     u2961:
  3939     0F79  2F7F               	goto	l2845
  3940     0F7A                     u2960:
  3941     0F7A                     l2843:
  3942     0F7A  09B3               	comf	___awdiv@quotient,f
  3943     0F7B  09B4               	comf	___awdiv@quotient+1,f
  3944     0F7C  0AB3               	incf	___awdiv@quotient,f
  3945     0F7D  1903               	skipnz
  3946     0F7E  0AB4               	incf	___awdiv@quotient+1,f
  3947     0F7F                     l2845:
  3948     0F7F  0834               	movf	___awdiv@quotient+1,w
  3949     0F80  00AE               	movwf	?___awdiv+1
  3950     0F81  0833               	movf	___awdiv@quotient,w
  3951     0F82  00AD               	movwf	?___awdiv
  3952     0F83                     l608:
  3953     0F83  0008               	return
  3954     0F84                     __end_of___awdiv:
  3955                           
  3956                           	psect	text16
  3957     0C45                     __ptext16:	
  3958 ;; *************** function _adcRead *****************
  3959 ;; Defined at:
  3960 ;;		line 54 in file "Practica-3-main.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  ch              1    wreg     unsigned char 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  ch              1   16[BANK0 ] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  2   13[BANK0 ] unsigned short 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMMON   BANK0   BANK1
  3974 ;;      Params:         0       2       0
  3975 ;;      Locals:         0       1       0
  3976 ;;      Temps:          0       1       0
  3977 ;;      Totals:         0       4       0
  3978 ;;Total ram usage:        4 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; Hardware stack levels required when called: 4
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988     0C45                     _adcRead:	
  3989                           ;psect for function _adcRead
  3990                           
  3991                           
  3992                           ;incstack = 0
  3993                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  3994                           ;adcRead@ch stored from wreg
  3995     0C45  1283               	bcf	3,5	;RP0=0, select bank0
  3996     0C46  1303               	bcf	3,6	;RP1=0, select bank0
  3997     0C47  00B0               	movwf	adcRead@ch
  3998     0C48                     l2925:
  3999     0C48  0330               	decf	adcRead@ch,w
  4000     0C49  1D03               	btfss	3,2
  4001     0C4A  2C4C               	goto	u3161
  4002     0C4B  2C4D               	goto	u3160
  4003     0C4C                     u3161:
  4004     0C4C  2C52               	goto	l2929
  4005     0C4D                     u3160:
  4006     0C4D                     l2927:
  4007     0C4D  081F               	movf	31,w	;volatile
  4008     0C4E  39C5               	andlw	197
  4009     0C4F  3808               	iorlw	8
  4010     0C50  009F               	movwf	31	;volatile
  4011     0C51  2C60               	goto	l2935
  4012     0C52                     l2929:
  4013     0C52  3002               	movlw	2
  4014     0C53  0630               	xorwf	adcRead@ch,w
  4015     0C54  1D03               	btfss	3,2
  4016     0C55  2C57               	goto	u3171
  4017     0C56  2C58               	goto	u3170
  4018     0C57                     u3171:
  4019     0C57  2C5D               	goto	l2933
  4020     0C58                     u3170:
  4021     0C58                     l2931:
  4022     0C58  081F               	movf	31,w	;volatile
  4023     0C59  39C5               	andlw	197
  4024     0C5A  3810               	iorlw	16
  4025     0C5B  009F               	movwf	31	;volatile
  4026     0C5C  2C60               	goto	l2935
  4027     0C5D                     l2933:
  4028     0C5D  081F               	movf	31,w	;volatile
  4029     0C5E  39C5               	andlw	197
  4030     0C5F  009F               	movwf	31	;volatile
  4031     0C60                     l2935:
  4032     0C60  3004               	movlw	4
  4033     0C61  1283               	bcf	3,5	;RP0=0, select bank0
  4034     0C62  1303               	bcf	3,6	;RP1=0, select bank0
  4035     0C63  00AF               	movwf	??_adcRead
  4036     0C64                     u3827:
  4037     0C64  0BAF               	decfsz	??_adcRead,f
  4038     0C65  2C64               	goto	u3827
  4039     0C66  0000               	nop
  4040     0C67                     l2937:
  4041     0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4042     0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4043     0C69  151F               	bsf	31,2	;volatile
  4044     0C6A                     l132:
  4045     0C6A  191F               	btfsc	31,2	;volatile
  4046     0C6B  2C6D               	goto	u3181
  4047     0C6C  2C6E               	goto	u3180
  4048     0C6D                     u3181:
  4049     0C6D  2C6A               	goto	l132
  4050     0C6E                     u3180:
  4051     0C6E                     l2939:
  4052     0C6E  081E               	movf	30,w	;volatile
  4053     0C6F  00AE               	movwf	?_adcRead+1
  4054     0C70  1683               	bsf	3,5	;RP0=1, select bank1
  4055     0C71  1303               	bcf	3,6	;RP1=0, select bank1
  4056     0C72  081E               	movf	30,w	;volatile
  4057     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  4058     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  4059     0C75  00AD               	movwf	?_adcRead
  4060     0C76                     l135:
  4061     0C76  0008               	return
  4062     0C77                     __end_of_adcRead:
  4063                           
  4064                           	psect	text17
  4065     0D1B                     __ptext17:	
  4066 ;; *************** function ___lwmod *****************
  4067 ;; Defined at:
  4068 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  divisor         2   26[BANK0 ] unsigned int 
  4071 ;;  dividend        2   28[BANK0 ] unsigned int 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  counter         1   30[BANK0 ] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  2   26[BANK0 ] unsigned int 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1
  4083 ;;      Params:         0       4       0
  4084 ;;      Locals:         0       1       0
  4085 ;;      Temps:          0       0       0
  4086 ;;      Totals:         0       5       0
  4087 ;;Total ram usage:        5 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 4
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097     0D1B                     ___lwmod:	
  4098                           ;psect for function ___lwmod
  4099                           
  4100     0D1B                     l3231:	
  4101                           ;incstack = 0
  4102                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4103                           
  4104     0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  4105     0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  4106     0D1D  083A               	movf	___lwmod@divisor,w
  4107     0D1E  043B               	iorwf	___lwmod@divisor+1,w
  4108     0D1F  1903               	btfsc	3,2
  4109     0D20  2D22               	goto	u3571
  4110     0D21  2D23               	goto	u3570
  4111     0D22                     u3571:
  4112     0D22  2D50               	goto	l3249
  4113     0D23                     u3570:
  4114     0D23                     l3233:
  4115     0D23  3001               	movlw	1
  4116     0D24  00BE               	movwf	___lwmod@counter
  4117     0D25  2D2F               	goto	l3239
  4118     0D26                     l3235:
  4119     0D26  3001               	movlw	1
  4120     0D27                     u3585:
  4121     0D27  1003               	clrc
  4122     0D28  0DBA               	rlf	___lwmod@divisor,f
  4123     0D29  0DBB               	rlf	___lwmod@divisor+1,f
  4124     0D2A  3EFF               	addlw	-1
  4125     0D2B  1D03               	skipz
  4126     0D2C  2D27               	goto	u3585
  4127     0D2D                     l3237:
  4128     0D2D  3001               	movlw	1
  4129     0D2E  07BE               	addwf	___lwmod@counter,f
  4130     0D2F                     l3239:
  4131     0D2F  1FBB               	btfss	___lwmod@divisor+1,7
  4132     0D30  2D32               	goto	u3591
  4133     0D31  2D33               	goto	u3590
  4134     0D32                     u3591:
  4135     0D32  2D26               	goto	l3235
  4136     0D33                     u3590:
  4137     0D33                     l3241:
  4138     0D33  083B               	movf	___lwmod@divisor+1,w
  4139     0D34  023D               	subwf	___lwmod@dividend+1,w
  4140     0D35  1D03               	skipz
  4141     0D36  2D39               	goto	u3605
  4142     0D37  083A               	movf	___lwmod@divisor,w
  4143     0D38  023C               	subwf	___lwmod@dividend,w
  4144     0D39                     u3605:
  4145     0D39  1C03               	skipc
  4146     0D3A  2D3C               	goto	u3601
  4147     0D3B  2D3D               	goto	u3600
  4148     0D3C                     u3601:
  4149     0D3C  2D43               	goto	l3245
  4150     0D3D                     u3600:
  4151     0D3D                     l3243:
  4152     0D3D  083A               	movf	___lwmod@divisor,w
  4153     0D3E  02BC               	subwf	___lwmod@dividend,f
  4154     0D3F  083B               	movf	___lwmod@divisor+1,w
  4155     0D40  1C03               	skipc
  4156     0D41  03BD               	decf	___lwmod@dividend+1,f
  4157     0D42  02BD               	subwf	___lwmod@dividend+1,f
  4158     0D43                     l3245:
  4159     0D43  3001               	movlw	1
  4160     0D44                     u3615:
  4161     0D44  1003               	clrc
  4162     0D45  0CBB               	rrf	___lwmod@divisor+1,f
  4163     0D46  0CBA               	rrf	___lwmod@divisor,f
  4164     0D47  3EFF               	addlw	-1
  4165     0D48  1D03               	skipz
  4166     0D49  2D44               	goto	u3615
  4167     0D4A                     l3247:
  4168     0D4A  3001               	movlw	1
  4169     0D4B  02BE               	subwf	___lwmod@counter,f
  4170     0D4C  1D03               	btfss	3,2
  4171     0D4D  2D4F               	goto	u3621
  4172     0D4E  2D50               	goto	u3620
  4173     0D4F                     u3621:
  4174     0D4F  2D33               	goto	l3241
  4175     0D50                     u3620:
  4176     0D50                     l3249:
  4177     0D50  083D               	movf	___lwmod@dividend+1,w
  4178     0D51  00BB               	movwf	?___lwmod+1
  4179     0D52  083C               	movf	___lwmod@dividend,w
  4180     0D53  00BA               	movwf	?___lwmod
  4181     0D54                     l745:
  4182     0D54  0008               	return
  4183     0D55                     __end_of___lwmod:
  4184                           
  4185                           	psect	text18
  4186     0E24                     __ptext18:	
  4187 ;; *************** function _PWM_LED_Set *****************
  4188 ;; Defined at:
  4189 ;;		line 58 in file "Practica-3-main.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  pct             1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  pct             1   22[BANK0 ] unsigned char 
  4194 ;;  r               2   23[BANK0 ] unsigned short 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0, pclath, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1
  4204 ;;      Params:         0       0       0
  4205 ;;      Locals:         0       3       0
  4206 ;;      Temps:          0       3       0
  4207 ;;      Totals:         0       6       0
  4208 ;;Total ram usage:        6 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 5
  4211 ;; This function calls:
  4212 ;;		___wmul
  4213 ;; This function is called by:
  4214 ;;		_main
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218     0E24                     _PWM_LED_Set:	
  4219                           ;psect for function _PWM_LED_Set
  4220                           
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in _PWM_LED_Set: [wreg+status,2+status,0+pclath+cstack]
  4224                           ;PWM_LED_Set@pct stored from wreg
  4225     0E24  1283               	bcf	3,5	;RP0=0, select bank0
  4226     0E25  1303               	bcf	3,6	;RP1=0, select bank0
  4227     0E26  00B6               	movwf	PWM_LED_Set@pct
  4228     0E27                     l2945:
  4229     0E27  0836               	movf	PWM_LED_Set@pct,w
  4230     0E28  00B3               	movwf	??_PWM_LED_Set
  4231     0E29  01B4               	clrf	??_PWM_LED_Set+1
  4232     0E2A  0833               	movf	??_PWM_LED_Set,w
  4233     0E2B  00AD               	movwf	___wmul@multiplier
  4234     0E2C  0834               	movf	??_PWM_LED_Set+1,w
  4235     0E2D  00AE               	movwf	___wmul@multiplier+1
  4236     0E2E  3005               	movlw	5
  4237     0E2F  00AF               	movwf	___wmul@multiplicand
  4238     0E30  3000               	movlw	0
  4239     0E31  00B0               	movwf	___wmul@multiplicand+1
  4240     0E32  158A  23F3  158A   	fcall	___wmul
  4241     0E35  1283               	bcf	3,5	;RP0=0, select bank0
  4242     0E36  1303               	bcf	3,6	;RP1=0, select bank0
  4243     0E37  082E               	movf	?___wmul+1,w
  4244     0E38  00B8               	movwf	PWM_LED_Set@r+1
  4245     0E39  082D               	movf	?___wmul,w
  4246     0E3A  00B7               	movwf	PWM_LED_Set@r
  4247     0E3B                     l2947:
  4248     0E3B  3001               	movlw	1
  4249     0E3C  0238               	subwf	PWM_LED_Set@r+1,w
  4250     0E3D  30F5               	movlw	245
  4251     0E3E  1903               	skipnz
  4252     0E3F  0237               	subwf	PWM_LED_Set@r,w
  4253     0E40  1C03               	skipc
  4254     0E41  2E43               	goto	u3191
  4255     0E42  2E44               	goto	u3190
  4256     0E43                     u3191:
  4257     0E43  2E48               	goto	l2951
  4258     0E44                     u3190:
  4259     0E44                     l2949:
  4260     0E44  30F4               	movlw	244
  4261     0E45  00B7               	movwf	PWM_LED_Set@r
  4262     0E46  3001               	movlw	1
  4263     0E47  00B8               	movwf	PWM_LED_Set@r+1
  4264     0E48                     l2951:
  4265     0E48  0838               	movf	PWM_LED_Set@r+1,w
  4266     0E49  00B4               	movwf	??_PWM_LED_Set+1
  4267     0E4A  0837               	movf	PWM_LED_Set@r,w
  4268     0E4B  00B3               	movwf	??_PWM_LED_Set
  4269     0E4C  1003               	clrc
  4270     0E4D  0CB4               	rrf	??_PWM_LED_Set+1,f
  4271     0E4E  0CB3               	rrf	??_PWM_LED_Set,f
  4272     0E4F  1003               	clrc
  4273     0E50  0CB4               	rrf	??_PWM_LED_Set+1,f
  4274     0E51  0CB3               	rrf	??_PWM_LED_Set,f
  4275     0E52  0833               	movf	??_PWM_LED_Set,w
  4276     0E53  0095               	movwf	21	;volatile
  4277     0E54                     l2953:
  4278     0E54  0838               	movf	PWM_LED_Set@r+1,w
  4279     0E55  00B4               	movwf	??_PWM_LED_Set+1
  4280     0E56  0837               	movf	PWM_LED_Set@r,w
  4281     0E57  00B3               	movwf	??_PWM_LED_Set
  4282     0E58  1003               	clrc
  4283     0E59  0CB4               	rrf	??_PWM_LED_Set+1,f
  4284     0E5A  0CB3               	rrf	??_PWM_LED_Set,f
  4285     0E5B  0833               	movf	??_PWM_LED_Set,w
  4286     0E5C  3901               	andlw	1
  4287     0E5D  00B5               	movwf	??_PWM_LED_Set+2
  4288     0E5E  0EB5               	swapf	??_PWM_LED_Set+2,f
  4289     0E5F  0817               	movf	23,w	;volatile
  4290     0E60  0635               	xorwf	??_PWM_LED_Set+2,w
  4291     0E61  39EF               	andlw	-17
  4292     0E62  0635               	xorwf	??_PWM_LED_Set+2,w
  4293     0E63  0097               	movwf	23	;volatile
  4294     0E64                     l2955:
  4295     0E64  0837               	movf	PWM_LED_Set@r,w
  4296     0E65  3901               	andlw	1
  4297     0E66  00B3               	movwf	??_PWM_LED_Set
  4298     0E67  0EB3               	swapf	??_PWM_LED_Set,f
  4299     0E68  0DB3               	rlf	??_PWM_LED_Set,f
  4300     0E69  0817               	movf	23,w	;volatile
  4301     0E6A  0633               	xorwf	??_PWM_LED_Set,w
  4302     0E6B  39DF               	andlw	-33
  4303     0E6C  0633               	xorwf	??_PWM_LED_Set,w
  4304     0E6D  0097               	movwf	23	;volatile
  4305     0E6E                     l142:
  4306     0E6E  0008               	return
  4307     0E6F                     __end_of_PWM_LED_Set:
  4308                           
  4309                           	psect	text19
  4310     0AEC                     __ptext19:	
  4311 ;; *************** function _PWM_LED_Init *****************
  4312 ;; Defined at:
  4313 ;;		line 56 in file "Practica-3-main.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		None
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1
  4327 ;;      Params:         0       0       0
  4328 ;;      Locals:         0       0       0
  4329 ;;      Temps:          0       0       0
  4330 ;;      Totals:         0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 4
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341     0AEC                     _PWM_LED_Init:	
  4342                           ;psect for function _PWM_LED_Init
  4343                           
  4344     0AEC                     l2943:	
  4345                           ;incstack = 0
  4346                           ; Regs used in _PWM_LED_Init: []
  4347                           
  4348     0AEC  1683               	bsf	3,5	;RP0=1, select bank1
  4349     0AED  1303               	bcf	3,6	;RP1=0, select bank1
  4350     0AEE  1107               	bcf	7,2	;volatile
  4351     0AEF  300C               	movlw	12
  4352     0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  4353     0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  4354     0AF2  0097               	movwf	23	;volatile
  4355     0AF3  3007               	movlw	7
  4356     0AF4  0092               	movwf	18	;volatile
  4357     0AF5  307C               	movlw	124
  4358     0AF6  1683               	bsf	3,5	;RP0=1, select bank1
  4359     0AF7  1303               	bcf	3,6	;RP1=0, select bank1
  4360     0AF8  0092               	movwf	18	;volatile
  4361     0AF9                     l138:
  4362     0AF9  0008               	return
  4363     0AFA                     __end_of_PWM_LED_Init:
  4364                           
  4365                           	psect	text20
  4366     0EBE                     __ptext20:	
  4367 ;; *************** function _PWM1_Set *****************
  4368 ;; Defined at:
  4369 ;;		line 62 in file "Practica-3-main.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  kHz             1    wreg     unsigned char 
  4372 ;;  duty            1   19[BANK0 ] unsigned char 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  kHz             1   23[BANK0 ] unsigned char 
  4375 ;;  r               2   24[BANK0 ] unsigned short 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0, pclath, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1
  4385 ;;      Params:         0       1       0
  4386 ;;      Locals:         0       3       0
  4387 ;;      Temps:          0       3       0
  4388 ;;      Totals:         0       7       0
  4389 ;;Total ram usage:        7 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 5
  4392 ;; This function calls:
  4393 ;;		___wmul
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399     0EBE                     _PWM1_Set:	
  4400                           ;psect for function _PWM1_Set
  4401                           
  4402                           
  4403                           ;incstack = 0
  4404                           ; Regs used in _PWM1_Set: [wreg+status,2+status,0+pclath+cstack]
  4405                           ;PWM1_Set@kHz stored from wreg
  4406     0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  4407     0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  4408     0EC0  00B7               	movwf	PWM1_Set@kHz
  4409     0EC1                     l2959:
  4410     0EC1  0837               	movf	PWM1_Set@kHz,w
  4411     0EC2  1D03               	btfss	3,2
  4412     0EC3  2EC5               	goto	u3201
  4413     0EC4  2EC6               	goto	u3200
  4414     0EC5                     u3201:
  4415     0EC5  2EC8               	goto	l2963
  4416     0EC6                     u3200:
  4417     0EC6                     l2961:
  4418     0EC6  3001               	movlw	1
  4419     0EC7  00B7               	movwf	PWM1_Set@kHz
  4420     0EC8                     l2963:
  4421     0EC8  303F               	movlw	63
  4422     0EC9  0237               	subwf	PWM1_Set@kHz,w
  4423     0ECA  1C03               	skipc
  4424     0ECB  2ECD               	goto	u3211
  4425     0ECC  2ECE               	goto	u3210
  4426     0ECD                     u3211:
  4427     0ECD  2ED0               	goto	l2967
  4428     0ECE                     u3210:
  4429     0ECE                     l2965:
  4430     0ECE  303E               	movlw	62
  4431     0ECF  00B7               	movwf	PWM1_Set@kHz
  4432     0ED0                     l2967:
  4433     0ED0  0837               	movf	PWM1_Set@kHz,w
  4434     0ED1  3C3E               	sublw	62
  4435     0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  4436     0ED3  1303               	bcf	3,6	;RP1=0, select bank1
  4437     0ED4  0092               	movwf	18	;volatile
  4438     0ED5                     l2969:
  4439     0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  4440     0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  4441     0ED7  0833               	movf	PWM1_Set@duty,w
  4442     0ED8  00B4               	movwf	??_PWM1_Set
  4443     0ED9  01B5               	clrf	??_PWM1_Set+1
  4444     0EDA  0834               	movf	??_PWM1_Set,w
  4445     0EDB  00AD               	movwf	___wmul@multiplier
  4446     0EDC  0835               	movf	??_PWM1_Set+1,w
  4447     0EDD  00AE               	movwf	___wmul@multiplier+1
  4448     0EDE  3005               	movlw	5
  4449     0EDF  00AF               	movwf	___wmul@multiplicand
  4450     0EE0  3000               	movlw	0
  4451     0EE1  00B0               	movwf	___wmul@multiplicand+1
  4452     0EE2  158A  23F3  158A   	fcall	___wmul
  4453     0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  4454     0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  4455     0EE7  082E               	movf	?___wmul+1,w
  4456     0EE8  00B9               	movwf	PWM1_Set@r+1
  4457     0EE9  082D               	movf	?___wmul,w
  4458     0EEA  00B8               	movwf	PWM1_Set@r
  4459     0EEB                     l2971:
  4460     0EEB  3001               	movlw	1
  4461     0EEC  0239               	subwf	PWM1_Set@r+1,w
  4462     0EED  30F5               	movlw	245
  4463     0EEE  1903               	skipnz
  4464     0EEF  0238               	subwf	PWM1_Set@r,w
  4465     0EF0  1C03               	skipc
  4466     0EF1  2EF3               	goto	u3221
  4467     0EF2  2EF4               	goto	u3220
  4468     0EF3                     u3221:
  4469     0EF3  2EF8               	goto	l2975
  4470     0EF4                     u3220:
  4471     0EF4                     l2973:
  4472     0EF4  30F4               	movlw	244
  4473     0EF5  00B8               	movwf	PWM1_Set@r
  4474     0EF6  3001               	movlw	1
  4475     0EF7  00B9               	movwf	PWM1_Set@r+1
  4476     0EF8                     l2975:
  4477     0EF8  0839               	movf	PWM1_Set@r+1,w
  4478     0EF9  00B5               	movwf	??_PWM1_Set+1
  4479     0EFA  0838               	movf	PWM1_Set@r,w
  4480     0EFB  00B4               	movwf	??_PWM1_Set
  4481     0EFC  1003               	clrc
  4482     0EFD  0CB5               	rrf	??_PWM1_Set+1,f
  4483     0EFE  0CB4               	rrf	??_PWM1_Set,f
  4484     0EFF  1003               	clrc
  4485     0F00  0CB5               	rrf	??_PWM1_Set+1,f
  4486     0F01  0CB4               	rrf	??_PWM1_Set,f
  4487     0F02  0834               	movf	??_PWM1_Set,w
  4488     0F03  009B               	movwf	27	;volatile
  4489     0F04                     l2977:
  4490     0F04  0839               	movf	PWM1_Set@r+1,w
  4491     0F05  00B5               	movwf	??_PWM1_Set+1
  4492     0F06  0838               	movf	PWM1_Set@r,w
  4493     0F07  00B4               	movwf	??_PWM1_Set
  4494     0F08  1003               	clrc
  4495     0F09  0CB5               	rrf	??_PWM1_Set+1,f
  4496     0F0A  0CB4               	rrf	??_PWM1_Set,f
  4497     0F0B  0834               	movf	??_PWM1_Set,w
  4498     0F0C  3901               	andlw	1
  4499     0F0D  00B6               	movwf	??_PWM1_Set+2
  4500     0F0E  0EB6               	swapf	??_PWM1_Set+2,f
  4501     0F0F  081D               	movf	29,w	;volatile
  4502     0F10  0636               	xorwf	??_PWM1_Set+2,w
  4503     0F11  39EF               	andlw	-17
  4504     0F12  0636               	xorwf	??_PWM1_Set+2,w
  4505     0F13  009D               	movwf	29	;volatile
  4506     0F14                     l2979:
  4507     0F14  0838               	movf	PWM1_Set@r,w
  4508     0F15  3901               	andlw	1
  4509     0F16  00B4               	movwf	??_PWM1_Set
  4510     0F17  0EB4               	swapf	??_PWM1_Set,f
  4511     0F18  0DB4               	rlf	??_PWM1_Set,f
  4512     0F19  081D               	movf	29,w	;volatile
  4513     0F1A  0634               	xorwf	??_PWM1_Set,w
  4514     0F1B  39DF               	andlw	-33
  4515     0F1C  0634               	xorwf	??_PWM1_Set,w
  4516     0F1D  009D               	movwf	29	;volatile
  4517     0F1E                     l151:
  4518     0F1E  0008               	return
  4519     0F1F                     __end_of_PWM1_Set:
  4520                           
  4521                           	psect	text21
  4522     0BF3                     __ptext21:	
  4523 ;; *************** function ___wmul *****************
  4524 ;; Defined at:
  4525 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  multiplier      2   13[BANK0 ] unsigned int 
  4528 ;;  multiplicand    2   15[BANK0 ] unsigned int 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  product         2   17[BANK0 ] unsigned int 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2   13[BANK0 ] unsigned int 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1
  4540 ;;      Params:         0       4       0
  4541 ;;      Locals:         0       2       0
  4542 ;;      Temps:          0       0       0
  4543 ;;      Totals:         0       6       0
  4544 ;;Total ram usage:        6 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 4
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_toDeciv
  4551 ;;		_PWM_LED_Set
  4552 ;;		_PWM1_Set
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556     0BF3                     ___wmul:	
  4557                           ;psect for function ___wmul
  4558                           
  4559     0BF3                     l2777:	
  4560                           ;incstack = 0
  4561                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4562                           
  4563     0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  4564     0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  4565     0BF5  01B1               	clrf	___wmul@product
  4566     0BF6  01B2               	clrf	___wmul@product+1
  4567     0BF7                     l2779:
  4568     0BF7  1C2D               	btfss	___wmul@multiplier,0
  4569     0BF8  2BFA               	goto	u2811
  4570     0BF9  2BFB               	goto	u2810
  4571     0BFA                     u2811:
  4572     0BFA  2C01               	goto	l455
  4573     0BFB                     u2810:
  4574     0BFB                     l2781:
  4575     0BFB  082F               	movf	___wmul@multiplicand,w
  4576     0BFC  07B1               	addwf	___wmul@product,f
  4577     0BFD  1803               	skipnc
  4578     0BFE  0AB2               	incf	___wmul@product+1,f
  4579     0BFF  0830               	movf	___wmul@multiplicand+1,w
  4580     0C00  07B2               	addwf	___wmul@product+1,f
  4581     0C01                     l455:
  4582     0C01  3001               	movlw	1
  4583     0C02                     u2825:
  4584     0C02  1003               	clrc
  4585     0C03  0DAF               	rlf	___wmul@multiplicand,f
  4586     0C04  0DB0               	rlf	___wmul@multiplicand+1,f
  4587     0C05  3EFF               	addlw	-1
  4588     0C06  1D03               	skipz
  4589     0C07  2C02               	goto	u2825
  4590     0C08                     l2783:
  4591     0C08  3001               	movlw	1
  4592     0C09                     u2835:
  4593     0C09  1003               	clrc
  4594     0C0A  0CAE               	rrf	___wmul@multiplier+1,f
  4595     0C0B  0CAD               	rrf	___wmul@multiplier,f
  4596     0C0C  3EFF               	addlw	-1
  4597     0C0D  1D03               	skipz
  4598     0C0E  2C09               	goto	u2835
  4599     0C0F                     l2785:
  4600     0C0F  082D               	movf	___wmul@multiplier,w
  4601     0C10  042E               	iorwf	___wmul@multiplier+1,w
  4602     0C11  1D03               	btfss	3,2
  4603     0C12  2C14               	goto	u2841
  4604     0C13  2C15               	goto	u2840
  4605     0C14                     u2841:
  4606     0C14  2BF7               	goto	l2779
  4607     0C15                     u2840:
  4608     0C15                     l2787:
  4609     0C15  0832               	movf	___wmul@product+1,w
  4610     0C16  00AE               	movwf	?___wmul+1
  4611     0C17  0831               	movf	___wmul@product,w
  4612     0C18  00AD               	movwf	?___wmul
  4613     0C19                     l457:
  4614     0C19  0008               	return
  4615     0C1A                     __end_of___wmul:
  4616                           
  4617                           	psect	text22
  4618     0AD2                     __ptext22:	
  4619 ;; *************** function _PWM1_Init *****************
  4620 ;; Defined at:
  4621 ;;		line 60 in file "Practica-3-main.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		None
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1
  4635 ;;      Params:         0       0       0
  4636 ;;      Locals:         0       0       0
  4637 ;;      Temps:          0       0       0
  4638 ;;      Totals:         0       0       0
  4639 ;;Total ram usage:        0 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 4
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_main
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649     0AD2                     _PWM1_Init:	
  4650                           ;psect for function _PWM1_Init
  4651                           
  4652     0AD2                     l2957:	
  4653                           ;incstack = 0
  4654                           ; Regs used in _PWM1_Init: []
  4655                           
  4656     0AD2  1683               	bsf	3,5	;RP0=1, select bank1
  4657     0AD3  1303               	bcf	3,6	;RP1=0, select bank1
  4658     0AD4  1087               	bcf	7,1	;volatile
  4659     0AD5  300C               	movlw	12
  4660     0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  4661     0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  4662     0AD8  009D               	movwf	29	;volatile
  4663     0AD9                     l145:
  4664     0AD9  0008               	return
  4665     0ADA                     __end_of_PWM1_Init:
  4666                           
  4667                           	psect	text23
  4668     05E5                     __ptext23:	
  4669 ;; *************** function _Lcd_Init *****************
  4670 ;; Defined at:
  4671 ;;		line 65 in file "lcd.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1
  4685 ;;      Params:         0       0       0
  4686 ;;      Locals:         0       0       0
  4687 ;;      Temps:          0       2       0
  4688 ;;      Totals:         0       2       0
  4689 ;;Total ram usage:        2 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 6
  4692 ;; This function calls:
  4693 ;;		_Lcd_Cmd
  4694 ;;		_Lcd_Port
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700     05E5                     _Lcd_Init:	
  4701                           ;psect for function _Lcd_Init
  4702                           
  4703     05E5                     l3069:	
  4704                           ;incstack = 0
  4705                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4706                           
  4707                           
  4708                           ;lcd.c: 68:     TRISCbits.TRISC3 = 0;
  4709     05E5  1683               	bsf	3,5	;RP0=1, select bank1
  4710     05E6  1303               	bcf	3,6	;RP1=0, select bank1
  4711     05E7  1187               	bcf	7,3	;volatile
  4712                           
  4713                           ;lcd.c: 69:     TRISCbits.TRISC5 = 0;
  4714     05E8  1287               	bcf	7,5	;volatile
  4715                           
  4716                           ;lcd.c: 70:     TRISBbits.TRISB4 = 0;
  4717     05E9  1206               	bcf	6,4	;volatile
  4718                           
  4719                           ;lcd.c: 71:     TRISBbits.TRISB5 = 0;
  4720     05EA  1286               	bcf	6,5	;volatile
  4721                           
  4722                           ;lcd.c: 72:     TRISBbits.TRISB6 = 0;
  4723     05EB  1306               	bcf	6,6	;volatile
  4724                           
  4725                           ;lcd.c: 73:     TRISBbits.TRISB7 = 0;
  4726     05EC  1386               	bcf	6,7	;volatile
  4727                           
  4728                           ;lcd.c: 76:     PORTCbits.RC3 = 0;
  4729     05ED  1283               	bcf	3,5	;RP0=0, select bank0
  4730     05EE  1303               	bcf	3,6	;RP1=0, select bank0
  4731     05EF  1187               	bcf	7,3	;volatile
  4732                           
  4733                           ;lcd.c: 77:     PORTCbits.RC5 = 0;
  4734     05F0  1287               	bcf	7,5	;volatile
  4735     05F1                     l3071:
  4736                           
  4737                           ;lcd.c: 78:     Lcd_Port(0x00);
  4738     05F1  3000               	movlw	0
  4739     05F2  158A  23B1  118A   	fcall	_Lcd_Port
  4740     05F5                     l3073:
  4741                           
  4742                           ;lcd.c: 81:     _delay((unsigned long)((50)*(4000000/4000.0)));
  4743     05F5  3041               	movlw	65
  4744     05F6  1283               	bcf	3,5	;RP0=0, select bank0
  4745     05F7  1303               	bcf	3,6	;RP1=0, select bank0
  4746     05F8  00B2               	movwf	??_Lcd_Init+1
  4747     05F9  30EE               	movlw	238
  4748     05FA  00B1               	movwf	??_Lcd_Init
  4749     05FB                     u3837:
  4750     05FB  0BB1               	decfsz	??_Lcd_Init,f
  4751     05FC  2DFB               	goto	u3837
  4752     05FD  0BB2               	decfsz	??_Lcd_Init+1,f
  4753     05FE  2DFB               	goto	u3837
  4754     05FF                     l3075:
  4755                           
  4756                           ;lcd.c: 85:     Lcd_Port(0x03);
  4757     05FF  3003               	movlw	3
  4758     0600  158A  23B1  118A   	fcall	_Lcd_Port
  4759     0603                     l3077:
  4760                           
  4761                           ;lcd.c: 86:     PORTCbits.RC5 = 1;
  4762     0603  1283               	bcf	3,5	;RP0=0, select bank0
  4763     0604  1303               	bcf	3,6	;RP1=0, select bank0
  4764     0605  1687               	bsf	7,5	;volatile
  4765     0606                     l3079:
  4766                           
  4767                           ;lcd.c: 87:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  4768     0606  0000               	nop
  4769     0607                     l3081:
  4770                           
  4771                           ;lcd.c: 88:     PORTCbits.RC5 = 0;
  4772     0607  1283               	bcf	3,5	;RP0=0, select bank0
  4773     0608  1303               	bcf	3,6	;RP1=0, select bank0
  4774     0609  1287               	bcf	7,5	;volatile
  4775                           
  4776                           ;lcd.c: 89:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4777     060A  3007               	movlw	7
  4778     060B  1283               	bcf	3,5	;RP0=0, select bank0
  4779     060C  1303               	bcf	3,6	;RP1=0, select bank0
  4780     060D  00B2               	movwf	??_Lcd_Init+1
  4781     060E  307C               	movlw	124
  4782     060F  00B1               	movwf	??_Lcd_Init
  4783     0610                     u3847:
  4784     0610  0BB1               	decfsz	??_Lcd_Init,f
  4785     0611  2E10               	goto	u3847
  4786     0612  0BB2               	decfsz	??_Lcd_Init+1,f
  4787     0613  2E10               	goto	u3847
  4788     0614  2E15               	nop2
  4789     0615                     l3083:
  4790                           
  4791                           ;lcd.c: 92:     Lcd_Port(0x03);
  4792     0615  3003               	movlw	3
  4793     0616  158A  23B1  118A   	fcall	_Lcd_Port
  4794     0619                     l3085:
  4795                           
  4796                           ;lcd.c: 93:     PORTCbits.RC5 = 1;
  4797     0619  1283               	bcf	3,5	;RP0=0, select bank0
  4798     061A  1303               	bcf	3,6	;RP1=0, select bank0
  4799     061B  1687               	bsf	7,5	;volatile
  4800     061C                     l3087:
  4801                           
  4802                           ;lcd.c: 94:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  4803     061C  0000               	nop
  4804     061D                     l3089:
  4805                           
  4806                           ;lcd.c: 95:     PORTCbits.RC5 = 0;
  4807     061D  1283               	bcf	3,5	;RP0=0, select bank0
  4808     061E  1303               	bcf	3,6	;RP1=0, select bank0
  4809     061F  1287               	bcf	7,5	;volatile
  4810     0620                     l3091:
  4811                           
  4812                           ;lcd.c: 96:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4813     0620  30C7               	movlw	199
  4814     0621  1283               	bcf	3,5	;RP0=0, select bank0
  4815     0622  1303               	bcf	3,6	;RP1=0, select bank0
  4816     0623  00B1               	movwf	??_Lcd_Init
  4817     0624                     u3857:
  4818     0624  2E25               	nop2
  4819     0625  0BB1               	decfsz	??_Lcd_Init,f
  4820     0626  2E24               	goto	u3857
  4821     0627  2E28               	nop2
  4822     0628  0000               	nop
  4823                           
  4824                           ;lcd.c: 99:     Lcd_Port(0x03);
  4825     0629  3003               	movlw	3
  4826     062A  158A  23B1  118A   	fcall	_Lcd_Port
  4827     062D                     l3093:
  4828                           
  4829                           ;lcd.c: 100:     PORTCbits.RC5 = 1;
  4830     062D  1283               	bcf	3,5	;RP0=0, select bank0
  4831     062E  1303               	bcf	3,6	;RP1=0, select bank0
  4832     062F  1687               	bsf	7,5	;volatile
  4833     0630                     l3095:
  4834                           
  4835                           ;lcd.c: 101:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  4836     0630  0000               	nop
  4837     0631                     l3097:
  4838                           
  4839                           ;lcd.c: 102:     PORTCbits.RC5 = 0;
  4840     0631  1283               	bcf	3,5	;RP0=0, select bank0
  4841     0632  1303               	bcf	3,6	;RP1=0, select bank0
  4842     0633  1287               	bcf	7,5	;volatile
  4843     0634                     l3099:
  4844                           
  4845                           ;lcd.c: 103:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4846     0634  30C7               	movlw	199
  4847     0635  1283               	bcf	3,5	;RP0=0, select bank0
  4848     0636  1303               	bcf	3,6	;RP1=0, select bank0
  4849     0637  00B1               	movwf	??_Lcd_Init
  4850     0638                     u3867:
  4851     0638  2E39               	nop2
  4852     0639  0BB1               	decfsz	??_Lcd_Init,f
  4853     063A  2E38               	goto	u3867
  4854     063B  2E3C               	nop2
  4855     063C  0000               	nop
  4856     063D                     l3101:
  4857                           
  4858                           ;lcd.c: 106:     Lcd_Port(0x02);
  4859     063D  3002               	movlw	2
  4860     063E  158A  23B1  118A   	fcall	_Lcd_Port
  4861     0641                     l3103:
  4862                           
  4863                           ;lcd.c: 107:     PORTCbits.RC5 = 1;
  4864     0641  1283               	bcf	3,5	;RP0=0, select bank0
  4865     0642  1303               	bcf	3,6	;RP1=0, select bank0
  4866     0643  1687               	bsf	7,5	;volatile
  4867     0644                     l3105:
  4868                           
  4869                           ;lcd.c: 108:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  4870     0644  0000               	nop
  4871     0645                     l3107:
  4872                           
  4873                           ;lcd.c: 109:     PORTCbits.RC5 = 0;
  4874     0645  1283               	bcf	3,5	;RP0=0, select bank0
  4875     0646  1303               	bcf	3,6	;RP1=0, select bank0
  4876     0647  1287               	bcf	7,5	;volatile
  4877                           
  4878                           ;lcd.c: 110:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4879     0648  30C7               	movlw	199
  4880     0649  1283               	bcf	3,5	;RP0=0, select bank0
  4881     064A  1303               	bcf	3,6	;RP1=0, select bank0
  4882     064B  00B1               	movwf	??_Lcd_Init
  4883     064C                     u3877:
  4884     064C  2E4D               	nop2
  4885     064D  0BB1               	decfsz	??_Lcd_Init,f
  4886     064E  2E4C               	goto	u3877
  4887     064F  2E50               	nop2
  4888     0650  0000               	nop
  4889     0651                     l3109:
  4890                           
  4891                           ;lcd.c: 114:     Lcd_Cmd(0x02);
  4892     0651  3002               	movlw	2
  4893     0652  158A  2376  118A   	fcall	_Lcd_Cmd
  4894     0655                     l3111:
  4895                           
  4896                           ;lcd.c: 115:     Lcd_Cmd(0x08);
  4897     0655  3008               	movlw	8
  4898     0656  158A  2376  118A   	fcall	_Lcd_Cmd
  4899     0659                     l3113:
  4900                           
  4901                           ;lcd.c: 118:     Lcd_Cmd(0x00);
  4902     0659  3000               	movlw	0
  4903     065A  158A  2376  118A   	fcall	_Lcd_Cmd
  4904     065D                     l3115:
  4905                           
  4906                           ;lcd.c: 119:     Lcd_Cmd(0x08);
  4907     065D  3008               	movlw	8
  4908     065E  158A  2376  118A   	fcall	_Lcd_Cmd
  4909     0661                     l3117:
  4910                           
  4911                           ;lcd.c: 122:     Lcd_Cmd(0x00);
  4912     0661  3000               	movlw	0
  4913     0662  158A  2376  118A   	fcall	_Lcd_Cmd
  4914     0665                     l3119:
  4915                           
  4916                           ;lcd.c: 123:     Lcd_Cmd(0x01);
  4917     0665  3001               	movlw	1
  4918     0666  158A  2376  118A   	fcall	_Lcd_Cmd
  4919                           
  4920                           ;lcd.c: 124:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4921     0669  3003               	movlw	3
  4922     066A  1283               	bcf	3,5	;RP0=0, select bank0
  4923     066B  1303               	bcf	3,6	;RP1=0, select bank0
  4924     066C  00B2               	movwf	??_Lcd_Init+1
  4925     066D  3097               	movlw	151
  4926     066E  00B1               	movwf	??_Lcd_Init
  4927     066F                     u3887:
  4928     066F  0BB1               	decfsz	??_Lcd_Init,f
  4929     0670  2E6F               	goto	u3887
  4930     0671  0BB2               	decfsz	??_Lcd_Init+1,f
  4931     0672  2E6F               	goto	u3887
  4932     0673  0000               	nop
  4933     0674                     l3121:
  4934                           
  4935                           ;lcd.c: 127:     Lcd_Cmd(0x00);
  4936     0674  3000               	movlw	0
  4937     0675  158A  2376  118A   	fcall	_Lcd_Cmd
  4938     0678                     l3123:
  4939                           
  4940                           ;lcd.c: 128:     Lcd_Cmd(0x06);
  4941     0678  3006               	movlw	6
  4942     0679  158A  2376  118A   	fcall	_Lcd_Cmd
  4943     067C                     l3125:
  4944                           
  4945                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  4946     067C  3000               	movlw	0
  4947     067D  158A  2376  118A   	fcall	_Lcd_Cmd
  4948     0680                     l3127:
  4949                           
  4950                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  4951     0680  300C               	movlw	12
  4952     0681  158A  2376  118A   	fcall	_Lcd_Cmd
  4953                           
  4954                           ;lcd.c: 134:     _delay((unsigned long)((2)*(4000000/4000.0)));
  4955     0684  3003               	movlw	3
  4956     0685  1283               	bcf	3,5	;RP0=0, select bank0
  4957     0686  1303               	bcf	3,6	;RP1=0, select bank0
  4958     0687  00B2               	movwf	??_Lcd_Init+1
  4959     0688  3097               	movlw	151
  4960     0689  00B1               	movwf	??_Lcd_Init
  4961     068A                     u3897:
  4962     068A  0BB1               	decfsz	??_Lcd_Init,f
  4963     068B  2E8A               	goto	u3897
  4964     068C  0BB2               	decfsz	??_Lcd_Init+1,f
  4965     068D  2E8A               	goto	u3897
  4966     068E  0000               	nop
  4967     068F                     l334:
  4968     068F  0008               	return
  4969     0690                     __end_of_Lcd_Init:
  4970                           
  4971                           	psect	text24
  4972     0B76                     __ptext24:	
  4973 ;; *************** function _Lcd_Cmd *****************
  4974 ;; Defined at:
  4975 ;;		line 11 in file "lcd.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  a               1    wreg     unsigned char 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  a               1   16[BANK0 ] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0, pclath, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMMON   BANK0   BANK1
  4989 ;;      Params:         0       0       0
  4990 ;;      Locals:         0       1       0
  4991 ;;      Temps:          0       2       0
  4992 ;;      Totals:         0       3       0
  4993 ;;Total ram usage:        3 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; Hardware stack levels required when called: 5
  4996 ;; This function calls:
  4997 ;;		_Lcd_Port
  4998 ;; This function is called by:
  4999 ;;		_Lcd_Clear
  5000 ;;		_Lcd_Set_Cursor
  5001 ;;		_Lcd_Init
  5002 ;;		_Lcd_Blink
  5003 ;;		_Lcd_NoBlink
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007     0B76                     _Lcd_Cmd:	
  5008                           ;psect for function _Lcd_Cmd
  5009                           
  5010                           
  5011                           ;incstack = 0
  5012 ;; hardware stack exceeded
  5013                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5014                           ;Lcd_Cmd@a stored from wreg
  5015     0B76  1283               	bcf	3,5	;RP0=0, select bank0
  5016     0B77  1303               	bcf	3,6	;RP1=0, select bank0
  5017     0B78  00B0               	movwf	Lcd_Cmd@a
  5018     0B79                     l2667:
  5019                           
  5020                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTCbits.RC3 = 0;
  5021     0B79  1187               	bcf	7,3	;volatile
  5022     0B7A                     l2669:
  5023                           
  5024                           ;lcd.c: 14:     Lcd_Port(a);
  5025     0B7A  0830               	movf	Lcd_Cmd@a,w
  5026     0B7B  158A  23B1  158A   	fcall	_Lcd_Port
  5027     0B7E                     l2671:
  5028                           
  5029                           ;lcd.c: 15:     PORTCbits.RC5 = 1;
  5030     0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  5031     0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  5032     0B80  1687               	bsf	7,5	;volatile
  5033     0B81                     l2673:
  5034                           
  5035                           ;lcd.c: 16:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  5036     0B81  0000               	nop
  5037     0B82                     l2675:
  5038                           
  5039                           ;lcd.c: 17:     PORTCbits.RC5 = 0;
  5040     0B82  1283               	bcf	3,5	;RP0=0, select bank0
  5041     0B83  1303               	bcf	3,6	;RP1=0, select bank0
  5042     0B84  1287               	bcf	7,5	;volatile
  5043     0B85                     l2677:
  5044                           
  5045                           ;lcd.c: 18:     _delay((unsigned long)((2)*(4000000/4000.0)));
  5046     0B85  3003               	movlw	3
  5047     0B86  1283               	bcf	3,5	;RP0=0, select bank0
  5048     0B87  1303               	bcf	3,6	;RP1=0, select bank0
  5049     0B88  00AF               	movwf	??_Lcd_Cmd+1
  5050     0B89  3097               	movlw	151
  5051     0B8A  00AE               	movwf	??_Lcd_Cmd
  5052     0B8B                     u3907:
  5053     0B8B  0BAE               	decfsz	??_Lcd_Cmd,f
  5054     0B8C  2B8B               	goto	u3907
  5055     0B8D  0BAF               	decfsz	??_Lcd_Cmd+1,f
  5056     0B8E  2B8B               	goto	u3907
  5057     0B8F  0000               	nop
  5058     0B90                     l318:
  5059     0B90  0008               	return
  5060     0B91                     __end_of_Lcd_Cmd:
  5061                           
  5062                           	psect	text25
  5063     0BB1                     __ptext25:	
  5064 ;; *************** function _Lcd_Port *****************
  5065 ;; Defined at:
  5066 ;;		line 3 in file "lcd.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  a               1    wreg     unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  a               1   13[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1
  5080 ;;      Params:         0       0       0
  5081 ;;      Locals:         0       1       0
  5082 ;;      Temps:          0       0       0
  5083 ;;      Totals:         0       1       0
  5084 ;;Total ram usage:        1 bytes
  5085 ;; Hardware stack levels used: 1
  5086 ;; Hardware stack levels required when called: 4
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_Lcd_Cmd
  5091 ;;		_Lcd_Init
  5092 ;;		_Lcd_Write_Char
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096     0BB1                     _Lcd_Port:	
  5097                           ;psect for function _Lcd_Port
  5098                           
  5099                           
  5100                           ;incstack = 0
  5101 ;; hardware stack exceeded
  5102                           ; Regs used in _Lcd_Port: [wreg]
  5103                           ;Lcd_Port@a stored from wreg
  5104     0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  5105     0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  5106     0BB3  00AD               	movwf	Lcd_Port@a
  5107     0BB4                     l2657:
  5108                           
  5109                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  5110     0BB4  1C2D               	btfss	Lcd_Port@a,0
  5111     0BB5  2BB7               	goto	u2641
  5112     0BB6  2BB8               	goto	u2640
  5113     0BB7                     u2641:
  5114     0BB7  2BBA               	goto	l300
  5115     0BB8                     u2640:
  5116     0BB8                     l2659:
  5117     0BB8  1606               	bsf	6,4	;volatile
  5118     0BB9  2BBB               	goto	l302
  5119     0BBA                     l300:
  5120     0BBA  1206               	bcf	6,4	;volatile
  5121     0BBB                     l302:
  5122                           
  5123                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  5124     0BBB  1CAD               	btfss	Lcd_Port@a,1
  5125     0BBC  2BBE               	goto	u2651
  5126     0BBD  2BBF               	goto	u2650
  5127     0BBE                     u2651:
  5128     0BBE  2BC1               	goto	l304
  5129     0BBF                     u2650:
  5130     0BBF                     l2661:
  5131     0BBF  1686               	bsf	6,5	;volatile
  5132     0BC0  2BC2               	goto	l306
  5133     0BC1                     l304:
  5134     0BC1  1286               	bcf	6,5	;volatile
  5135     0BC2                     l306:
  5136                           
  5137                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  5138     0BC2  1D2D               	btfss	Lcd_Port@a,2
  5139     0BC3  2BC5               	goto	u2661
  5140     0BC4  2BC6               	goto	u2660
  5141     0BC5                     u2661:
  5142     0BC5  2BC8               	goto	l308
  5143     0BC6                     u2660:
  5144     0BC6                     l2663:
  5145     0BC6  1706               	bsf	6,6	;volatile
  5146     0BC7  2BC9               	goto	l310
  5147     0BC8                     l308:
  5148     0BC8  1306               	bcf	6,6	;volatile
  5149     0BC9                     l310:
  5150                           
  5151                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  5152     0BC9  1DAD               	btfss	Lcd_Port@a,3
  5153     0BCA  2BCC               	goto	u2671
  5154     0BCB  2BCD               	goto	u2670
  5155     0BCC                     u2671:
  5156     0BCC  2BCF               	goto	l312
  5157     0BCD                     u2670:
  5158     0BCD                     l2665:
  5159     0BCD  1786               	bsf	6,7	;volatile
  5160     0BCE  2BD0               	goto	l315
  5161     0BCF                     l312:
  5162     0BCF  1386               	bcf	6,7	;volatile
  5163     0BD0                     l315:
  5164     0BD0  0008               	return
  5165     0BD1                     __end_of_Lcd_Port:
  5166                           
  5167                           	psect	text26
  5168     0ACB                     __ptext26:	
  5169 ;; *************** function _Keypad_Init *****************
  5170 ;; Defined at:
  5171 ;;		line 3 in file "kbd4x4.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;		None
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		None
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1
  5185 ;;      Params:         0       0       0
  5186 ;;      Locals:         0       0       0
  5187 ;;      Temps:          0       0       0
  5188 ;;      Totals:         0       0       0
  5189 ;;Total ram usage:        0 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; Hardware stack levels required when called: 4
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_main
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199     0ACB                     _Keypad_Init:	
  5200                           ;psect for function _Keypad_Init
  5201                           
  5202     0ACB                     l3067:	
  5203                           ;incstack = 0
  5204                           ; Regs used in _Keypad_Init: []
  5205                           
  5206                           
  5207                           ;kbd4x4.c: 9:     TRISBbits.TRISB3 = 1;
  5208     0ACB  1683               	bsf	3,5	;RP0=1, select bank1
  5209     0ACC  1303               	bcf	3,6	;RP1=0, select bank1
  5210     0ACD  1586               	bsf	6,3	;volatile
  5211                           
  5212                           ;kbd4x4.c: 10:     TRISBbits.TRISB2 = 1;
  5213     0ACE  1506               	bsf	6,2	;volatile
  5214                           
  5215                           ;kbd4x4.c: 11:     TRISBbits.TRISB1 = 1;
  5216     0ACF  1486               	bsf	6,1	;volatile
  5217                           
  5218                           ;kbd4x4.c: 12:     TRISBbits.TRISB0 = 1;
  5219     0AD0  1406               	bsf	6,0	;volatile
  5220     0AD1                     l219:
  5221     0AD1  0008               	return
  5222     0AD2                     __end_of_Keypad_Init:
  5223                           
  5224                           	psect	text27
  5225     02F9                     __ptext27:	
  5226 ;; *************** function _Keypad_Get_Char *****************
  5227 ;; Defined at:
  5228 ;;		line 15 in file "kbd4x4.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      unsigned char 
  5235 ;; Registers used:
  5236 ;;		wreg
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1
  5242 ;;      Params:         0       0       0
  5243 ;;      Locals:         0       0       0
  5244 ;;      Temps:          0       2       0
  5245 ;;      Totals:         0       2       0
  5246 ;;Total ram usage:        2 bytes
  5247 ;; Hardware stack levels used: 1
  5248 ;; Hardware stack levels required when called: 4
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_main
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256     02F9                     _Keypad_Get_Char:	
  5257                           ;psect for function _Keypad_Get_Char
  5258                           
  5259     02F9                     l3129:	
  5260                           ;incstack = 0
  5261                           ; Regs used in _Keypad_Get_Char: [wreg]
  5262                           
  5263                           
  5264                           ;kbd4x4.c: 17:     PORTBbits.RB4 = 0;
  5265     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  5266     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  5267     02FB  1206               	bcf	6,4	;volatile
  5268                           
  5269                           ;kbd4x4.c: 18:     PORTBbits.RB5 = 1;
  5270     02FC  1686               	bsf	6,5	;volatile
  5271                           
  5272                           ;kbd4x4.c: 19:     PORTBbits.RB6 = 1;
  5273     02FD  1706               	bsf	6,6	;volatile
  5274                           
  5275                           ;kbd4x4.c: 20:     PORTBbits.RB7 = 1;
  5276     02FE  1786               	bsf	6,7	;volatile
  5277                           
  5278                           ;kbd4x4.c: 21:     if(PORTBbits.RB3 == 0){
  5279     02FF  1986               	btfsc	6,3	;volatile
  5280     0300  2B02               	goto	u3251
  5281     0301  2B03               	goto	u3250
  5282     0302                     u3251:
  5283     0302  2B21               	goto	l222
  5284     0303                     u3250:
  5285     0303                     l3131:
  5286                           
  5287                           ;kbd4x4.c: 22:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5288     0303  3003               	movlw	3
  5289     0304  1283               	bcf	3,5	;RP0=0, select bank0
  5290     0305  1303               	bcf	3,6	;RP1=0, select bank0
  5291     0306  00AE               	movwf	??_Keypad_Get_Char+1
  5292     0307  3097               	movlw	151
  5293     0308  00AD               	movwf	??_Keypad_Get_Char
  5294     0309                     u3917:
  5295     0309  0BAD               	decfsz	??_Keypad_Get_Char,f
  5296     030A  2B09               	goto	u3917
  5297     030B  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5298     030C  2B09               	goto	u3917
  5299     030D  0000               	nop
  5300     030E                     l223:	
  5301                           ;kbd4x4.c: 23:         while(PORTBbits.RB3 == 0);
  5302                           
  5303     030E  1283               	bcf	3,5	;RP0=0, select bank0
  5304     030F  1303               	bcf	3,6	;RP1=0, select bank0
  5305     0310  1D86               	btfss	6,3	;volatile
  5306     0311  2B13               	goto	u3261
  5307     0312  2B14               	goto	u3260
  5308     0313                     u3261:
  5309     0313  2B0E               	goto	l223
  5310     0314                     u3260:
  5311     0314                     l3133:
  5312                           
  5313                           ;kbd4x4.c: 24:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5314     0314  3007               	movlw	7
  5315     0315  1283               	bcf	3,5	;RP0=0, select bank0
  5316     0316  1303               	bcf	3,6	;RP1=0, select bank0
  5317     0317  00AE               	movwf	??_Keypad_Get_Char+1
  5318     0318  307C               	movlw	124
  5319     0319  00AD               	movwf	??_Keypad_Get_Char
  5320     031A                     u3927:
  5321     031A  0BAD               	decfsz	??_Keypad_Get_Char,f
  5322     031B  2B1A               	goto	u3927
  5323     031C  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5324     031D  2B1A               	goto	u3927
  5325     031E  2B1F               	nop2
  5326                           
  5327                           ;kbd4x4.c: 25:         return '1';
  5328     031F  3031               	movlw	49
  5329     0320  2D2C               	goto	l226
  5330     0321                     l222:	
  5331                           ;kbd4x4.c: 26:     }
  5332                           
  5333                           
  5334                           ;kbd4x4.c: 27:     if(PORTBbits.RB2 == 0){
  5335     0321  1906               	btfsc	6,2	;volatile
  5336     0322  2B24               	goto	u3271
  5337     0323  2B25               	goto	u3270
  5338     0324                     u3271:
  5339     0324  2B43               	goto	l227
  5340     0325                     u3270:
  5341     0325                     l3137:
  5342                           
  5343                           ;kbd4x4.c: 28:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5344     0325  3003               	movlw	3
  5345     0326  1283               	bcf	3,5	;RP0=0, select bank0
  5346     0327  1303               	bcf	3,6	;RP1=0, select bank0
  5347     0328  00AE               	movwf	??_Keypad_Get_Char+1
  5348     0329  3097               	movlw	151
  5349     032A  00AD               	movwf	??_Keypad_Get_Char
  5350     032B                     u3937:
  5351     032B  0BAD               	decfsz	??_Keypad_Get_Char,f
  5352     032C  2B2B               	goto	u3937
  5353     032D  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5354     032E  2B2B               	goto	u3937
  5355     032F  0000               	nop
  5356     0330                     l228:	
  5357                           ;kbd4x4.c: 29:         while(PORTBbits.RB2 == 0);
  5358                           
  5359     0330  1283               	bcf	3,5	;RP0=0, select bank0
  5360     0331  1303               	bcf	3,6	;RP1=0, select bank0
  5361     0332  1D06               	btfss	6,2	;volatile
  5362     0333  2B35               	goto	u3281
  5363     0334  2B36               	goto	u3280
  5364     0335                     u3281:
  5365     0335  2B30               	goto	l228
  5366     0336                     u3280:
  5367     0336                     l3139:
  5368                           
  5369                           ;kbd4x4.c: 30:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5370     0336  3007               	movlw	7
  5371     0337  1283               	bcf	3,5	;RP0=0, select bank0
  5372     0338  1303               	bcf	3,6	;RP1=0, select bank0
  5373     0339  00AE               	movwf	??_Keypad_Get_Char+1
  5374     033A  307C               	movlw	124
  5375     033B  00AD               	movwf	??_Keypad_Get_Char
  5376     033C                     u3947:
  5377     033C  0BAD               	decfsz	??_Keypad_Get_Char,f
  5378     033D  2B3C               	goto	u3947
  5379     033E  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5380     033F  2B3C               	goto	u3947
  5381     0340  2B41               	nop2
  5382                           
  5383                           ;kbd4x4.c: 31:         return '2';
  5384     0341  3032               	movlw	50
  5385     0342  2D2C               	goto	l226
  5386     0343                     l227:	
  5387                           ;kbd4x4.c: 32:     }
  5388                           
  5389                           
  5390                           ;kbd4x4.c: 33:     if(PORTBbits.RB1 == 0){
  5391     0343  1886               	btfsc	6,1	;volatile
  5392     0344  2B46               	goto	u3291
  5393     0345  2B47               	goto	u3290
  5394     0346                     u3291:
  5395     0346  2B65               	goto	l231
  5396     0347                     u3290:
  5397     0347                     l3143:
  5398                           
  5399                           ;kbd4x4.c: 34:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5400     0347  3003               	movlw	3
  5401     0348  1283               	bcf	3,5	;RP0=0, select bank0
  5402     0349  1303               	bcf	3,6	;RP1=0, select bank0
  5403     034A  00AE               	movwf	??_Keypad_Get_Char+1
  5404     034B  3097               	movlw	151
  5405     034C  00AD               	movwf	??_Keypad_Get_Char
  5406     034D                     u3957:
  5407     034D  0BAD               	decfsz	??_Keypad_Get_Char,f
  5408     034E  2B4D               	goto	u3957
  5409     034F  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5410     0350  2B4D               	goto	u3957
  5411     0351  0000               	nop
  5412     0352                     l232:	
  5413                           ;kbd4x4.c: 35:         while(PORTBbits.RB1 == 0);
  5414                           
  5415     0352  1283               	bcf	3,5	;RP0=0, select bank0
  5416     0353  1303               	bcf	3,6	;RP1=0, select bank0
  5417     0354  1C86               	btfss	6,1	;volatile
  5418     0355  2B57               	goto	u3301
  5419     0356  2B58               	goto	u3300
  5420     0357                     u3301:
  5421     0357  2B52               	goto	l232
  5422     0358                     u3300:
  5423     0358                     l3145:
  5424                           
  5425                           ;kbd4x4.c: 36:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5426     0358  3007               	movlw	7
  5427     0359  1283               	bcf	3,5	;RP0=0, select bank0
  5428     035A  1303               	bcf	3,6	;RP1=0, select bank0
  5429     035B  00AE               	movwf	??_Keypad_Get_Char+1
  5430     035C  307C               	movlw	124
  5431     035D  00AD               	movwf	??_Keypad_Get_Char
  5432     035E                     u3967:
  5433     035E  0BAD               	decfsz	??_Keypad_Get_Char,f
  5434     035F  2B5E               	goto	u3967
  5435     0360  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5436     0361  2B5E               	goto	u3967
  5437     0362  2B63               	nop2
  5438                           
  5439                           ;kbd4x4.c: 37:         return '3';
  5440     0363  3033               	movlw	51
  5441     0364  2D2C               	goto	l226
  5442     0365                     l231:	
  5443                           ;kbd4x4.c: 38:     }
  5444                           
  5445                           
  5446                           ;kbd4x4.c: 39:     if(PORTBbits.RB0 == 0){
  5447     0365  1806               	btfsc	6,0	;volatile
  5448     0366  2B68               	goto	u3311
  5449     0367  2B69               	goto	u3310
  5450     0368                     u3311:
  5451     0368  2B87               	goto	l235
  5452     0369                     u3310:
  5453     0369                     l3149:
  5454                           
  5455                           ;kbd4x4.c: 40:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5456     0369  3003               	movlw	3
  5457     036A  1283               	bcf	3,5	;RP0=0, select bank0
  5458     036B  1303               	bcf	3,6	;RP1=0, select bank0
  5459     036C  00AE               	movwf	??_Keypad_Get_Char+1
  5460     036D  3097               	movlw	151
  5461     036E  00AD               	movwf	??_Keypad_Get_Char
  5462     036F                     u3977:
  5463     036F  0BAD               	decfsz	??_Keypad_Get_Char,f
  5464     0370  2B6F               	goto	u3977
  5465     0371  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5466     0372  2B6F               	goto	u3977
  5467     0373  0000               	nop
  5468     0374                     l236:	
  5469                           ;kbd4x4.c: 41:         while(PORTBbits.RB0 == 0);
  5470                           
  5471     0374  1283               	bcf	3,5	;RP0=0, select bank0
  5472     0375  1303               	bcf	3,6	;RP1=0, select bank0
  5473     0376  1C06               	btfss	6,0	;volatile
  5474     0377  2B79               	goto	u3321
  5475     0378  2B7A               	goto	u3320
  5476     0379                     u3321:
  5477     0379  2B74               	goto	l236
  5478     037A                     u3320:
  5479     037A                     l3151:
  5480                           
  5481                           ;kbd4x4.c: 42:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5482     037A  3007               	movlw	7
  5483     037B  1283               	bcf	3,5	;RP0=0, select bank0
  5484     037C  1303               	bcf	3,6	;RP1=0, select bank0
  5485     037D  00AE               	movwf	??_Keypad_Get_Char+1
  5486     037E  307C               	movlw	124
  5487     037F  00AD               	movwf	??_Keypad_Get_Char
  5488     0380                     u3987:
  5489     0380  0BAD               	decfsz	??_Keypad_Get_Char,f
  5490     0381  2B80               	goto	u3987
  5491     0382  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5492     0383  2B80               	goto	u3987
  5493     0384  2B85               	nop2
  5494                           
  5495                           ;kbd4x4.c: 43:         return 'A';
  5496     0385  3041               	movlw	65
  5497     0386  2D2C               	goto	l226
  5498     0387                     l235:	
  5499                           ;kbd4x4.c: 44:     }
  5500                           
  5501                           
  5502                           ;kbd4x4.c: 46:     PORTBbits.RB4 = 1;
  5503     0387  1606               	bsf	6,4	;volatile
  5504                           
  5505                           ;kbd4x4.c: 47:     PORTBbits.RB5 = 0;
  5506     0388  1286               	bcf	6,5	;volatile
  5507                           
  5508                           ;kbd4x4.c: 48:     PORTBbits.RB6 = 1;
  5509     0389  1706               	bsf	6,6	;volatile
  5510                           
  5511                           ;kbd4x4.c: 49:     PORTBbits.RB7 = 1;
  5512     038A  1786               	bsf	6,7	;volatile
  5513                           
  5514                           ;kbd4x4.c: 50:     if(PORTBbits.RB3 == 0){
  5515     038B  1986               	btfsc	6,3	;volatile
  5516     038C  2B8E               	goto	u3331
  5517     038D  2B8F               	goto	u3330
  5518     038E                     u3331:
  5519     038E  2BAD               	goto	l239
  5520     038F                     u3330:
  5521     038F                     l3155:
  5522                           
  5523                           ;kbd4x4.c: 51:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5524     038F  3003               	movlw	3
  5525     0390  1283               	bcf	3,5	;RP0=0, select bank0
  5526     0391  1303               	bcf	3,6	;RP1=0, select bank0
  5527     0392  00AE               	movwf	??_Keypad_Get_Char+1
  5528     0393  3097               	movlw	151
  5529     0394  00AD               	movwf	??_Keypad_Get_Char
  5530     0395                     u3997:
  5531     0395  0BAD               	decfsz	??_Keypad_Get_Char,f
  5532     0396  2B95               	goto	u3997
  5533     0397  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5534     0398  2B95               	goto	u3997
  5535     0399  0000               	nop
  5536     039A                     l240:	
  5537                           ;kbd4x4.c: 52:         while(PORTBbits.RB3 == 0);
  5538                           
  5539     039A  1283               	bcf	3,5	;RP0=0, select bank0
  5540     039B  1303               	bcf	3,6	;RP1=0, select bank0
  5541     039C  1D86               	btfss	6,3	;volatile
  5542     039D  2B9F               	goto	u3341
  5543     039E  2BA0               	goto	u3340
  5544     039F                     u3341:
  5545     039F  2B9A               	goto	l240
  5546     03A0                     u3340:
  5547     03A0                     l3157:
  5548                           
  5549                           ;kbd4x4.c: 53:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5550     03A0  3007               	movlw	7
  5551     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  5552     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  5553     03A3  00AE               	movwf	??_Keypad_Get_Char+1
  5554     03A4  307C               	movlw	124
  5555     03A5  00AD               	movwf	??_Keypad_Get_Char
  5556     03A6                     u4007:
  5557     03A6  0BAD               	decfsz	??_Keypad_Get_Char,f
  5558     03A7  2BA6               	goto	u4007
  5559     03A8  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5560     03A9  2BA6               	goto	u4007
  5561     03AA  2BAB               	nop2
  5562                           
  5563                           ;kbd4x4.c: 54:         return '4';
  5564     03AB  3034               	movlw	52
  5565     03AC  2D2C               	goto	l226
  5566     03AD                     l239:	
  5567                           ;kbd4x4.c: 55:     }
  5568                           
  5569                           
  5570                           ;kbd4x4.c: 56:     if(PORTBbits.RB2 == 0){
  5571     03AD  1906               	btfsc	6,2	;volatile
  5572     03AE  2BB0               	goto	u3351
  5573     03AF  2BB1               	goto	u3350
  5574     03B0                     u3351:
  5575     03B0  2BCF               	goto	l243
  5576     03B1                     u3350:
  5577     03B1                     l3161:
  5578                           
  5579                           ;kbd4x4.c: 57:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5580     03B1  3003               	movlw	3
  5581     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  5582     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  5583     03B4  00AE               	movwf	??_Keypad_Get_Char+1
  5584     03B5  3097               	movlw	151
  5585     03B6  00AD               	movwf	??_Keypad_Get_Char
  5586     03B7                     u4017:
  5587     03B7  0BAD               	decfsz	??_Keypad_Get_Char,f
  5588     03B8  2BB7               	goto	u4017
  5589     03B9  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5590     03BA  2BB7               	goto	u4017
  5591     03BB  0000               	nop
  5592     03BC                     l244:	
  5593                           ;kbd4x4.c: 58:         while(PORTBbits.RB2 == 0);
  5594                           
  5595     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  5596     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  5597     03BE  1D06               	btfss	6,2	;volatile
  5598     03BF  2BC1               	goto	u3361
  5599     03C0  2BC2               	goto	u3360
  5600     03C1                     u3361:
  5601     03C1  2BBC               	goto	l244
  5602     03C2                     u3360:
  5603     03C2                     l3163:
  5604                           
  5605                           ;kbd4x4.c: 59:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5606     03C2  3007               	movlw	7
  5607     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  5608     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  5609     03C5  00AE               	movwf	??_Keypad_Get_Char+1
  5610     03C6  307C               	movlw	124
  5611     03C7  00AD               	movwf	??_Keypad_Get_Char
  5612     03C8                     u4027:
  5613     03C8  0BAD               	decfsz	??_Keypad_Get_Char,f
  5614     03C9  2BC8               	goto	u4027
  5615     03CA  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5616     03CB  2BC8               	goto	u4027
  5617     03CC  2BCD               	nop2
  5618                           
  5619                           ;kbd4x4.c: 60:         return '5';
  5620     03CD  3035               	movlw	53
  5621     03CE  2D2C               	goto	l226
  5622     03CF                     l243:	
  5623                           ;kbd4x4.c: 61:     }
  5624                           
  5625                           
  5626                           ;kbd4x4.c: 62:     if(PORTBbits.RB1 == 0){
  5627     03CF  1886               	btfsc	6,1	;volatile
  5628     03D0  2BD2               	goto	u3371
  5629     03D1  2BD3               	goto	u3370
  5630     03D2                     u3371:
  5631     03D2  2BF1               	goto	l247
  5632     03D3                     u3370:
  5633     03D3                     l3167:
  5634                           
  5635                           ;kbd4x4.c: 63:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5636     03D3  3003               	movlw	3
  5637     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  5638     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  5639     03D6  00AE               	movwf	??_Keypad_Get_Char+1
  5640     03D7  3097               	movlw	151
  5641     03D8  00AD               	movwf	??_Keypad_Get_Char
  5642     03D9                     u4037:
  5643     03D9  0BAD               	decfsz	??_Keypad_Get_Char,f
  5644     03DA  2BD9               	goto	u4037
  5645     03DB  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5646     03DC  2BD9               	goto	u4037
  5647     03DD  0000               	nop
  5648     03DE                     l248:	
  5649                           ;kbd4x4.c: 64:         while(PORTBbits.RB1 == 0);
  5650                           
  5651     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  5652     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  5653     03E0  1C86               	btfss	6,1	;volatile
  5654     03E1  2BE3               	goto	u3381
  5655     03E2  2BE4               	goto	u3380
  5656     03E3                     u3381:
  5657     03E3  2BDE               	goto	l248
  5658     03E4                     u3380:
  5659     03E4                     l3169:
  5660                           
  5661                           ;kbd4x4.c: 65:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5662     03E4  3007               	movlw	7
  5663     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  5664     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  5665     03E7  00AE               	movwf	??_Keypad_Get_Char+1
  5666     03E8  307C               	movlw	124
  5667     03E9  00AD               	movwf	??_Keypad_Get_Char
  5668     03EA                     u4047:
  5669     03EA  0BAD               	decfsz	??_Keypad_Get_Char,f
  5670     03EB  2BEA               	goto	u4047
  5671     03EC  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5672     03ED  2BEA               	goto	u4047
  5673     03EE  2BEF               	nop2
  5674                           
  5675                           ;kbd4x4.c: 66:         return '6';
  5676     03EF  3036               	movlw	54
  5677     03F0  2D2C               	goto	l226
  5678     03F1                     l247:	
  5679                           ;kbd4x4.c: 67:     }
  5680                           
  5681                           
  5682                           ;kbd4x4.c: 68:     if(PORTBbits.RB0 == 0){
  5683     03F1  1806               	btfsc	6,0	;volatile
  5684     03F2  2BF4               	goto	u3391
  5685     03F3  2BF5               	goto	u3390
  5686     03F4                     u3391:
  5687     03F4  2C13               	goto	l251
  5688     03F5                     u3390:
  5689     03F5                     l3173:
  5690                           
  5691                           ;kbd4x4.c: 69:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5692     03F5  3003               	movlw	3
  5693     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  5694     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  5695     03F8  00AE               	movwf	??_Keypad_Get_Char+1
  5696     03F9  3097               	movlw	151
  5697     03FA  00AD               	movwf	??_Keypad_Get_Char
  5698     03FB                     u4057:
  5699     03FB  0BAD               	decfsz	??_Keypad_Get_Char,f
  5700     03FC  2BFB               	goto	u4057
  5701     03FD  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5702     03FE  2BFB               	goto	u4057
  5703     03FF  0000               	nop
  5704     0400                     l252:	
  5705                           ;kbd4x4.c: 70:         while(PORTBbits.RB0 == 0);
  5706                           
  5707     0400  1283               	bcf	3,5	;RP0=0, select bank0
  5708     0401  1303               	bcf	3,6	;RP1=0, select bank0
  5709     0402  1C06               	btfss	6,0	;volatile
  5710     0403  2C05               	goto	u3401
  5711     0404  2C06               	goto	u3400
  5712     0405                     u3401:
  5713     0405  2C00               	goto	l252
  5714     0406                     u3400:
  5715     0406                     l3175:
  5716                           
  5717                           ;kbd4x4.c: 71:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5718     0406  3007               	movlw	7
  5719     0407  1283               	bcf	3,5	;RP0=0, select bank0
  5720     0408  1303               	bcf	3,6	;RP1=0, select bank0
  5721     0409  00AE               	movwf	??_Keypad_Get_Char+1
  5722     040A  307C               	movlw	124
  5723     040B  00AD               	movwf	??_Keypad_Get_Char
  5724     040C                     u4067:
  5725     040C  0BAD               	decfsz	??_Keypad_Get_Char,f
  5726     040D  2C0C               	goto	u4067
  5727     040E  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5728     040F  2C0C               	goto	u4067
  5729     0410  2C11               	nop2
  5730                           
  5731                           ;kbd4x4.c: 72:         return 'B';
  5732     0411  3042               	movlw	66
  5733     0412  2D2C               	goto	l226
  5734     0413                     l251:	
  5735                           ;kbd4x4.c: 73:     }
  5736                           
  5737                           
  5738                           ;kbd4x4.c: 75:     PORTBbits.RB4 = 1;
  5739     0413  1606               	bsf	6,4	;volatile
  5740                           
  5741                           ;kbd4x4.c: 76:     PORTBbits.RB5 = 1;
  5742     0414  1686               	bsf	6,5	;volatile
  5743                           
  5744                           ;kbd4x4.c: 77:     PORTBbits.RB6 = 0;
  5745     0415  1306               	bcf	6,6	;volatile
  5746                           
  5747                           ;kbd4x4.c: 78:     PORTBbits.RB7 = 1;
  5748     0416  1786               	bsf	6,7	;volatile
  5749                           
  5750                           ;kbd4x4.c: 79:     if(PORTBbits.RB3 == 0){
  5751     0417  1986               	btfsc	6,3	;volatile
  5752     0418  2C1A               	goto	u3411
  5753     0419  2C1B               	goto	u3410
  5754     041A                     u3411:
  5755     041A  2C39               	goto	l255
  5756     041B                     u3410:
  5757     041B                     l3179:
  5758                           
  5759                           ;kbd4x4.c: 80:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5760     041B  3003               	movlw	3
  5761     041C  1283               	bcf	3,5	;RP0=0, select bank0
  5762     041D  1303               	bcf	3,6	;RP1=0, select bank0
  5763     041E  00AE               	movwf	??_Keypad_Get_Char+1
  5764     041F  3097               	movlw	151
  5765     0420  00AD               	movwf	??_Keypad_Get_Char
  5766     0421                     u4077:
  5767     0421  0BAD               	decfsz	??_Keypad_Get_Char,f
  5768     0422  2C21               	goto	u4077
  5769     0423  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5770     0424  2C21               	goto	u4077
  5771     0425  0000               	nop
  5772     0426                     l256:	
  5773                           ;kbd4x4.c: 81:         while(PORTBbits.RB3 == 0);
  5774                           
  5775     0426  1283               	bcf	3,5	;RP0=0, select bank0
  5776     0427  1303               	bcf	3,6	;RP1=0, select bank0
  5777     0428  1D86               	btfss	6,3	;volatile
  5778     0429  2C2B               	goto	u3421
  5779     042A  2C2C               	goto	u3420
  5780     042B                     u3421:
  5781     042B  2C26               	goto	l256
  5782     042C                     u3420:
  5783     042C                     l3181:
  5784                           
  5785                           ;kbd4x4.c: 82:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5786     042C  3007               	movlw	7
  5787     042D  1283               	bcf	3,5	;RP0=0, select bank0
  5788     042E  1303               	bcf	3,6	;RP1=0, select bank0
  5789     042F  00AE               	movwf	??_Keypad_Get_Char+1
  5790     0430  307C               	movlw	124
  5791     0431  00AD               	movwf	??_Keypad_Get_Char
  5792     0432                     u4087:
  5793     0432  0BAD               	decfsz	??_Keypad_Get_Char,f
  5794     0433  2C32               	goto	u4087
  5795     0434  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5796     0435  2C32               	goto	u4087
  5797     0436  2C37               	nop2
  5798                           
  5799                           ;kbd4x4.c: 83:         return '7';
  5800     0437  3037               	movlw	55
  5801     0438  2D2C               	goto	l226
  5802     0439                     l255:	
  5803                           ;kbd4x4.c: 84:     }
  5804                           
  5805                           
  5806                           ;kbd4x4.c: 85:     if(PORTBbits.RB2 == 0){
  5807     0439  1906               	btfsc	6,2	;volatile
  5808     043A  2C3C               	goto	u3431
  5809     043B  2C3D               	goto	u3430
  5810     043C                     u3431:
  5811     043C  2C5B               	goto	l259
  5812     043D                     u3430:
  5813     043D                     l3185:
  5814                           
  5815                           ;kbd4x4.c: 86:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5816     043D  3003               	movlw	3
  5817     043E  1283               	bcf	3,5	;RP0=0, select bank0
  5818     043F  1303               	bcf	3,6	;RP1=0, select bank0
  5819     0440  00AE               	movwf	??_Keypad_Get_Char+1
  5820     0441  3097               	movlw	151
  5821     0442  00AD               	movwf	??_Keypad_Get_Char
  5822     0443                     u4097:
  5823     0443  0BAD               	decfsz	??_Keypad_Get_Char,f
  5824     0444  2C43               	goto	u4097
  5825     0445  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5826     0446  2C43               	goto	u4097
  5827     0447  0000               	nop
  5828     0448                     l260:	
  5829                           ;kbd4x4.c: 87:         while(PORTBbits.RB2 == 0);
  5830                           
  5831     0448  1283               	bcf	3,5	;RP0=0, select bank0
  5832     0449  1303               	bcf	3,6	;RP1=0, select bank0
  5833     044A  1D06               	btfss	6,2	;volatile
  5834     044B  2C4D               	goto	u3441
  5835     044C  2C4E               	goto	u3440
  5836     044D                     u3441:
  5837     044D  2C48               	goto	l260
  5838     044E                     u3440:
  5839     044E                     l3187:
  5840                           
  5841                           ;kbd4x4.c: 88:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5842     044E  3007               	movlw	7
  5843     044F  1283               	bcf	3,5	;RP0=0, select bank0
  5844     0450  1303               	bcf	3,6	;RP1=0, select bank0
  5845     0451  00AE               	movwf	??_Keypad_Get_Char+1
  5846     0452  307C               	movlw	124
  5847     0453  00AD               	movwf	??_Keypad_Get_Char
  5848     0454                     u4107:
  5849     0454  0BAD               	decfsz	??_Keypad_Get_Char,f
  5850     0455  2C54               	goto	u4107
  5851     0456  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5852     0457  2C54               	goto	u4107
  5853     0458  2C59               	nop2
  5854                           
  5855                           ;kbd4x4.c: 89:         return '8';
  5856     0459  3038               	movlw	56
  5857     045A  2D2C               	goto	l226
  5858     045B                     l259:	
  5859                           ;kbd4x4.c: 90:     }
  5860                           
  5861                           
  5862                           ;kbd4x4.c: 91:     if(PORTBbits.RB1 == 0){
  5863     045B  1886               	btfsc	6,1	;volatile
  5864     045C  2C5E               	goto	u3451
  5865     045D  2C5F               	goto	u3450
  5866     045E                     u3451:
  5867     045E  2C7D               	goto	l263
  5868     045F                     u3450:
  5869     045F                     l3191:
  5870                           
  5871                           ;kbd4x4.c: 92:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5872     045F  3003               	movlw	3
  5873     0460  1283               	bcf	3,5	;RP0=0, select bank0
  5874     0461  1303               	bcf	3,6	;RP1=0, select bank0
  5875     0462  00AE               	movwf	??_Keypad_Get_Char+1
  5876     0463  3097               	movlw	151
  5877     0464  00AD               	movwf	??_Keypad_Get_Char
  5878     0465                     u4117:
  5879     0465  0BAD               	decfsz	??_Keypad_Get_Char,f
  5880     0466  2C65               	goto	u4117
  5881     0467  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5882     0468  2C65               	goto	u4117
  5883     0469  0000               	nop
  5884     046A                     l264:	
  5885                           ;kbd4x4.c: 93:         while(PORTBbits.RB1 == 0);
  5886                           
  5887     046A  1283               	bcf	3,5	;RP0=0, select bank0
  5888     046B  1303               	bcf	3,6	;RP1=0, select bank0
  5889     046C  1C86               	btfss	6,1	;volatile
  5890     046D  2C6F               	goto	u3461
  5891     046E  2C70               	goto	u3460
  5892     046F                     u3461:
  5893     046F  2C6A               	goto	l264
  5894     0470                     u3460:
  5895     0470                     l3193:
  5896                           
  5897                           ;kbd4x4.c: 94:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5898     0470  3007               	movlw	7
  5899     0471  1283               	bcf	3,5	;RP0=0, select bank0
  5900     0472  1303               	bcf	3,6	;RP1=0, select bank0
  5901     0473  00AE               	movwf	??_Keypad_Get_Char+1
  5902     0474  307C               	movlw	124
  5903     0475  00AD               	movwf	??_Keypad_Get_Char
  5904     0476                     u4127:
  5905     0476  0BAD               	decfsz	??_Keypad_Get_Char,f
  5906     0477  2C76               	goto	u4127
  5907     0478  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5908     0479  2C76               	goto	u4127
  5909     047A  2C7B               	nop2
  5910                           
  5911                           ;kbd4x4.c: 95:         return '9';
  5912     047B  3039               	movlw	57
  5913     047C  2D2C               	goto	l226
  5914     047D                     l263:	
  5915                           ;kbd4x4.c: 96:     }
  5916                           
  5917                           
  5918                           ;kbd4x4.c: 97:     if(PORTBbits.RB0 == 0){
  5919     047D  1806               	btfsc	6,0	;volatile
  5920     047E  2C80               	goto	u3471
  5921     047F  2C81               	goto	u3470
  5922     0480                     u3471:
  5923     0480  2C9F               	goto	l267
  5924     0481                     u3470:
  5925     0481                     l3197:
  5926                           
  5927                           ;kbd4x4.c: 98:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5928     0481  3003               	movlw	3
  5929     0482  1283               	bcf	3,5	;RP0=0, select bank0
  5930     0483  1303               	bcf	3,6	;RP1=0, select bank0
  5931     0484  00AE               	movwf	??_Keypad_Get_Char+1
  5932     0485  3097               	movlw	151
  5933     0486  00AD               	movwf	??_Keypad_Get_Char
  5934     0487                     u4137:
  5935     0487  0BAD               	decfsz	??_Keypad_Get_Char,f
  5936     0488  2C87               	goto	u4137
  5937     0489  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5938     048A  2C87               	goto	u4137
  5939     048B  0000               	nop
  5940     048C                     l268:	
  5941                           ;kbd4x4.c: 99:         while(PORTBbits.RB0 == 0);
  5942                           
  5943     048C  1283               	bcf	3,5	;RP0=0, select bank0
  5944     048D  1303               	bcf	3,6	;RP1=0, select bank0
  5945     048E  1C06               	btfss	6,0	;volatile
  5946     048F  2C91               	goto	u3481
  5947     0490  2C92               	goto	u3480
  5948     0491                     u3481:
  5949     0491  2C8C               	goto	l268
  5950     0492                     u3480:
  5951     0492                     l3199:
  5952                           
  5953                           ;kbd4x4.c: 100:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5954     0492  3007               	movlw	7
  5955     0493  1283               	bcf	3,5	;RP0=0, select bank0
  5956     0494  1303               	bcf	3,6	;RP1=0, select bank0
  5957     0495  00AE               	movwf	??_Keypad_Get_Char+1
  5958     0496  307C               	movlw	124
  5959     0497  00AD               	movwf	??_Keypad_Get_Char
  5960     0498                     u4147:
  5961     0498  0BAD               	decfsz	??_Keypad_Get_Char,f
  5962     0499  2C98               	goto	u4147
  5963     049A  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  5964     049B  2C98               	goto	u4147
  5965     049C  2C9D               	nop2
  5966                           
  5967                           ;kbd4x4.c: 101:         return 'C';
  5968     049D  3043               	movlw	67
  5969     049E  2D2C               	goto	l226
  5970     049F                     l267:	
  5971                           ;kbd4x4.c: 102:     }
  5972                           
  5973                           
  5974                           ;kbd4x4.c: 104:     PORTBbits.RB4 = 1;
  5975     049F  1606               	bsf	6,4	;volatile
  5976                           
  5977                           ;kbd4x4.c: 105:     PORTBbits.RB5 = 1;
  5978     04A0  1686               	bsf	6,5	;volatile
  5979                           
  5980                           ;kbd4x4.c: 106:     PORTBbits.RB6 = 1;
  5981     04A1  1706               	bsf	6,6	;volatile
  5982                           
  5983                           ;kbd4x4.c: 107:     PORTBbits.RB7 = 0;
  5984     04A2  1386               	bcf	6,7	;volatile
  5985                           
  5986                           ;kbd4x4.c: 108:     if(PORTBbits.RB3 == 0){
  5987     04A3  1986               	btfsc	6,3	;volatile
  5988     04A4  2CA6               	goto	u3491
  5989     04A5  2CA7               	goto	u3490
  5990     04A6                     u3491:
  5991     04A6  2CC5               	goto	l271
  5992     04A7                     u3490:
  5993     04A7                     l3203:
  5994                           
  5995                           ;kbd4x4.c: 109:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5996     04A7  3003               	movlw	3
  5997     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  5998     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  5999     04AA  00AE               	movwf	??_Keypad_Get_Char+1
  6000     04AB  3097               	movlw	151
  6001     04AC  00AD               	movwf	??_Keypad_Get_Char
  6002     04AD                     u4157:
  6003     04AD  0BAD               	decfsz	??_Keypad_Get_Char,f
  6004     04AE  2CAD               	goto	u4157
  6005     04AF  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  6006     04B0  2CAD               	goto	u4157
  6007     04B1  0000               	nop
  6008     04B2                     l272:	
  6009                           ;kbd4x4.c: 110:         while(PORTBbits.RB3 == 0);
  6010                           
  6011     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  6012     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  6013     04B4  1D86               	btfss	6,3	;volatile
  6014     04B5  2CB7               	goto	u3501
  6015     04B6  2CB8               	goto	u3500
  6016     04B7                     u3501:
  6017     04B7  2CB2               	goto	l272
  6018     04B8                     u3500:
  6019     04B8                     l3205:
  6020                           
  6021                           ;kbd4x4.c: 111:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6022     04B8  3007               	movlw	7
  6023     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  6024     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  6025     04BB  00AE               	movwf	??_Keypad_Get_Char+1
  6026     04BC  307C               	movlw	124
  6027     04BD  00AD               	movwf	??_Keypad_Get_Char
  6028     04BE                     u4167:
  6029     04BE  0BAD               	decfsz	??_Keypad_Get_Char,f
  6030     04BF  2CBE               	goto	u4167
  6031     04C0  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  6032     04C1  2CBE               	goto	u4167
  6033     04C2  2CC3               	nop2
  6034                           
  6035                           ;kbd4x4.c: 112:         return '*';
  6036     04C3  302A               	movlw	42
  6037     04C4  2D2C               	goto	l226
  6038     04C5                     l271:	
  6039                           ;kbd4x4.c: 113:     }
  6040                           
  6041                           
  6042                           ;kbd4x4.c: 114:     if(PORTBbits.RB2 == 0){
  6043     04C5  1906               	btfsc	6,2	;volatile
  6044     04C6  2CC8               	goto	u3511
  6045     04C7  2CC9               	goto	u3510
  6046     04C8                     u3511:
  6047     04C8  2CE7               	goto	l275
  6048     04C9                     u3510:
  6049     04C9                     l3209:
  6050                           
  6051                           ;kbd4x4.c: 115:         _delay((unsigned long)((2)*(4000000/4000.0)));
  6052     04C9  3003               	movlw	3
  6053     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  6054     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  6055     04CC  00AE               	movwf	??_Keypad_Get_Char+1
  6056     04CD  3097               	movlw	151
  6057     04CE  00AD               	movwf	??_Keypad_Get_Char
  6058     04CF                     u4177:
  6059     04CF  0BAD               	decfsz	??_Keypad_Get_Char,f
  6060     04D0  2CCF               	goto	u4177
  6061     04D1  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  6062     04D2  2CCF               	goto	u4177
  6063     04D3  0000               	nop
  6064     04D4                     l276:	
  6065                           ;kbd4x4.c: 116:         while(PORTBbits.RB2 == 0);
  6066                           
  6067     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  6068     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  6069     04D6  1D06               	btfss	6,2	;volatile
  6070     04D7  2CD9               	goto	u3521
  6071     04D8  2CDA               	goto	u3520
  6072     04D9                     u3521:
  6073     04D9  2CD4               	goto	l276
  6074     04DA                     u3520:
  6075     04DA                     l3211:
  6076                           
  6077                           ;kbd4x4.c: 117:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6078     04DA  3007               	movlw	7
  6079     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  6080     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  6081     04DD  00AE               	movwf	??_Keypad_Get_Char+1
  6082     04DE  307C               	movlw	124
  6083     04DF  00AD               	movwf	??_Keypad_Get_Char
  6084     04E0                     u4187:
  6085     04E0  0BAD               	decfsz	??_Keypad_Get_Char,f
  6086     04E1  2CE0               	goto	u4187
  6087     04E2  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  6088     04E3  2CE0               	goto	u4187
  6089     04E4  2CE5               	nop2
  6090                           
  6091                           ;kbd4x4.c: 118:         return '0';
  6092     04E5  3030               	movlw	48
  6093     04E6  2D2C               	goto	l226
  6094     04E7                     l275:	
  6095                           ;kbd4x4.c: 119:     }
  6096                           
  6097                           
  6098                           ;kbd4x4.c: 120:     if(PORTBbits.RB1 == 0){
  6099     04E7  1886               	btfsc	6,1	;volatile
  6100     04E8  2CEA               	goto	u3531
  6101     04E9  2CEB               	goto	u3530
  6102     04EA                     u3531:
  6103     04EA  2D09               	goto	l279
  6104     04EB                     u3530:
  6105     04EB                     l3215:
  6106                           
  6107                           ;kbd4x4.c: 121:         _delay((unsigned long)((2)*(4000000/4000.0)));
  6108     04EB  3003               	movlw	3
  6109     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  6110     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  6111     04EE  00AE               	movwf	??_Keypad_Get_Char+1
  6112     04EF  3097               	movlw	151
  6113     04F0  00AD               	movwf	??_Keypad_Get_Char
  6114     04F1                     u4197:
  6115     04F1  0BAD               	decfsz	??_Keypad_Get_Char,f
  6116     04F2  2CF1               	goto	u4197
  6117     04F3  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  6118     04F4  2CF1               	goto	u4197
  6119     04F5  0000               	nop
  6120     04F6                     l280:	
  6121                           ;kbd4x4.c: 122:         while(PORTBbits.RB1 == 0);
  6122                           
  6123     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  6124     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  6125     04F8  1C86               	btfss	6,1	;volatile
  6126     04F9  2CFB               	goto	u3541
  6127     04FA  2CFC               	goto	u3540
  6128     04FB                     u3541:
  6129     04FB  2CF6               	goto	l280
  6130     04FC                     u3540:
  6131     04FC                     l3217:
  6132                           
  6133                           ;kbd4x4.c: 123:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6134     04FC  3007               	movlw	7
  6135     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  6136     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  6137     04FF  00AE               	movwf	??_Keypad_Get_Char+1
  6138     0500  307C               	movlw	124
  6139     0501  00AD               	movwf	??_Keypad_Get_Char
  6140     0502                     u4207:
  6141     0502  0BAD               	decfsz	??_Keypad_Get_Char,f
  6142     0503  2D02               	goto	u4207
  6143     0504  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  6144     0505  2D02               	goto	u4207
  6145     0506  2D07               	nop2
  6146                           
  6147                           ;kbd4x4.c: 124:         return '#';
  6148     0507  3023               	movlw	35
  6149     0508  2D2C               	goto	l226
  6150     0509                     l279:	
  6151                           ;kbd4x4.c: 125:     }
  6152                           
  6153                           
  6154                           ;kbd4x4.c: 126:     if(PORTBbits.RB0 == 0){
  6155     0509  1806               	btfsc	6,0	;volatile
  6156     050A  2D0C               	goto	u3551
  6157     050B  2D0D               	goto	u3550
  6158     050C                     u3551:
  6159     050C  2D2B               	goto	l3227
  6160     050D                     u3550:
  6161     050D                     l3221:
  6162                           
  6163                           ;kbd4x4.c: 127:         _delay((unsigned long)((2)*(4000000/4000.0)));
  6164     050D  3003               	movlw	3
  6165     050E  1283               	bcf	3,5	;RP0=0, select bank0
  6166     050F  1303               	bcf	3,6	;RP1=0, select bank0
  6167     0510  00AE               	movwf	??_Keypad_Get_Char+1
  6168     0511  3097               	movlw	151
  6169     0512  00AD               	movwf	??_Keypad_Get_Char
  6170     0513                     u4217:
  6171     0513  0BAD               	decfsz	??_Keypad_Get_Char,f
  6172     0514  2D13               	goto	u4217
  6173     0515  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  6174     0516  2D13               	goto	u4217
  6175     0517  0000               	nop
  6176     0518                     l284:	
  6177                           ;kbd4x4.c: 128:         while(PORTBbits.RB0 == 0);
  6178                           
  6179     0518  1283               	bcf	3,5	;RP0=0, select bank0
  6180     0519  1303               	bcf	3,6	;RP1=0, select bank0
  6181     051A  1C06               	btfss	6,0	;volatile
  6182     051B  2D1D               	goto	u3561
  6183     051C  2D1E               	goto	u3560
  6184     051D                     u3561:
  6185     051D  2D18               	goto	l284
  6186     051E                     u3560:
  6187     051E                     l3223:
  6188                           
  6189                           ;kbd4x4.c: 129:         _delay((unsigned long)((5)*(4000000/4000.0)));
  6190     051E  3007               	movlw	7
  6191     051F  1283               	bcf	3,5	;RP0=0, select bank0
  6192     0520  1303               	bcf	3,6	;RP1=0, select bank0
  6193     0521  00AE               	movwf	??_Keypad_Get_Char+1
  6194     0522  307C               	movlw	124
  6195     0523  00AD               	movwf	??_Keypad_Get_Char
  6196     0524                     u4227:
  6197     0524  0BAD               	decfsz	??_Keypad_Get_Char,f
  6198     0525  2D24               	goto	u4227
  6199     0526  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  6200     0527  2D24               	goto	u4227
  6201     0528  2D29               	nop2
  6202                           
  6203                           ;kbd4x4.c: 130:         return 'D';
  6204     0529  3044               	movlw	68
  6205     052A  2D2C               	goto	l226
  6206     052B                     l3227:
  6207                           
  6208                           ;kbd4x4.c: 132:     return 0;
  6209     052B  3000               	movlw	0
  6210     052C                     l226:
  6211     052C  0008               	return
  6212     052D                     __end_of_Keypad_Get_Char:
  6213                           
  6214                           	psect	text28
  6215     0C1A                     __ptext28:	
  6216 ;; *************** function _ADC_Init *****************
  6217 ;; Defined at:
  6218 ;;		line 52 in file "Practica-3-main.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;		None
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMMON   BANK0   BANK1
  6232 ;;      Params:         0       0       0
  6233 ;;      Locals:         0       0       0
  6234 ;;      Temps:          0       2       0
  6235 ;;      Totals:         0       2       0
  6236 ;;Total ram usage:        2 bytes
  6237 ;; Hardware stack levels used: 1
  6238 ;; Hardware stack levels required when called: 4
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_main
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246     0C1A                     _ADC_Init:	
  6247                           ;psect for function _ADC_Init
  6248                           
  6249     0C1A                     l2917:	
  6250                           ;incstack = 0
  6251                           ; Regs used in _ADC_Init: [wreg+status,2]
  6252                           
  6253     0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  6254     0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  6255     0C1C  1505               	bsf	5,2	;volatile
  6256     0C1D  1905               	btfsc	5,2	;volatile
  6257     0C1E  2C20               	goto	u3131
  6258     0C1F  2C24               	goto	u3130
  6259     0C20                     u3131:
  6260     0C20  1683               	bsf	3,5	;RP0=1, select bank1
  6261     0C21  1303               	bcf	3,6	;RP1=0, select bank1
  6262     0C22  1485               	bsf	5,1	;volatile
  6263     0C23  2C27               	goto	u3144
  6264     0C24                     u3130:
  6265     0C24  1683               	bsf	3,5	;RP0=1, select bank1
  6266     0C25  1303               	bcf	3,6	;RP1=0, select bank1
  6267     0C26  1085               	bcf	5,1	;volatile
  6268     0C27                     u3144:
  6269     0C27  1885               	btfsc	5,1	;volatile
  6270     0C28  2C2A               	goto	u3141
  6271     0C29  2C2E               	goto	u3140
  6272     0C2A                     u3141:
  6273     0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  6274     0C2B  1303               	bcf	3,6	;RP1=0, select bank1
  6275     0C2C  1405               	bsf	5,0	;volatile
  6276     0C2D  2C31               	goto	u3154
  6277     0C2E                     u3140:
  6278     0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  6279     0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  6280     0C30  1005               	bcf	5,0	;volatile
  6281     0C31                     u3154:
  6282     0C31  308E               	movlw	142
  6283     0C32  009F               	movwf	31	;volatile
  6284     0C33                     l2919:
  6285     0C33  1283               	bcf	3,5	;RP0=0, select bank0
  6286     0C34  1303               	bcf	3,6	;RP1=0, select bank0
  6287     0C35  081F               	movf	31,w	;volatile
  6288     0C36  39C5               	andlw	197
  6289     0C37  009F               	movwf	31	;volatile
  6290     0C38                     l2921:
  6291     0C38  141F               	bsf	31,0	;volatile
  6292     0C39                     l2923:
  6293     0C39  3003               	movlw	3
  6294     0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  6295     0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  6296     0C3C  00AE               	movwf	??_ADC_Init+1
  6297     0C3D  3097               	movlw	151
  6298     0C3E  00AD               	movwf	??_ADC_Init
  6299     0C3F                     u4237:
  6300     0C3F  0BAD               	decfsz	??_ADC_Init,f
  6301     0C40  2C3F               	goto	u4237
  6302     0C41  0BAE               	decfsz	??_ADC_Init+1,f
  6303     0C42  2C3F               	goto	u4237
  6304     0C43  0000               	nop
  6305     0C44                     l125:
  6306     0C44  0008               	return
  6307     0C45                     __end_of_ADC_Init:
  6308                           
  6309                           	psect	text29
  6310     0DDD                     __ptext29:	
  6311 ;; *************** function _ISR *****************
  6312 ;; Defined at:
  6313 ;;		line 38 in file "Practica-3-main.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;		None
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  d               1   12[BANK0 ] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0, pclath, cstack
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1
  6327 ;;      Params:         0       0       0
  6328 ;;      Locals:         0       1       0
  6329 ;;      Temps:          0       2       0
  6330 ;;      Totals:         0       3       0
  6331 ;;Total ram usage:        3 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; Hardware stack levels required when called: 3
  6334 ;; This function calls:
  6335 ;;		i1_Lcd_Set_Cursor
  6336 ;;		i1_Lcd_Write_Char
  6337 ;; This function is called by:
  6338 ;;		Interrupt level 1
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342     0DDD                     _ISR:	
  6343                           ;psect for function _ISR
  6344                           
  6345     0DDD                     i1l2485:
  6346                           
  6347                           ;Practica-3-main.c: 40:     static char rRow=0, rCol=0, rChr=0, st=0;;Practica-3-main.c:
      +                           41:     if (RCIF) {
  6348     0DDD  1E8C               	btfss	12,5	;volatile
  6349     0DDE  2DE0               	goto	u245_21
  6350     0DDF  2DE1               	goto	u245_20
  6351     0DE0                     u245_21:
  6352     0DE0  2E0E               	goto	i1l2511
  6353     0DE1                     u245_20:
  6354     0DE1                     i1l2487:
  6355                           
  6356                           ;Practica-3-main.c: 42:         char d = RCREG;
  6357     0DE1  081A               	movf	26,w	;volatile
  6358     0DE2  00AC               	movwf	ISR@d
  6359     0DE3                     i1l2489:
  6360                           
  6361                           ;Practica-3-main.c: 43:         if (st==0){ rRow=d; st=1; }
  6362     0DE3  085B               	movf	ISR@st,w
  6363     0DE4  1D03               	btfss	3,2
  6364     0DE5  2DE7               	goto	u246_21
  6365     0DE6  2DE8               	goto	u246_20
  6366     0DE7                     u246_21:
  6367     0DE7  2DED               	goto	i1l2495
  6368     0DE8                     u246_20:
  6369     0DE8                     i1l2491:
  6370     0DE8  082C               	movf	ISR@d,w
  6371     0DE9  00DE               	movwf	ISR@rRow
  6372     0DEA                     i1l2493:
  6373     0DEA  3001               	movlw	1
  6374     0DEB  00DB               	movwf	ISR@st
  6375     0DEC  2E0E               	goto	i1l2511
  6376     0DED                     i1l2495:
  6377     0DED  035B               	decf	ISR@st,w
  6378     0DEE  1D03               	btfss	3,2
  6379     0DEF  2DF1               	goto	u247_21
  6380     0DF0  2DF2               	goto	u247_20
  6381     0DF1                     u247_21:
  6382     0DF1  2DF7               	goto	i1l2501
  6383     0DF2                     u247_20:
  6384     0DF2                     i1l2497:
  6385     0DF2  082C               	movf	ISR@d,w
  6386     0DF3  00DD               	movwf	ISR@rCol
  6387     0DF4                     i1l2499:
  6388     0DF4  3002               	movlw	2
  6389     0DF5  00DB               	movwf	ISR@st
  6390     0DF6  2E0E               	goto	i1l2511
  6391     0DF7                     i1l2501:
  6392     0DF7  082C               	movf	ISR@d,w
  6393     0DF8  00DC               	movwf	ISR@rChr
  6394     0DF9                     i1l2503:
  6395     0DF9  01DB               	clrf	ISR@st
  6396     0DFA                     i1l2505:
  6397     0DFA  085D               	movf	ISR@rCol,w
  6398     0DFB  00A4               	movwf	i1Lcd_Set_Cursor@b
  6399     0DFC  085E               	movf	ISR@rRow,w
  6400     0DFD  118A  271B  158A   	fcall	i1_Lcd_Set_Cursor
  6401     0E00                     i1l2507:
  6402     0E00  1283               	bcf	3,5	;RP0=0, select bank0
  6403     0E01  1303               	bcf	3,6	;RP1=0, select bank0
  6404     0E02  085C               	movf	ISR@rChr,w
  6405     0E03  158A  24A9  158A   	fcall	i1_Lcd_Write_Char
  6406     0E06                     i1l2509:
  6407     0E06  1283               	bcf	3,5	;RP0=0, select bank0
  6408     0E07  1303               	bcf	3,6	;RP1=0, select bank0
  6409     0E08  0841               	movf	_columna,w
  6410     0E09  00A4               	movwf	i1Lcd_Set_Cursor@b
  6411     0E0A  0843               	movf	_renglon,w
  6412     0E0B  118A  271B  158A   	fcall	i1_Lcd_Set_Cursor
  6413     0E0E                     i1l2511:
  6414                           
  6415                           ;Practica-3-main.c: 47:     if (T0IF) { pulseCnt += 256; T0IF = 0; }
  6416     0E0E  1D0B               	btfss	11,2	;volatile
  6417     0E0F  2E11               	goto	u248_21
  6418     0E10  2E12               	goto	u248_20
  6419     0E11                     u248_21:
  6420     0E11  2E1B               	goto	i1l119
  6421     0E12                     u248_20:
  6422     0E12                     i1l2513:
  6423     0E12  3000               	movlw	0
  6424     0E13  1283               	bcf	3,5	;RP0=0, select bank0
  6425     0E14  1303               	bcf	3,6	;RP1=0, select bank0
  6426     0E15  07D9               	addwf	_pulseCnt,f	;volatile
  6427     0E16  1803               	skipnc
  6428     0E17  0ADA               	incf	_pulseCnt+1,f	;volatile
  6429     0E18  3001               	movlw	1
  6430     0E19  07DA               	addwf	_pulseCnt+1,f	;volatile
  6431     0E1A                     i1l2515:
  6432     0E1A  110B               	bcf	11,2	;volatile
  6433     0E1B                     i1l119:
  6434     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  6435     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  6436     0E1D  082B               	movf	??_ISR+1,w
  6437     0E1E  008A               	movwf	10
  6438     0E1F  0E2A               	swapf	??_ISR,w
  6439     0E20  0083               	movwf	3
  6440     0E21  0EFE               	swapf	btemp,f
  6441     0E22  0E7E               	swapf	btemp,w
  6442     0E23  0009               	retfie
  6443     0E24                     __end_of_ISR:
  6444                           
  6445                           	psect	intentry
  6446     0004                     __pintentry:	
  6447                           ;incstack = 0
  6448 ;; hardware stack exceeded
  6449                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  6450                           
  6451     0004                     interrupt_function:
  6452     007E                     saved_w         set	btemp
  6453     0004  00FE               	movwf	btemp
  6454     0005  0E03               	swapf	3,w
  6455     0006  1283               	bcf	3,5	;RP0=0, select bank0
  6456     0007  1303               	bcf	3,6	;RP1=0, select bank0
  6457     0008  00AA               	movwf	??_ISR
  6458     0009  080A               	movf	10,w
  6459     000A  00AB               	movwf	??_ISR+1
  6460     000B  158A  2DDD         	ljmp	_ISR
  6461                           
  6462                           	psect	text30
  6463     0CA9                     __ptext30:	
  6464 ;; *************** function i1_Lcd_Write_Char *****************
  6465 ;; Defined at:
  6466 ;;		line 137 in file "lcd.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  a               1    wreg     unsigned char 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  a               1    4[BANK0 ] unsigned char 
  6471 ;;  y               1    3[BANK0 ] unsigned char 
  6472 ;;  temp            1    2[BANK0 ] unsigned char 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1    wreg      void 
  6475 ;; Registers used:
  6476 ;;		wreg, status,2, status,0, pclath, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMMON   BANK0   BANK1
  6482 ;;      Params:         0       0       0
  6483 ;;      Locals:         0       3       0
  6484 ;;      Temps:          0       1       0
  6485 ;;      Totals:         0       4       0
  6486 ;;Total ram usage:        4 bytes
  6487 ;; Hardware stack levels used: 1
  6488 ;; Hardware stack levels required when called: 1
  6489 ;; This function calls:
  6490 ;;		i1_Lcd_Port
  6491 ;; This function is called by:
  6492 ;;		_ISR
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496     0CA9                     i1_Lcd_Write_Char:	
  6497                           ;psect for function i1_Lcd_Write_Char
  6498                           
  6499                           
  6500                           ;incstack = 0
  6501                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6502                           ;i1Lcd_Write_Char@a stored from wreg
  6503     0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  6504     0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  6505     0CAB  00A4               	movwf	i1Lcd_Write_Char@a
  6506     0CAC                     i1l2455:
  6507                           
  6508                           ;lcd.c: 137: void Lcd_Write_Char(char a);lcd.c: 138: {;lcd.c: 139:     char temp,y;;lcd.
      +                          c: 140:     temp = a & 0x0F;
  6509     0CAC  0824               	movf	i1Lcd_Write_Char@a,w
  6510     0CAD  00A2               	movwf	i1Lcd_Write_Char@temp
  6511     0CAE                     i1l2457:
  6512     0CAE  300F               	movlw	15
  6513     0CAF  05A2               	andwf	i1Lcd_Write_Char@temp,f
  6514     0CB0                     i1l2459:
  6515                           
  6516                           ;lcd.c: 141:     y = (a & 0xF0) >> 4;
  6517     0CB0  0824               	movf	i1Lcd_Write_Char@a,w
  6518     0CB1  00A1               	movwf	??i1_Lcd_Write_Char
  6519     0CB2  3004               	movlw	4
  6520     0CB3                     u244_25:
  6521     0CB3  1003               	clrc
  6522     0CB4  0CA1               	rrf	??i1_Lcd_Write_Char,f
  6523     0CB5  3EFF               	addlw	-1
  6524     0CB6  1D03               	skipz
  6525     0CB7  2CB3               	goto	u244_25
  6526     0CB8  0821               	movf	??i1_Lcd_Write_Char,w
  6527     0CB9  00A3               	movwf	i1Lcd_Write_Char@y
  6528     0CBA                     i1l2461:
  6529     0CBA  300F               	movlw	15
  6530     0CBB  05A3               	andwf	i1Lcd_Write_Char@y,f
  6531     0CBC                     i1l2463:
  6532                           
  6533                           ;lcd.c: 143:     PORTCbits.RC3 = 1;
  6534     0CBC  1587               	bsf	7,3	;volatile
  6535     0CBD                     i1l2465:
  6536                           
  6537                           ;lcd.c: 146:     Lcd_Port(y);
  6538     0CBD  0823               	movf	i1Lcd_Write_Char@y,w
  6539     0CBE  158A  2391  158A   	fcall	i1_Lcd_Port
  6540     0CC1                     i1l2467:
  6541                           
  6542                           ;lcd.c: 147:     PORTCbits.RC5 = 1;
  6543     0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  6544     0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  6545     0CC3  1687               	bsf	7,5	;volatile
  6546     0CC4                     i1l2469:
  6547                           
  6548                           ;lcd.c: 148:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  6549     0CC4  0000               	nop
  6550     0CC5                     i1l2471:
  6551                           
  6552                           ;lcd.c: 149:     PORTCbits.RC5 = 0;
  6553     0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  6554     0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  6555     0CC7  1287               	bcf	7,5	;volatile
  6556     0CC8                     i1l2473:
  6557                           
  6558                           ;lcd.c: 150:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  6559     0CC8  3010               	movlw	16
  6560     0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  6561     0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  6562     0CCB  00A1               	movwf	??i1_Lcd_Write_Char
  6563     0CCC                     u424_27:
  6564     0CCC  0BA1               	decfsz	??i1_Lcd_Write_Char,f
  6565     0CCD  2CCC               	goto	u424_27
  6566     0CCE                     i1l2475:
  6567                           
  6568                           ;lcd.c: 153:     Lcd_Port(temp);
  6569     0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  6570     0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  6571     0CD0  0822               	movf	i1Lcd_Write_Char@temp,w
  6572     0CD1  158A  2391  158A   	fcall	i1_Lcd_Port
  6573     0CD4                     i1l2477:
  6574                           
  6575                           ;lcd.c: 154:     PORTCbits.RC5 = 1;
  6576     0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  6577     0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  6578     0CD6  1687               	bsf	7,5	;volatile
  6579     0CD7                     i1l2479:
  6580                           
  6581                           ;lcd.c: 155:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  6582     0CD7  0000               	nop
  6583     0CD8                     i1l2481:
  6584                           
  6585                           ;lcd.c: 156:     PORTCbits.RC5 = 0;
  6586     0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  6587     0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  6588     0CDA  1287               	bcf	7,5	;volatile
  6589     0CDB                     i1l2483:
  6590                           
  6591                           ;lcd.c: 157:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  6592     0CDB  3010               	movlw	16
  6593     0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  6594     0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  6595     0CDE  00A1               	movwf	??i1_Lcd_Write_Char
  6596     0CDF                     u425_27:
  6597     0CDF  0BA1               	decfsz	??i1_Lcd_Write_Char,f
  6598     0CE0  2CDF               	goto	u425_27
  6599     0CE1                     i1l337:
  6600     0CE1  0008               	return
  6601     0CE2                     __end_ofi1_Lcd_Write_Char:
  6602                           
  6603                           	psect	text31
  6604     071B                     __ptext31:	
  6605 ;; *************** function i1_Lcd_Set_Cursor *****************
  6606 ;; Defined at:
  6607 ;;		line 28 in file "lcd.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  a               1    wreg     unsigned char 
  6610 ;;  b               1    4[BANK0 ] unsigned char 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  a               1    6[BANK0 ] unsigned char 
  6613 ;;  temp            1    9[BANK0 ] unsigned char 
  6614 ;;  y               1    8[BANK0 ] unsigned char 
  6615 ;;  z               1    7[BANK0 ] unsigned char 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      void 
  6618 ;; Registers used:
  6619 ;;		wreg, status,2, status,0, pclath, cstack
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMMON   BANK0   BANK1
  6625 ;;      Params:         0       1       0
  6626 ;;      Locals:         0       4       0
  6627 ;;      Temps:          0       1       0
  6628 ;;      Totals:         0       6       0
  6629 ;;Total ram usage:        6 bytes
  6630 ;; Hardware stack levels used: 1
  6631 ;; Hardware stack levels required when called: 2
  6632 ;; This function calls:
  6633 ;;		i1_Lcd_Cmd
  6634 ;; This function is called by:
  6635 ;;		_ISR
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639     071B                     i1_Lcd_Set_Cursor:	
  6640                           ;psect for function i1_Lcd_Set_Cursor
  6641                           
  6642                           
  6643                           ;incstack = 0
  6644 ;; hardware stack exceeded
  6645                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6646                           ;i1Lcd_Set_Cursor@a stored from wreg
  6647     071B  1283               	bcf	3,5	;RP0=0, select bank0
  6648     071C  1303               	bcf	3,6	;RP1=0, select bank0
  6649     071D  00A6               	movwf	i1Lcd_Set_Cursor@a
  6650     071E                     i1l2407:
  6651                           
  6652                           ;lcd.c: 28: void Lcd_Set_Cursor(char a, char b);lcd.c: 29: {;lcd.c: 30:     char temp,z,
      +                          y;;lcd.c: 31:     if(a == 1)
  6653     071E  0326               	decf	i1Lcd_Set_Cursor@a,w
  6654     071F  1D03               	btfss	3,2
  6655     0720  2F22               	goto	u236_21
  6656     0721  2F23               	goto	u236_20
  6657     0722                     u236_21:
  6658     0722  2F3F               	goto	i1l2419
  6659     0723                     u236_20:
  6660     0723                     i1l2409:
  6661                           
  6662                           ;lcd.c: 32:     {;lcd.c: 33:         temp = 0x80 + b - 1;
  6663     0723  0824               	movf	i1Lcd_Set_Cursor@b,w
  6664     0724  3E7F               	addlw	127
  6665     0725  00A9               	movwf	i1Lcd_Set_Cursor@temp
  6666                           
  6667                           ;lcd.c: 34:         z = temp>>4;
  6668     0726  0829               	movf	i1Lcd_Set_Cursor@temp,w
  6669     0727  00A5               	movwf	??i1_Lcd_Set_Cursor
  6670     0728  3004               	movlw	4
  6671     0729                     u237_25:
  6672     0729  1003               	clrc
  6673     072A  0CA5               	rrf	??i1_Lcd_Set_Cursor,f
  6674     072B  3EFF               	addlw	-1
  6675     072C  1D03               	skipz
  6676     072D  2F29               	goto	u237_25
  6677     072E  0825               	movf	??i1_Lcd_Set_Cursor,w
  6678     072F  00A7               	movwf	i1Lcd_Set_Cursor@z
  6679     0730                     i1l2411:
  6680                           
  6681                           ;lcd.c: 35:         y = temp & 0x0F;
  6682     0730  0829               	movf	i1Lcd_Set_Cursor@temp,w
  6683     0731  00A8               	movwf	i1Lcd_Set_Cursor@y
  6684     0732                     i1l2413:
  6685     0732  300F               	movlw	15
  6686     0733  05A8               	andwf	i1Lcd_Set_Cursor@y,f
  6687     0734                     i1l2415:
  6688                           
  6689                           ;lcd.c: 36:         Lcd_Cmd(z);
  6690     0734  0827               	movf	i1Lcd_Set_Cursor@z,w
  6691     0735  158A  235B  118A   	fcall	i1_Lcd_Cmd
  6692     0738                     i1l2417:
  6693                           
  6694                           ;lcd.c: 37:         Lcd_Cmd(y);
  6695     0738  1283               	bcf	3,5	;RP0=0, select bank0
  6696     0739  1303               	bcf	3,6	;RP1=0, select bank0
  6697     073A  0828               	movf	i1Lcd_Set_Cursor@y,w
  6698     073B  158A  235B  118A   	fcall	i1_Lcd_Cmd
  6699                           
  6700                           ;lcd.c: 38:     }
  6701     073E  2FA5               	goto	i1l331
  6702     073F                     i1l2419:
  6703     073F  3002               	movlw	2
  6704     0740  0626               	xorwf	i1Lcd_Set_Cursor@a,w
  6705     0741  1D03               	btfss	3,2
  6706     0742  2F44               	goto	u238_21
  6707     0743  2F45               	goto	u238_20
  6708     0744                     u238_21:
  6709     0744  2F61               	goto	i1l2431
  6710     0745                     u238_20:
  6711     0745                     i1l2421:
  6712                           
  6713                           ;lcd.c: 40:     {;lcd.c: 41:         temp = 0xC0 + b - 1;
  6714     0745  0824               	movf	i1Lcd_Set_Cursor@b,w
  6715     0746  3EBF               	addlw	191
  6716     0747  00A9               	movwf	i1Lcd_Set_Cursor@temp
  6717                           
  6718                           ;lcd.c: 42:         z = temp>>4;
  6719     0748  0829               	movf	i1Lcd_Set_Cursor@temp,w
  6720     0749  00A5               	movwf	??i1_Lcd_Set_Cursor
  6721     074A  3004               	movlw	4
  6722     074B                     u239_25:
  6723     074B  1003               	clrc
  6724     074C  0CA5               	rrf	??i1_Lcd_Set_Cursor,f
  6725     074D  3EFF               	addlw	-1
  6726     074E  1D03               	skipz
  6727     074F  2F4B               	goto	u239_25
  6728     0750  0825               	movf	??i1_Lcd_Set_Cursor,w
  6729     0751  00A7               	movwf	i1Lcd_Set_Cursor@z
  6730     0752                     i1l2423:
  6731                           
  6732                           ;lcd.c: 43:         y = temp & 0x0F;
  6733     0752  0829               	movf	i1Lcd_Set_Cursor@temp,w
  6734     0753  00A8               	movwf	i1Lcd_Set_Cursor@y
  6735     0754                     i1l2425:
  6736     0754  300F               	movlw	15
  6737     0755  05A8               	andwf	i1Lcd_Set_Cursor@y,f
  6738     0756                     i1l2427:
  6739                           
  6740                           ;lcd.c: 44:         Lcd_Cmd(z);
  6741     0756  0827               	movf	i1Lcd_Set_Cursor@z,w
  6742     0757  158A  235B  118A   	fcall	i1_Lcd_Cmd
  6743     075A                     i1l2429:
  6744                           
  6745                           ;lcd.c: 45:         Lcd_Cmd(y);
  6746     075A  1283               	bcf	3,5	;RP0=0, select bank0
  6747     075B  1303               	bcf	3,6	;RP1=0, select bank0
  6748     075C  0828               	movf	i1Lcd_Set_Cursor@y,w
  6749     075D  158A  235B  118A   	fcall	i1_Lcd_Cmd
  6750                           
  6751                           ;lcd.c: 46:     }
  6752     0760  2FA5               	goto	i1l331
  6753     0761                     i1l2431:
  6754     0761  3003               	movlw	3
  6755     0762  0626               	xorwf	i1Lcd_Set_Cursor@a,w
  6756     0763  1D03               	btfss	3,2
  6757     0764  2F66               	goto	u240_21
  6758     0765  2F67               	goto	u240_20
  6759     0766                     u240_21:
  6760     0766  2F83               	goto	i1l2443
  6761     0767                     u240_20:
  6762     0767                     i1l2433:
  6763                           
  6764                           ;lcd.c: 48:     {;lcd.c: 49:         temp = 0x94 + b - 1;
  6765     0767  0824               	movf	i1Lcd_Set_Cursor@b,w
  6766     0768  3E93               	addlw	147
  6767     0769  00A9               	movwf	i1Lcd_Set_Cursor@temp
  6768                           
  6769                           ;lcd.c: 50:         z = temp>>4;
  6770     076A  0829               	movf	i1Lcd_Set_Cursor@temp,w
  6771     076B  00A5               	movwf	??i1_Lcd_Set_Cursor
  6772     076C  3004               	movlw	4
  6773     076D                     u241_25:
  6774     076D  1003               	clrc
  6775     076E  0CA5               	rrf	??i1_Lcd_Set_Cursor,f
  6776     076F  3EFF               	addlw	-1
  6777     0770  1D03               	skipz
  6778     0771  2F6D               	goto	u241_25
  6779     0772  0825               	movf	??i1_Lcd_Set_Cursor,w
  6780     0773  00A7               	movwf	i1Lcd_Set_Cursor@z
  6781     0774                     i1l2435:
  6782                           
  6783                           ;lcd.c: 51:         y = temp & 0x0F;
  6784     0774  0829               	movf	i1Lcd_Set_Cursor@temp,w
  6785     0775  00A8               	movwf	i1Lcd_Set_Cursor@y
  6786     0776                     i1l2437:
  6787     0776  300F               	movlw	15
  6788     0777  05A8               	andwf	i1Lcd_Set_Cursor@y,f
  6789     0778                     i1l2439:
  6790                           
  6791                           ;lcd.c: 52:         Lcd_Cmd(z);
  6792     0778  0827               	movf	i1Lcd_Set_Cursor@z,w
  6793     0779  158A  235B  118A   	fcall	i1_Lcd_Cmd
  6794     077C                     i1l2441:
  6795                           
  6796                           ;lcd.c: 53:         Lcd_Cmd(y);
  6797     077C  1283               	bcf	3,5	;RP0=0, select bank0
  6798     077D  1303               	bcf	3,6	;RP1=0, select bank0
  6799     077E  0828               	movf	i1Lcd_Set_Cursor@y,w
  6800     077F  158A  235B  118A   	fcall	i1_Lcd_Cmd
  6801                           
  6802                           ;lcd.c: 54:     }
  6803     0782  2FA5               	goto	i1l331
  6804     0783                     i1l2443:
  6805     0783  3004               	movlw	4
  6806     0784  0626               	xorwf	i1Lcd_Set_Cursor@a,w
  6807     0785  1D03               	btfss	3,2
  6808     0786  2F88               	goto	u242_21
  6809     0787  2F89               	goto	u242_20
  6810     0788                     u242_21:
  6811     0788  2FA5               	goto	i1l327
  6812     0789                     u242_20:
  6813     0789                     i1l2445:
  6814                           
  6815                           ;lcd.c: 56:     {;lcd.c: 57:         temp = 0xD4 + b - 1;
  6816     0789  0824               	movf	i1Lcd_Set_Cursor@b,w
  6817     078A  3ED3               	addlw	211
  6818     078B  00A9               	movwf	i1Lcd_Set_Cursor@temp
  6819                           
  6820                           ;lcd.c: 58:         z = temp>>4;
  6821     078C  0829               	movf	i1Lcd_Set_Cursor@temp,w
  6822     078D  00A5               	movwf	??i1_Lcd_Set_Cursor
  6823     078E  3004               	movlw	4
  6824     078F                     u243_25:
  6825     078F  1003               	clrc
  6826     0790  0CA5               	rrf	??i1_Lcd_Set_Cursor,f
  6827     0791  3EFF               	addlw	-1
  6828     0792  1D03               	skipz
  6829     0793  2F8F               	goto	u243_25
  6830     0794  0825               	movf	??i1_Lcd_Set_Cursor,w
  6831     0795  00A7               	movwf	i1Lcd_Set_Cursor@z
  6832     0796                     i1l2447:
  6833                           
  6834                           ;lcd.c: 59:         y = temp & 0x0F;
  6835     0796  0829               	movf	i1Lcd_Set_Cursor@temp,w
  6836     0797  00A8               	movwf	i1Lcd_Set_Cursor@y
  6837     0798                     i1l2449:
  6838     0798  300F               	movlw	15
  6839     0799  05A8               	andwf	i1Lcd_Set_Cursor@y,f
  6840     079A                     i1l2451:
  6841                           
  6842                           ;lcd.c: 60:         Lcd_Cmd(z);
  6843     079A  0827               	movf	i1Lcd_Set_Cursor@z,w
  6844     079B  158A  235B  118A   	fcall	i1_Lcd_Cmd
  6845     079E                     i1l2453:
  6846                           
  6847                           ;lcd.c: 61:         Lcd_Cmd(y);
  6848     079E  1283               	bcf	3,5	;RP0=0, select bank0
  6849     079F  1303               	bcf	3,6	;RP1=0, select bank0
  6850     07A0  0828               	movf	i1Lcd_Set_Cursor@y,w
  6851     07A1  158A  235B  118A   	fcall	i1_Lcd_Cmd
  6852     07A4  2FA5               	goto	i1l331
  6853     07A5                     i1l327:
  6854     07A5                     i1l331:
  6855     07A5  0008               	return
  6856     07A6                     __end_ofi1_Lcd_Set_Cursor:
  6857                           
  6858                           	psect	text32
  6859     0B5B                     __ptext32:	
  6860 ;; *************** function i1_Lcd_Cmd *****************
  6861 ;; Defined at:
  6862 ;;		line 11 in file "lcd.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  a               1    wreg     unsigned char 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  a               1    3[BANK0 ] unsigned char 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0, pclath, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1
  6876 ;;      Params:         0       0       0
  6877 ;;      Locals:         0       1       0
  6878 ;;      Temps:          0       2       0
  6879 ;;      Totals:         0       3       0
  6880 ;;Total ram usage:        3 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; Hardware stack levels required when called: 1
  6883 ;; This function calls:
  6884 ;;		i1_Lcd_Port
  6885 ;; This function is called by:
  6886 ;;		i1_Lcd_Set_Cursor
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890     0B5B                     i1_Lcd_Cmd:	
  6891                           ;psect for function i1_Lcd_Cmd
  6892                           
  6893                           
  6894                           ;incstack = 0
  6895 ;; hardware stack exceeded
  6896                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6897                           ;i1Lcd_Cmd@a stored from wreg
  6898     0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  6899     0B5C  1303               	bcf	3,6	;RP1=0, select bank0
  6900     0B5D  00A3               	movwf	i1Lcd_Cmd@a
  6901     0B5E                     i1l2055:
  6902                           
  6903                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTCbits.RC3 = 0;
  6904     0B5E  1187               	bcf	7,3	;volatile
  6905     0B5F                     i1l2057:
  6906                           
  6907                           ;lcd.c: 14:     Lcd_Port(a);
  6908     0B5F  0823               	movf	i1Lcd_Cmd@a,w
  6909     0B60  158A  2391  158A   	fcall	i1_Lcd_Port
  6910     0B63                     i1l2059:
  6911                           
  6912                           ;lcd.c: 15:     PORTCbits.RC5 = 1;
  6913     0B63  1283               	bcf	3,5	;RP0=0, select bank0
  6914     0B64  1303               	bcf	3,6	;RP1=0, select bank0
  6915     0B65  1687               	bsf	7,5	;volatile
  6916     0B66                     i1l2061:
  6917                           
  6918                           ;lcd.c: 16:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  6919     0B66  0000               	nop
  6920     0B67                     i1l2063:
  6921                           
  6922                           ;lcd.c: 17:     PORTCbits.RC5 = 0;
  6923     0B67  1283               	bcf	3,5	;RP0=0, select bank0
  6924     0B68  1303               	bcf	3,6	;RP1=0, select bank0
  6925     0B69  1287               	bcf	7,5	;volatile
  6926     0B6A                     i1l2065:
  6927                           
  6928                           ;lcd.c: 18:     _delay((unsigned long)((2)*(4000000/4000.0)));
  6929     0B6A  3003               	movlw	3
  6930     0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  6931     0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  6932     0B6D  00A2               	movwf	??i1_Lcd_Cmd+1
  6933     0B6E  3097               	movlw	151
  6934     0B6F  00A1               	movwf	??i1_Lcd_Cmd
  6935     0B70                     u426_27:
  6936     0B70  0BA1               	decfsz	??i1_Lcd_Cmd,f
  6937     0B71  2B70               	goto	u426_27
  6938     0B72  0BA2               	decfsz	??i1_Lcd_Cmd+1,f
  6939     0B73  2B70               	goto	u426_27
  6940     0B74  0000               	nop
  6941     0B75                     i1l318:
  6942     0B75  0008               	return
  6943     0B76                     __end_ofi1_Lcd_Cmd:
  6944                           
  6945                           	psect	text33
  6946     0B91                     __ptext33:	
  6947 ;; *************** function i1_Lcd_Port *****************
  6948 ;; Defined at:
  6949 ;;		line 3 in file "lcd.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  a               1    wreg     unsigned char 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  a               1    0[BANK0 ] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1
  6963 ;;      Params:         0       0       0
  6964 ;;      Locals:         0       1       0
  6965 ;;      Temps:          0       0       0
  6966 ;;      Totals:         0       1       0
  6967 ;;Total ram usage:        1 bytes
  6968 ;; Hardware stack levels used: 1
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		i1_Lcd_Cmd
  6973 ;;		i1_Lcd_Write_Char
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977     0B91                     i1_Lcd_Port:	
  6978                           ;psect for function i1_Lcd_Port
  6979                           
  6980                           
  6981                           ;incstack = 0
  6982                           ; Regs used in i1_Lcd_Port: [wreg]
  6983                           ;i1Lcd_Port@a stored from wreg
  6984     0B91  1283               	bcf	3,5	;RP0=0, select bank0
  6985     0B92  1303               	bcf	3,6	;RP1=0, select bank0
  6986     0B93  00A0               	movwf	i1Lcd_Port@a
  6987     0B94                     i1l1889:
  6988                           
  6989                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  6990     0B94  1C20               	btfss	i1Lcd_Port@a,0
  6991     0B95  2B97               	goto	u146_21
  6992     0B96  2B98               	goto	u146_20
  6993     0B97                     u146_21:
  6994     0B97  2B9A               	goto	i1l300
  6995     0B98                     u146_20:
  6996     0B98                     i1l1891:
  6997     0B98  1606               	bsf	6,4	;volatile
  6998     0B99  2B9B               	goto	i1l302
  6999     0B9A                     i1l300:
  7000     0B9A  1206               	bcf	6,4	;volatile
  7001     0B9B                     i1l302:
  7002                           
  7003                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  7004     0B9B  1CA0               	btfss	i1Lcd_Port@a,1
  7005     0B9C  2B9E               	goto	u147_21
  7006     0B9D  2B9F               	goto	u147_20
  7007     0B9E                     u147_21:
  7008     0B9E  2BA1               	goto	i1l304
  7009     0B9F                     u147_20:
  7010     0B9F                     i1l1893:
  7011     0B9F  1686               	bsf	6,5	;volatile
  7012     0BA0  2BA2               	goto	i1l306
  7013     0BA1                     i1l304:
  7014     0BA1  1286               	bcf	6,5	;volatile
  7015     0BA2                     i1l306:
  7016                           
  7017                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  7018     0BA2  1D20               	btfss	i1Lcd_Port@a,2
  7019     0BA3  2BA5               	goto	u148_21
  7020     0BA4  2BA6               	goto	u148_20
  7021     0BA5                     u148_21:
  7022     0BA5  2BA8               	goto	i1l308
  7023     0BA6                     u148_20:
  7024     0BA6                     i1l1895:
  7025     0BA6  1706               	bsf	6,6	;volatile
  7026     0BA7  2BA9               	goto	i1l310
  7027     0BA8                     i1l308:
  7028     0BA8  1306               	bcf	6,6	;volatile
  7029     0BA9                     i1l310:
  7030                           
  7031                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  7032     0BA9  1DA0               	btfss	i1Lcd_Port@a,3
  7033     0BAA  2BAC               	goto	u149_21
  7034     0BAB  2BAD               	goto	u149_20
  7035     0BAC                     u149_21:
  7036     0BAC  2BAF               	goto	i1l312
  7037     0BAD                     u149_20:
  7038     0BAD                     i1l1897:
  7039     0BAD  1786               	bsf	6,7	;volatile
  7040     0BAE  2BB0               	goto	i1l315
  7041     0BAF                     i1l312:
  7042     0BAF  1386               	bcf	6,7	;volatile
  7043     0BB0                     i1l315:
  7044     0BB0  0008               	return
  7045     0BB1                     __end_ofi1_Lcd_Port:
  7046     0001                     ___latbits      equ	1
  7047     007E                     btemp           set	126	;btemp
  7048     007E                     wtemp0          set	126
  7049                           
  7050                           	psect	config
  7051                           
  7052                           ;Config register CONFIG @ 0x2007
  7053                           ;	Oscillator Selection bits
  7054                           ;	FOSC = HS, HS oscillator
  7055                           ;	Watchdog Timer Enable bit
  7056                           ;	WDTE = OFF, WDT disabled
  7057                           ;	Power-up Timer Enable bit
  7058                           ;	PWRTE = ON, PWRT enabled
  7059                           ;	Brown-out Reset Enable bit
  7060                           ;	BOREN = ON, BOR enabled
  7061                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7062                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7063                           ;	Data EEPROM Memory Code Protection bit
  7064                           ;	CPD = OFF, Data EEPROM code protection off
  7065                           ;	Flash Program Memory Write Enable bits
  7066                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7067                           ;	In-Circuit Debugger Mode bit
  7068                           ;	DEBUG = 0x1, unprogrammed default
  7069                           ;	Flash Program Memory Code Protection bit
  7070                           ;	CP = OFF, Code protection off
  7071     2007                     	org	8199
  7072     2007  3F72               	dw	16242

Data Sizes:
    Strings     29
    Constant    8
    Data        92
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     33      66
    BANK1            94     17      85

Pointer List with Targets:

    activeBuf	PTR unsigned char  size(1) Largest target is 17
		 -> pwmStr(BANK1[17]), ref0(BANK1[17]), ref1(BANK1[17]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> cntStr(BANK1[17]), line0(BANK0[17]), pwmStr(BANK1[17]), ref0(BANK1[17]), 
		 -> ref1(BANK1[17]), STR_1(CODE[17]), STR_2(CODE[17]), STR_3(CODE[12]), 

    map	PTR const unsigned char  size(1) Largest target is 4
		 -> idxPWM(CODE[4]), idxRef(CODE[4]), 

    refToDeciv@p	PTR const unsigned char  size(1) Largest target is 17
		 -> ref0(BANK1[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwmod
    _toDeciv->___lwdiv
    ___lwdiv->___wmul
    _showPage->_Lcd_Write_String
    _cursorLCD->_Lcd_Set_Cursor
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _refToDeciv->___bmul
    _buildLine0->___awdiv
    ___lwmod->___lwdiv
    _PWM_LED_Set->___wmul
    _PWM1_Set->___wmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    _ISR->i1_Lcd_Set_Cursor
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   11120
                                             31 BANK0      2     2      0
                                              0 BANK1     17    17      0
                           _ADC_Init
                    _Keypad_Get_Char
                        _Keypad_Init
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _PWM1_Init
                           _PWM1_Set
                       _PWM_LED_Init
                        _PWM_LED_Set
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _adcRead
                         _buildLine0
                          _cursorLCD
                         _refToDeciv
                           _showPage
                            _toDeciv
 ---------------------------------------------------------------------------------
 (1) _toDeciv                                              2     0      2     465
                                             26 BANK0      2     0      2
                            ___lwdiv
                             ___wmul
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     271
                                             19 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _showPage                                             1     1      0    3577
                                             25 BANK0      1     1      0
                          _Lcd_Blink
                          _Lcd_Clear
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _cursorLCD
 ---------------------------------------------------------------------------------
 (2) _cursorLCD                                            0     0      0    1136
                     _Lcd_Set_Cursor
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1    1136
                                             17 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     553
                                             18 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     356
                                             14 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_NoBlink                                          0     0      0     235
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            2     2      0     235
                                             17 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Blink                                            0     0      0     235
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _refToDeciv                                           6     5      1     347
                                             16 BANK0      6     5      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     180
                                             13 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _buildLine0                                           5     3      2    1138
                                             21 BANK0      5     3      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     451
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     463
                                             13 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      94
                                             13 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     262
                                             26 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_LED_Set                                          6     6      0     331
                                             19 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _PWM_LED_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set                                             7     6      1     471
                                             19 BANK0      7     6      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     154
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     423
                                             17 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     235
                                             14 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0     188
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Get_Char                                      2     2      0       0
                                             13 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                             13 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0    1008
                                             10 BANK0      3     3      0
                   i1_Lcd_Set_Cursor
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_Char                                     4     4      0     222
                                              1 BANK0      4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Set_Cursor                                     6     5      1     719
                                              4 BANK0      6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Cmd                                            3     3      0     145
                                              1 BANK0      3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0     116
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Keypad_Get_Char
   _Keypad_Init
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _PWM1_Init
   _PWM1_Set
     ___wmul
   _PWM_LED_Init
   _PWM_LED_Set
     ___wmul
   ___bmul
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
   _adcRead
   _buildLine0
     ___awdiv
     ___awmod
   _cursorLCD
     _Lcd_Set_Cursor
   _refToDeciv
     ___bmul
   _showPage
     _Lcd_Blink
       _Lcd_Cmd
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_NoBlink
       _Lcd_Cmd
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _cursorLCD
   _toDeciv
     ___lwdiv
     ___wmul
     _adcRead (ARG)

 _ISR (ROOT)
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Write_Char
     i1_Lcd_Port

Address spaces:
Name               Size   Autos  Total    Usage
BANK1               94     17      85     90.4%
BITBANK1            94      0       0      0.0%
BANK0               94     33      66     70.2%
BITBANK0            94      0       0      0.0%
COMMON               0      0       0      0.0%
BITCOMMON            0      0       0      0.0%
DATA                 0      0     151      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 27 23:30:42 2025

                       pc 0002            ___bmul@product 002E              ___awdiv@sign 0032  
                      fsr 0004       ___wmul@multiplicand 002F                       l122 0BF2  
                     l300 0BBA                       l132 0C6A                       l125 0C44  
                     l222 0321                       l310 0BC9                       l302 0BBB  
                     l142 0E6E                       l231 0365                       l223 030E  
                     l151 0F1E                       l135 0C76                       l240 039A  
                     l232 0352                       l312 0BCF                       l304 0BC1  
                     l145 0AD9                       l161 0FFF                       l321 0B2D  
                     l226 052C                       l306 0BC2                       l138 0AF9  
                     l251 0413                       l243 03CF                       l235 0387  
                     l227 0343                       l219 0AD1                       l315 0BD0  
                     l331 071A                       l260 0448                       l252 0400  
                     l244 03BC                       l236 0374                       l228 0330  
                     l308 0BC8                       l164 0B08                       l157 0CA7  
                     l173 05E4                       l318 0B90                       l334 068F  
                     l158 0CA8                       l271 04C5                       l263 047D  
                     l255 0439                       l247 03F1                       l239 03AD  
                     l351 0AEB                       l327 071A                       l280 04F6  
                     l272 04B2                       l264 046A                       l256 0426  
                     l248 03DE                       l337 0D1A                       l345 0EBD  
                     l194 022A                       l275 04E7                       l267 049F  
                     l259 045B                       l179 00FC                       l284 0518  
                     l276 04D4                       l268 048C                       l348 0AE2  
                     l621 07FE                       l279 0509                       l455 0C01  
                     l608 0F83                       l457 0C19                       l481 0B42  
                     l735 0D98                       l745 0D54                       _GIE 005F  
                     _PR2 0092                       _ISR 0DDD                       _map 0046  
                     _key 005F                       _pos 0060                       fsr0 0004  
                     indf 0000              ___awmod@sign 0032       __end_of_Lcd_NoBlink 0AEC  
                    ?_ISR 0020                      ISR@d 002C                      l3001 0534  
                    l3011 055A                      l3003 053A                      l3101 063D  
                    l3021 056A                      l3013 055C                      l3005 0543  
                    l3111 0655                      l3103 0641                      l3023 0573  
                    l3015 055D                      l3007 0554                      l3121 0674  
                    l3113 0659                      l3105 0644                      l3041 0598  
                    l3025 0584                      l3017 0560                      l3009 0558  
                    l3211 04DA                      l3203 04A7                      l3131 0303  
                    l3123 0678                      l3115 065D                      l3107 0645  
                    l3043 05A9                      l3019 0564                      l3221 050D  
                    l3205 04B8                      l3133 0314                      l3125 067C  
                    l3117 0661                      l3109 0651                      l3061 05D0  
                    l3045 05AD                      l3037 0589                      l3301 00F4  
                    l3223 051E                      l3215 04EB                      l3151 037A  
                    l3143 0347                      l3127 0680                      l3119 0665  
                    l3071 05F1                      l3231 0D1B                      l3055 05B0  
                    l3039 058F                      l3311 0165                      l3303 00F5  
                    l3217 04FC                      l3209 04C9                      l3161 03B1  
                    l3145 0358                      l3137 0325                      l3129 02F9  
                    l3081 0607                      l3073 05F5                      l3241 0D33  
                    l3233 0D23                      l3057 05B6                      l3065 05D4  
                    l3313 018E                      l3305 0102                      l3321 01E4  
                    l3227 052B                      l3163 03C2                      l3155 038F  
                    l3139 0336                      l3067 0ACB                      l3091 0620  
                    l3083 0615                      l3075 05FF                      l3243 0D3D  
                    l3235 0D26                      l3059 05BF                      l3331 01FB  
                    l3323 01EA                      l3315 01B7                      l3307 0113  
                    l3181 042C                      l3173 03F5                      l3157 03A0  
                    l3149 0369                      l3093 062D                      l3085 0619  
                    l3077 0603                      l3069 05E5                      l3245 0D43  
                    l3237 0D2D                      l2701 06CF                      l3341 0217  
                    l3333 01FF                      l3317 01D3                      l3309 013C  
                    l3261 004A                      l3253 0032                      l3191 045F  
                    l3175 0406                      l3167 03D3                      l3095 0630  
                    l3087 061C                      l3079 0606                      l3247 0D4A  
                    l3239 0D2F                      l2711 06ED                      l2703 06D6  
                    l3351 024A                      l3343 0221                      l3335 020B  
                    l3327 01F0                      l3319 01DB                      l3271 0056  
                    l3263 004E                      l3255 003E                      l3193 0470  
                    l3185 043D                      l3169 03E4                      l3097 0631  
                    l3089 061D                      l3249 0D50                      l2801 0B41  
                    l2721 070D                      l2713 06F1                      l2705 06DC  
                    l3361 0266                      l3353 024E                      l3345 022E  
                    l3329 01F6                      l3281 00BE                      l3273 005C  
                    l3265 004F                      l3257 0044                      l3187 044E  
                    l3179 041B                      l3099 0634                      l2811 0F2B  
                    l2731 0CE9                      l2723 070F                      l2707 06E9  
                    l2715 06F8                      l3371 0289                      l3347 0232  
                    l3339 0212                      l3291 00D3                      l3283 00BF  
                    l3275 0063                      l3267 0050                      l3259 0047  
                    l3197 0481                      l2661 0BBF                      l2821 0F3A  
                    l2813 0F2D                      l2805 0F1F                      l2741 0CFD  
                    l2733 0CF3                      l2725 0713                      l2717 06FE  
                    l2709 06EB                      l2901 0D80                      l3381 02B6  
                    l3373 028F                      l3365 0270                      l3357 0253  
                    l3349 0240                      l3293 00DD                      l3285 00C4  
                    l3277 00AB                      l3269 0053                      l3199 0492  
                    l2663 0BC6                      l2671 0B7E                      l2831 0F50  
                    l2823 0F40                      l2815 0F31                      l2807 0F22  
                    l2751 0D10                      l2743 0CFE                      l2735 0CF5  
                    l2727 0CE5                      l2719 070B                      l2903 0D86  
                    l3383 02BA                      l3375 0298                      l3367 0276  
                    l3359 0260                      l3295 00E7                      l3287 00CA  
                    l3279 00B4                      l2921 0C38                      l2665 0BCD  
                    l2657 0BB4                      l2673 0B81                      l2833 0F61  
                    l2825 0F43                      l2841 0F75                      l2817 0F36  
                    l2809 0F26                      l2761 0B22                      l2753 0D11  
                    l2745 0D01                      l2737 0CF6                      l2729 0CE7  
                    l2681 0698                      l2905 0D87                      l2913 0BD1  
                    l3385 02BD                      l3377 02A8                      l3369 027C  
                    l3297 00E9                      l3289 00CC                      l2923 0C39  
                    l2659 0BB8                      l2675 0B82                      l2667 0B79  
                    l2931 0C58                      l2843 0F7A                      l2835 0F67  
                    l2827 0F4A                      l2819 0F38                      l2851 07A9  
                    l2755 0D14                      l2747 0D07                      l2739 0CFA  
                    l2771 0EB0                      l2763 0E6F                      l2683 06A5  
                    l2691 06B4                      l2907 0D8E                      l3387 02C5  
                    l3379 02B2                      l3299 00EE                      l2917 0C1A  
                    l2677 0B85                      l2669 0B7A                      l2781 0BFB  
                    l2933 0C5D                      l2925 0C48                      l2845 0F7F  
                    l2837 0F68                      l2829 0F4C                      l2861 07BD  
                    l2853 07AD                      l2773 0ADA                      l2749 0D0D  
                    l2765 0E74                      l2693 06BA                      l2685 06A7  
                    l2757 0AFA                      l2909 0D94                      l3389 02EC  
                    l2919 0C33                      l2783 0C08                      l2943 0AEC  
                    l2951 0E48                      l2935 0C60                      l2927 0C4D  
                    l2839 0F6F                      l2871 07D3                      l2863 07C3  
                    l2855 07B2                      l2791 0B31                      l2759 0B1A  
                    l2775 0AE3                      l2767 0E8E                      l2695 06C7  
                    l2687 06A9                      l2679 0693                      l2785 0C0F  
                    l2777 0BF3                      l2961 0EC6                      l2953 0E54  
                    l2945 0E27                      l2937 0C67                      l2929 0C52  
                    l2881 07F5                      l2873 07DD                      l2865 07C6  
                    l2857 07B4                      l2849 07A6                      l2793 0B32  
                    l2769 0E96                      l2697 06C9                      l2689 06AD  
                    l2787 0C15                      l2779 0BF7                      l2971 0EEB  
                    l2963 0EC8                      l2955 0E64                      l2947 0E3B  
                    l2939 0C6E                      l2883 07FA                      l2875 07E3  
                    l2867 07CD                      l2859 07B8                      l2795 0B36  
                    l2699 06CB                      l2891 0D5F                      l2957 0AD2  
                    l2973 0EF4                      l2965 0ECE                      l2949 0E44  
                    l2877 07EA                      l2869 07CF                      l2797 0B38  
                    l2981 0C77                      l2893 0D62                      l2975 0EF8  
                    l2967 0ED0                      l2959 0EC1                      l2879 07F0  
                    l2991 0F87                      l2799 0B3A                      l2983 0C82  
                    l2895 0D69                      l2887 0D55                      l2977 0F04  
                    l2969 0ED5                      l2993 0F9A                      l2985 0C8B  
                    l2897 0D6B                      l2889 0D59                      l2979 0F14  
                    l2995 0FC2                      l2987 0CA3                      l2899 0D6F  
                    l2997 0FEA                      l2999 0530                      STR_1 0818  
                    STR_2 0818                      STR_3 0829                      _T0IE 005D  
                    _T0IF 005A                      u3010 07D3                      u3011 07D2  
                    u3020 07DD                      u3100 0D80                      u3021 07DC  
                    u3005 07C7                      u3101 0D7F                      u3200 0EC6  
                    u3040 07F0                      u3120 0D94                      u3201 0EC5  
                    u3041 07EF                      u3025 07D9                      u3121 0D93  
                    u3105 0D7C                      u3130 0C24                      u3210 0ECE  
                    u3050 07F5                      u3131 0C20                      u3211 0ECD  
                    u3051 07F4                      u3035 07E4                      u3115 0D88  
                    u3140 0C2E                      u3300 0358                      u3220 0EF4  
                    u3060 0D5F                      u3141 0C2A                      u3301 0357  
                    u3221 0EF3                      u3061 0D5E                      u3310 0369  
                    u3230 0C82                      u4007 03A6                      u3311 0368  
                    u3231 0C81                      u3144 0C27                      u3400 0406  
                    u3320 037A                      u3160 0C4D                      u3240 0C8B  
                    u3080 0D6F                      u3401 0405                      u4017 03B7  
                    u3321 0379                      u3161 0C4C                      u3241 0C8A  
                    u3081 0D6E                      u3154 0C31                      u3410 041B  
                    u3330 038F                      u3250 0303                      u3170 0C58  
                    u4107 0454                      u3411 041A                      u4027 03C8  
                    u3331 038E                      u3251 0302                      u3171 0C57  
                    u3075 0D63                      u3500 04B8                      u3420 042C  
                    u3340 03A0                      u3260 0314                      u3180 0C6E  
                    u2700 06BA                      u3501 04B7                      u4117 0465  
                    u3421 042B                      u4037 03D9                      u3341 039F  
                    u3261 0313                      u3181 0C6D                      u2701 06B9  
                    u3510 04C9                      u3430 043D                      u3350 03B1  
                    u3270 0325                      u3190 0E44                      u4207 0502  
                    u3511 04C8                      u4127 0476                      u3431 043C  
                    u4047 03EA                      u3351 03B0                      u3271 0324  
                    u3191 0E43                      u3095 0D70                      u3520 04DA  
                    u3440 044E                      u3360 03C2                      u3280 0336  
                    u2640 0BB8                      u3600 0D3D                      u2800 0EBD  
                    u2720 06DC                      u4217 0513                      u3521 04D9  
                    u4137 0487                      u3441 044D                      u4057 03FB  
                    u3361 03C1                      u3281 0335                      u2641 0BB7  
                    u3601 0D3C                      u2801 0EBC                      u2721 06DB  
                    u3530 04EB                      u3450 045F                      u3370 03D3  
                    u3290 0347                      u2650 0BBF                      u2810 0BFB  
                    u4227 0524                      u3531 04EA                      u4147 0498  
                    u3451 045E                      u4067 040C                      u3371 03D2  
                    u3291 0346                      u2651 0BBE                      u2811 0BFA  
                    u2715 06C0                      u3540 04FC                      u3460 0470  
                    u3380 03E4                      u2660 0BC6                      u3620 0D50  
                    u2740 06FE                      u3700 01F6                      u4237 0C3F  
                    u3541 04FB                      u4157 04AD                      u3461 046F  
                    u4077 0421                      u3381 03E3                      u2661 0BC5  
                    u3621 0D4F                      u3605 0D39                      u2805 0EB9  
                    u2741 06FD                      u3701 01F5                      u3550 050D  
                    u3470 0481                      u3390 03F5                      u2670 0BCD  
                    u2910 0F50                      u3710 0211                      u3630 0063  
                    u3551 050C                      u4167 04BE                      u3471 0480  
                    u4087 0432                      u3391 03F4                      u2671 0BCC  
                    u3615 0D44                      u2911 0F4F                      u2735 06E2  
                    u3711 0210                      u3631 0062                      u3560 051E  
                    u3480 0492                      u2840 0C15                      u2680 0698  
                    u3720 0217                      u3640 00C4                      u3561 051D  
                    u4177 04CF                      u3481 0491                      u4097 0443  
                    u2841 0C14                      u2825 0C02                      u2905 0F44  
                    u2681 0697                      u3721 0216                      u3641 00C3  
                    u3490 04A7                      u3570 0D23                      u2930 0F61  
                    u2850 0B36                      u2770 0E80                      u3730 0240  
                    u3650 00CA                      u4187 04E0                      u3491 04A6  
                    u2835 0C09                      u3571 0D22                      u2931 0F60  
                    u2851 0B35                      u2755 0704                      u3731 023F  
                    u3651 00C9                      u2860 0B41                      u2780 0EA0  
                    u3740 0276                      u3660 00EE                      u4197 04F1  
                    u2925 0F51                      u2861 0B40                      u2765 0CEC  
                    u3741 0275                      u3661 00ED                      u3590 0D33  
                    u2950 0F75                      u2870 0F26                      u2790 0EB0  
                    u3750 027C                      u3670 00F4                      u3591 0D32  
                    u2951 0F74                      u2935 0F5D                      u2871 0F25  
                    u3807 0D18                      u2791 0EAF                      u2695 069E  
                    u3751 027B                      u3671 00F3                      u2960 0F7A  
                    u2880 0F31                      u3760 02A8                      u3680 0102  
                    u3585 0D27                      u2961 0F79                      u2945 0F69  
                    u2881 0F30                      u3817 0B28                      u3761 02A7  
                    u3681 0101                      u2890 0F40                      u2970 07AD  
                    u3770 02C5                      u3690 01EF                      u3907 0B8B  
                    u3827 0C64                      u2891 0F3F                      u2971 07AC  
                    u3771 02C4                      u3691 01EE                      u2980 07B8  
                    _RCIF 0065                      u3917 0309                      u3837 05FB  
                    u2981 07B7                      u2990 07C3                      u3927 031A  
                    u3847 0610                      u2991 07C2                      u3937 032B  
                    u3857 0624                      u3947 033C                      u3867 0638  
                    u3787 0205                      u3957 034D                      u3877 064C  
                    u3797 0D05                      u3967 035E                      u3887 066F  
                    u3977 036F                      u3897 068A                      u3987 0380  
                    u3997 0395                      _TMR0 0001         ?_Lcd_Write_String 0032  
                    _ref0 00D3                      _ref1 00C2                      _main 0032  
                    _page 0061                      btemp 007E          __end_of_ADC_Init 0C45  
                    start 000D        ??_Lcd_Write_String 0034           __end_of_Lcd_Cmd 0B91  
       ___bmul@multiplier 002F                     ??_ISR 002A                     ISR@st 005B  
            buildLine0@d0 0039              buildLine0@d1 0035              buildLine0@d2 0036  
                   ?_main 0020           __end_of_adcRead 0C77           __end_of___awdiv 0F84  
         __end_of___awmod 07FF           ___awdiv@divisor 002D                     _T2CON 0012  
         __end_of___lwdiv 0D99                     i1l300 0B9A                     i1l310 0BA9  
                   i1l302 0B9B                     i1l119 0E1B                     i1l312 0BAF  
                   i1l304 0BA1                     i1l306 0BA2                     i1l315 0BB0  
                   i1l331 07A5                     i1l308 0BA8                     i1l318 0B75  
                   i1l327 07A5                     i1l337 0CE1           __end_of___lwmod 0D55  
       ?i1_Lcd_Set_Cursor 0024           ___awdiv@counter 0031                     _RCREG 001A  
           ??_Keypad_Init 0000               ?i1_Lcd_Port 0020        ??i1_Lcd_Set_Cursor 0025  
        __end_of_PWM1_Set 0F1F                     _line0 0048           __end_of_toDeciv 0BF3  
            PWM_LED_Set@r 0037                     main@d 00E5                     main@k 00E4  
                   pclath 000A                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 0690          __end_of_Lcd_Port 0BD1           __initialization 000F  
            __end_of_main 02F9               _Lcd_NoBlink 0AE3                    ??_main 003F  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E                    _CCPR1L 0015                    _CCPR2L 001B  
        ___awdiv@dividend 002F       __end_of_Keypad_Init 0AD2                    i1l2061 0B66  
                  i1l2063 0B67                    i1l2055 0B5E                    i1l2065 0B6A  
                  i1l2057 0B5F                    i1l2059 0B63                    i1l2411 0730  
                  i1l2421 0745                    i1l2413 0732                    i1l2501 0DF7  
                  i1l2423 0752                    i1l2431 0761                    i1l2415 0734  
                  i1l2407 071E                    i1l2503 0DF9                    i1l2511 0E0E  
                  i1l2441 077C                    i1l2433 0767                    i1l2425 0754  
                  i1l2417 0738                    i1l2409 0723                    i1l2513 0E12  
                  i1l2505 0DFA                    i1l2451 079A                    i1l2435 0774  
                  i1l2443 0783                    i1l2427 0756                    i1l2419 073F  
                  i1l2515 0E1A                    i1l2507 0E00                    i1l2453 079E  
                  i1l2445 0789                    i1l2437 0776                    i1l2429 075A  
                  i1l2461 0CBA                    i1l2509 0E06                    i1l2447 0796  
                  i1l2439 0778                    i1l2471 0CC5                    i1l2463 0CBC  
                  i1l2455 0CAC                    i1l2449 0798                    i1l2481 0CD8  
                  i1l2473 0CC8                    i1l2465 0CBD                    i1l2457 0CAE  
                  i1l2483 0CDB                    i1l2475 0CCE                    i1l2467 0CC1  
                  i1l2459 0CB0                    i1l2491 0DE8                    i1l2477 0CD4  
                  i1l2469 0CC4                    i1l2493 0DEA                    i1l2485 0DDD  
                  i1l2479 0CD7                    i1l2495 0DED                    i1l2487 0DE1  
                  i1l2497 0DF2                    i1l2489 0DE3                    i1l1891 0B98  
                  i1l2499 0DF4                    i1l1893 0B9F                    i1l1895 0BA6  
                  i1l1897 0BAD                    i1l1889 0B94                    u240_20 0767  
                  u240_21 0766                    u241_25 076D                    u146_20 0B98  
                  u242_20 0789                    u146_21 0B97                    u242_21 0788  
                  u147_20 0B9F                    u147_21 0B9E                    u243_25 078F  
                  u148_20 0BA6                    u236_20 0723                    u148_21 0BA5  
                  u236_21 0722                    u244_25 0CB3                    u149_20 0BAD  
                  u245_20 0DE1                    u149_21 0BAC                    u245_21 0DE0  
                  u237_25 0729                    u238_20 0745                    u246_20 0DE8  
                  u238_21 0744                    u246_21 0DE7                    u247_20 0DF2  
                  u247_21 0DF1                    u239_25 074B                    u248_20 0E12  
                  u248_21 0E11                    u424_27 0CCC                    u425_27 0CDF  
                  u426_27 0B70         ?i1_Lcd_Write_Char 0020                 ??_Lcd_Cmd 002E  
      ??i1_Lcd_Write_Char 0021         __end_ofi1_Lcd_Cmd 0B76               refToDeciv@p 0030  
                  ___bmul 0B2E         __end_of_PWM1_Init 0ADA         i1Lcd_Write_Char@a 0024  
       i1Lcd_Write_Char@y 0023                    ___wmul 0BF3                 ??_adcRead 002F  
               ??___awdiv 0000                 ??___awmod 0000                    _idxPWM 0810  
               ??___lwdiv 0000                 ??___lwmod 0000                    _cntStr 00B1  
                  _idxRef 0814                    _lenMap 0045          ___awdiv@quotient 0033  
         ___awmod@divisor 002D           ___awmod@counter 0031                    _pwmStr 00A0  
                  main@d0 00EE                    main@d1 00EF                    main@d2 00F0  
                  main@r1 00F1                    main@r3 00F2                 ??_toDeciv 0000  
               ?_ADC_Init 0020          __end_of_showPage 05E5                    saved_w 007E  
         Lcd_Set_Cursor@a 0033           Lcd_Set_Cursor@b 0031           Lcd_Set_Cursor@y 0035  
         Lcd_Set_Cursor@z 0034   __end_of__initialization 002F         __end_of_Lcd_Clear 0B2E  
       __end_of_Lcd_Blink 0AE3              ?_PWM_LED_Set 0020       ___bmul@multiplicand 002D  
          __pcstackCOMMON 0000              __pidataBANK0 0B43              __pidataBANK1 0D99  
               ?_PWM1_Set 0033            _Lcd_Set_Cursor 0690               _Keypad_Init 0ACB  
              ??_ADC_Init 002D                 ?_Lcd_Init 0020                 ?_Lcd_Port 0020  
              __pbssBANK0 0059                   ISR@rChr 005C                   ISR@rCol 005D  
                 ISR@rRow 005E                __pmaintext 0032                   ?___bmul 002D  
                 ?___wmul 002D                ??_PWM1_Set 0034                __pintentry 0004  
                 _CCP1CON 0017                   _CCP2CON 001D    __end_of_Lcd_Set_Cursor 071B  
               PWM1_Set@r 0038              ??i1_Lcd_Port 0000                _buildLine0 0F84  
              ??_Lcd_Init 0031                ??_Lcd_Port 0000                __stringtab 0800  
          _Lcd_Write_Char 0CE2                   _Lcd_Cmd 0B76                 ?_showPage 0020  
      __end_ofi1_Lcd_Port 0BB1                   _adcRead 0C45                   ___awdiv 0F1F  
                 ___awmod 07A6                _refToDeciv 0C77                   ___lwdiv 0D55  
                 ___lwmod 0D1B           ?_Lcd_Set_Cursor 0031              ?_Lcd_NoBlink 0020  
                 __ptext1 0BD1                   __ptext2 0D55                   __ptext3 052D  
                 __ptext4 0AFA                   __ptext5 0690                   __ptext6 0E6F  
                 __ptext7 0CE2                   __ptext8 0AE3                   __ptext9 0B1A  
                 _columna 0041         __end_of_cursorLCD 0B09                   _toDeciv 0BD1  
        ___awmod@dividend 002F                   _renglon 0043            PWM_LED_Set@pct 0036  
             PWM1_Set@kHz 0037    __end_of_Lcd_Write_Char 0D1B      end_of_initialization 002F  
       ??_Keypad_Get_Char 002D                ??_showPage 0000                 Lcd_Port@a 002D  
               i1_Lcd_Cmd 0B5B                 _PWM1_Init 0AD2                 _PORTBbits 0006  
               _PORTCbits 0007                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISCbits 0087               ?_buildLine0 0035           ?_Lcd_Write_Char 0020  
       Lcd_Write_String@a 0032         Lcd_Write_String@i 0037             ?_PWM_LED_Init 0020  
             _CCP1CONbits 0017               _CCP2CONbits 001D            _refToDeciv$305 0034  
               _Lcd_Clear 0B1A                 _Lcd_Blink 0ADA               ?_refToDeciv 0030  
          __end_of___bmul 0B43            __end_of___wmul 0C1A                ?i1_Lcd_Cmd 0020  
        _Lcd_Write_String 0E6F            __end_of_idxPWM 0814                ?_PWM1_Init 0020  
          __end_of_idxRef 0818              ?_Keypad_Init 0020       start_initialization 000F  
             __end_of_ISR 0E24            ??_PWM_LED_Init 0000          i1_Lcd_Set_Cursor 071B  
              ?_Lcd_Clear 0020                  ??___bmul 0000                ?_Lcd_Blink 0020  
                ??___wmul 0000                init_fetch0 0B09               __pdataBANK0 0041  
             __pdataBANK1 00A0           Lcd_Write_Char@a 0031           Lcd_Write_Char@y 0030  
               ___latbits 0001             __pcstackBANK0 0020             __pcstackBANK1 00E4  
    i1Lcd_Write_Char@temp 0022                 adcRead@ch 0030                  ?_Lcd_Cmd 0020  
               _activeBuf 0047          ___lwdiv@dividend 0035          ??_Lcd_Set_Cursor 0032  
                ?_adcRead 002D                  ?___awdiv 002D                  ?___awmod 002D  
                ?___lwdiv 0033                  ?___lwmod 003A          i1_Lcd_Write_Char 0CA9  
             ??i1_Lcd_Cmd 0021      i1Lcd_Set_Cursor@temp 0029               ??_PWM1_Init 0000  
               __pstrings 0800           _Keypad_Get_Char 02F9                  ?_toDeciv 003A  
                _ADC_Init 0C1A          ___lwdiv@quotient 0038                 _cursorLCD 0AFA  
       interrupt_function 0004            ___wmul@product 0031                  Lcd_Cmd@a 0030  
                _GO_nDONE 00FA               ??_Lcd_Clear 0031               ??_Lcd_Blink 0000  
              showPage@pg 0039                  _PWM1_Set 0EBE      __end_of_PWM_LED_Init 0AFA  
              _ADCON0bits 001F               __stringbase 080F         ___wmul@multiplier 002D  
        ??_Lcd_Write_Char 002E                 main@total 00F3              ??_buildLine0 0037  
                _Lcd_Init 05E5                  _Lcd_Port 0BB1                ?_cursorLCD 0020  
__end_of_Lcd_Write_String 0EBE             ??_PWM_LED_Set 0033              ??_refToDeciv 0031  
 __end_of_Keypad_Get_Char 052D        __end_of_buildLine0 1000        __end_of__stringtab 0810  
__end_ofi1_Lcd_Set_Cursor 07A6                  _main$350 00E8                  _main$351 00EA  
                _main$344 00EC                  _main$347 00ED                  _main$349 00E6  
         ___lwdiv@divisor 0033         i1Lcd_Set_Cursor@a 0026         i1Lcd_Set_Cursor@b 0024  
       i1Lcd_Set_Cursor@y 0028         i1Lcd_Set_Cursor@z 0027           ___lwdiv@counter 0037  
                __ptext10 0ADA                  __ptext11 0C77                  __ptext20 0EBE  
                __ptext12 0B2E                  __ptext21 0BF3                  __ptext13 0F84  
                __ptext30 0CA9                  __ptext22 0AD2                  __ptext14 07A6  
                __ptext31 071B                  __ptext23 05E5                  __ptext15 0F1F  
                __ptext32 0B5B                  __ptext24 0B76                  __ptext16 0C45  
                __ptext33 0B91                  __ptext25 0BB1                  __ptext17 0D1B  
                __ptext26 0ACB                  __ptext18 0E24                  __ptext27 02F9  
                __ptext19 0AEC                  __ptext28 0C1A                  __ptext29 0DDD  
      __end_of_refToDeciv 0CA9               i1Lcd_Port@a 0020                  _showPage 052D  
            PWM1_Set@duty 0033                  _pulseCnt 0059       __end_of_PWM_LED_Set 0E6F  
                init_ram0 0B0D                  toDeciv@v 003A               ??_cursorLCD 0000  
      Lcd_Write_Char@temp 002F                  intlevel1 0000  __end_ofi1_Lcd_Write_Char 0CE2  
        ___lwmod@dividend 003C                i1Lcd_Cmd@a 0023                 stringcode 080A  
        ?_Keypad_Get_Char 0020        Lcd_Set_Cursor@temp 0036             ??_Lcd_NoBlink 0000  
              _OPTION_REG 0081           ___lwmod@divisor 003A           ___lwmod@counter 003E  
              i1_Lcd_Port 0B91                  stringdir 080A                  stringtab 0800  
            _PWM_LED_Init 0AEC               _PWM_LED_Set 0E24  
