

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 05 01:37:31 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,space=0,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 12/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F873A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0004                     fsr             equ	4
    74     0004                     fsr0            equ	4
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0000                     INDF            equ	0	;# 
    82     0001                     TMR0            equ	1	;# 
    83     0002                     PCL             equ	2	;# 
    84     0003                     STATUS          equ	3	;# 
    85     0004                     FSR             equ	4	;# 
    86     0005                     PORTA           equ	5	;# 
    87     0006                     PORTB           equ	6	;# 
    88     0007                     PORTC           equ	7	;# 
    89     000A                     PCLATH          equ	10	;# 
    90     000B                     INTCON          equ	11	;# 
    91     000C                     PIR1            equ	12	;# 
    92     000D                     PIR2            equ	13	;# 
    93     000E                     TMR1            equ	14	;# 
    94     000E                     TMR1L           equ	14	;# 
    95     000F                     TMR1H           equ	15	;# 
    96     0010                     T1CON           equ	16	;# 
    97     0011                     TMR2            equ	17	;# 
    98     0012                     T2CON           equ	18	;# 
    99     0013                     SSPBUF          equ	19	;# 
   100     0014                     SSPCON          equ	20	;# 
   101     0015                     CCPR1           equ	21	;# 
   102     0015                     CCPR1L          equ	21	;# 
   103     0016                     CCPR1H          equ	22	;# 
   104     0017                     CCP1CON         equ	23	;# 
   105     0018                     RCSTA           equ	24	;# 
   106     0019                     TXREG           equ	25	;# 
   107     001A                     RCREG           equ	26	;# 
   108     001B                     CCPR2           equ	27	;# 
   109     001B                     CCPR2L          equ	27	;# 
   110     001C                     CCPR2H          equ	28	;# 
   111     001D                     CCP2CON         equ	29	;# 
   112     001E                     ADRESH          equ	30	;# 
   113     001F                     ADCON0          equ	31	;# 
   114     0081                     OPTION_REG      equ	129	;# 
   115     0085                     TRISA           equ	133	;# 
   116     0086                     TRISB           equ	134	;# 
   117     0087                     TRISC           equ	135	;# 
   118     008C                     PIE1            equ	140	;# 
   119     008D                     PIE2            equ	141	;# 
   120     008E                     PCON            equ	142	;# 
   121     0091                     SSPCON2         equ	145	;# 
   122     0092                     PR2             equ	146	;# 
   123     0093                     SSPADD          equ	147	;# 
   124     0094                     SSPSTAT         equ	148	;# 
   125     0098                     TXSTA           equ	152	;# 
   126     0099                     SPBRG           equ	153	;# 
   127     009C                     CMCON           equ	156	;# 
   128     009D                     CVRCON          equ	157	;# 
   129     009E                     ADRESL          equ	158	;# 
   130     009F                     ADCON1          equ	159	;# 
   131     010C                     EEDATA          equ	268	;# 
   132     010D                     EEADR           equ	269	;# 
   133     010E                     EEDATH          equ	270	;# 
   134     010F                     EEADRH          equ	271	;# 
   135     018C                     EECON1          equ	396	;# 
   136     018D                     EECON2          equ	397	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     PORTA           equ	5	;# 
   143     0006                     PORTB           equ	6	;# 
   144     0007                     PORTC           equ	7	;# 
   145     000A                     PCLATH          equ	10	;# 
   146     000B                     INTCON          equ	11	;# 
   147     000C                     PIR1            equ	12	;# 
   148     000D                     PIR2            equ	13	;# 
   149     000E                     TMR1            equ	14	;# 
   150     000E                     TMR1L           equ	14	;# 
   151     000F                     TMR1H           equ	15	;# 
   152     0010                     T1CON           equ	16	;# 
   153     0011                     TMR2            equ	17	;# 
   154     0012                     T2CON           equ	18	;# 
   155     0013                     SSPBUF          equ	19	;# 
   156     0014                     SSPCON          equ	20	;# 
   157     0015                     CCPR1           equ	21	;# 
   158     0015                     CCPR1L          equ	21	;# 
   159     0016                     CCPR1H          equ	22	;# 
   160     0017                     CCP1CON         equ	23	;# 
   161     0018                     RCSTA           equ	24	;# 
   162     0019                     TXREG           equ	25	;# 
   163     001A                     RCREG           equ	26	;# 
   164     001B                     CCPR2           equ	27	;# 
   165     001B                     CCPR2L          equ	27	;# 
   166     001C                     CCPR2H          equ	28	;# 
   167     001D                     CCP2CON         equ	29	;# 
   168     001E                     ADRESH          equ	30	;# 
   169     001F                     ADCON0          equ	31	;# 
   170     0081                     OPTION_REG      equ	129	;# 
   171     0085                     TRISA           equ	133	;# 
   172     0086                     TRISB           equ	134	;# 
   173     0087                     TRISC           equ	135	;# 
   174     008C                     PIE1            equ	140	;# 
   175     008D                     PIE2            equ	141	;# 
   176     008E                     PCON            equ	142	;# 
   177     0091                     SSPCON2         equ	145	;# 
   178     0092                     PR2             equ	146	;# 
   179     0093                     SSPADD          equ	147	;# 
   180     0094                     SSPSTAT         equ	148	;# 
   181     0098                     TXSTA           equ	152	;# 
   182     0099                     SPBRG           equ	153	;# 
   183     009C                     CMCON           equ	156	;# 
   184     009D                     CVRCON          equ	157	;# 
   185     009E                     ADRESL          equ	158	;# 
   186     009F                     ADCON1          equ	159	;# 
   187     010C                     EEDATA          equ	268	;# 
   188     010D                     EEADR           equ	269	;# 
   189     010E                     EEDATH          equ	270	;# 
   190     010F                     EEADRH          equ	271	;# 
   191     018C                     EECON1          equ	396	;# 
   192     018D                     EECON2          equ	397	;# 
   193     0000                     INDF            equ	0	;# 
   194     0001                     TMR0            equ	1	;# 
   195     0002                     PCL             equ	2	;# 
   196     0003                     STATUS          equ	3	;# 
   197     0004                     FSR             equ	4	;# 
   198     0005                     PORTA           equ	5	;# 
   199     0006                     PORTB           equ	6	;# 
   200     0007                     PORTC           equ	7	;# 
   201     000A                     PCLATH          equ	10	;# 
   202     000B                     INTCON          equ	11	;# 
   203     000C                     PIR1            equ	12	;# 
   204     000D                     PIR2            equ	13	;# 
   205     000E                     TMR1            equ	14	;# 
   206     000E                     TMR1L           equ	14	;# 
   207     000F                     TMR1H           equ	15	;# 
   208     0010                     T1CON           equ	16	;# 
   209     0011                     TMR2            equ	17	;# 
   210     0012                     T2CON           equ	18	;# 
   211     0013                     SSPBUF          equ	19	;# 
   212     0014                     SSPCON          equ	20	;# 
   213     0015                     CCPR1           equ	21	;# 
   214     0015                     CCPR1L          equ	21	;# 
   215     0016                     CCPR1H          equ	22	;# 
   216     0017                     CCP1CON         equ	23	;# 
   217     0018                     RCSTA           equ	24	;# 
   218     0019                     TXREG           equ	25	;# 
   219     001A                     RCREG           equ	26	;# 
   220     001B                     CCPR2           equ	27	;# 
   221     001B                     CCPR2L          equ	27	;# 
   222     001C                     CCPR2H          equ	28	;# 
   223     001D                     CCP2CON         equ	29	;# 
   224     001E                     ADRESH          equ	30	;# 
   225     001F                     ADCON0          equ	31	;# 
   226     0081                     OPTION_REG      equ	129	;# 
   227     0085                     TRISA           equ	133	;# 
   228     0086                     TRISB           equ	134	;# 
   229     0087                     TRISC           equ	135	;# 
   230     008C                     PIE1            equ	140	;# 
   231     008D                     PIE2            equ	141	;# 
   232     008E                     PCON            equ	142	;# 
   233     0091                     SSPCON2         equ	145	;# 
   234     0092                     PR2             equ	146	;# 
   235     0093                     SSPADD          equ	147	;# 
   236     0094                     SSPSTAT         equ	148	;# 
   237     0098                     TXSTA           equ	152	;# 
   238     0099                     SPBRG           equ	153	;# 
   239     009C                     CMCON           equ	156	;# 
   240     009D                     CVRCON          equ	157	;# 
   241     009E                     ADRESL          equ	158	;# 
   242     009F                     ADCON1          equ	159	;# 
   243     010C                     EEDATA          equ	268	;# 
   244     010D                     EEADR           equ	269	;# 
   245     010E                     EEDATH          equ	270	;# 
   246     010F                     EEADRH          equ	271	;# 
   247     018C                     EECON1          equ	396	;# 
   248     018D                     EECON2          equ	397	;# 
   249     0000                     INDF            equ	0	;# 
   250     0001                     TMR0            equ	1	;# 
   251     0002                     PCL             equ	2	;# 
   252     0003                     STATUS          equ	3	;# 
   253     0004                     FSR             equ	4	;# 
   254     0005                     PORTA           equ	5	;# 
   255     0006                     PORTB           equ	6	;# 
   256     0007                     PORTC           equ	7	;# 
   257     000A                     PCLATH          equ	10	;# 
   258     000B                     INTCON          equ	11	;# 
   259     000C                     PIR1            equ	12	;# 
   260     000D                     PIR2            equ	13	;# 
   261     000E                     TMR1            equ	14	;# 
   262     000E                     TMR1L           equ	14	;# 
   263     000F                     TMR1H           equ	15	;# 
   264     0010                     T1CON           equ	16	;# 
   265     0011                     TMR2            equ	17	;# 
   266     0012                     T2CON           equ	18	;# 
   267     0013                     SSPBUF          equ	19	;# 
   268     0014                     SSPCON          equ	20	;# 
   269     0015                     CCPR1           equ	21	;# 
   270     0015                     CCPR1L          equ	21	;# 
   271     0016                     CCPR1H          equ	22	;# 
   272     0017                     CCP1CON         equ	23	;# 
   273     0018                     RCSTA           equ	24	;# 
   274     0019                     TXREG           equ	25	;# 
   275     001A                     RCREG           equ	26	;# 
   276     001B                     CCPR2           equ	27	;# 
   277     001B                     CCPR2L          equ	27	;# 
   278     001C                     CCPR2H          equ	28	;# 
   279     001D                     CCP2CON         equ	29	;# 
   280     001E                     ADRESH          equ	30	;# 
   281     001F                     ADCON0          equ	31	;# 
   282     0081                     OPTION_REG      equ	129	;# 
   283     0085                     TRISA           equ	133	;# 
   284     0086                     TRISB           equ	134	;# 
   285     0087                     TRISC           equ	135	;# 
   286     008C                     PIE1            equ	140	;# 
   287     008D                     PIE2            equ	141	;# 
   288     008E                     PCON            equ	142	;# 
   289     0091                     SSPCON2         equ	145	;# 
   290     0092                     PR2             equ	146	;# 
   291     0093                     SSPADD          equ	147	;# 
   292     0094                     SSPSTAT         equ	148	;# 
   293     0098                     TXSTA           equ	152	;# 
   294     0099                     SPBRG           equ	153	;# 
   295     009C                     CMCON           equ	156	;# 
   296     009D                     CVRCON          equ	157	;# 
   297     009E                     ADRESL          equ	158	;# 
   298     009F                     ADCON1          equ	159	;# 
   299     010C                     EEDATA          equ	268	;# 
   300     010D                     EEADR           equ	269	;# 
   301     010E                     EEDATH          equ	270	;# 
   302     010F                     EEADRH          equ	271	;# 
   303     018C                     EECON1          equ	396	;# 
   304     018D                     EECON2          equ	397	;# 
   305     0000                     INDF            equ	0	;# 
   306     0001                     TMR0            equ	1	;# 
   307     0002                     PCL             equ	2	;# 
   308     0003                     STATUS          equ	3	;# 
   309     0004                     FSR             equ	4	;# 
   310     0005                     PORTA           equ	5	;# 
   311     0006                     PORTB           equ	6	;# 
   312     0007                     PORTC           equ	7	;# 
   313     000A                     PCLATH          equ	10	;# 
   314     000B                     INTCON          equ	11	;# 
   315     000C                     PIR1            equ	12	;# 
   316     000D                     PIR2            equ	13	;# 
   317     000E                     TMR1            equ	14	;# 
   318     000E                     TMR1L           equ	14	;# 
   319     000F                     TMR1H           equ	15	;# 
   320     0010                     T1CON           equ	16	;# 
   321     0011                     TMR2            equ	17	;# 
   322     0012                     T2CON           equ	18	;# 
   323     0013                     SSPBUF          equ	19	;# 
   324     0014                     SSPCON          equ	20	;# 
   325     0015                     CCPR1           equ	21	;# 
   326     0015                     CCPR1L          equ	21	;# 
   327     0016                     CCPR1H          equ	22	;# 
   328     0017                     CCP1CON         equ	23	;# 
   329     0018                     RCSTA           equ	24	;# 
   330     0019                     TXREG           equ	25	;# 
   331     001A                     RCREG           equ	26	;# 
   332     001B                     CCPR2           equ	27	;# 
   333     001B                     CCPR2L          equ	27	;# 
   334     001C                     CCPR2H          equ	28	;# 
   335     001D                     CCP2CON         equ	29	;# 
   336     001E                     ADRESH          equ	30	;# 
   337     001F                     ADCON0          equ	31	;# 
   338     0081                     OPTION_REG      equ	129	;# 
   339     0085                     TRISA           equ	133	;# 
   340     0086                     TRISB           equ	134	;# 
   341     0087                     TRISC           equ	135	;# 
   342     008C                     PIE1            equ	140	;# 
   343     008D                     PIE2            equ	141	;# 
   344     008E                     PCON            equ	142	;# 
   345     0091                     SSPCON2         equ	145	;# 
   346     0092                     PR2             equ	146	;# 
   347     0093                     SSPADD          equ	147	;# 
   348     0094                     SSPSTAT         equ	148	;# 
   349     0098                     TXSTA           equ	152	;# 
   350     0099                     SPBRG           equ	153	;# 
   351     009C                     CMCON           equ	156	;# 
   352     009D                     CVRCON          equ	157	;# 
   353     009E                     ADRESL          equ	158	;# 
   354     009F                     ADCON1          equ	159	;# 
   355     010C                     EEDATA          equ	268	;# 
   356     010D                     EEADR           equ	269	;# 
   357     010E                     EEDATH          equ	270	;# 
   358     010F                     EEADRH          equ	271	;# 
   359     018C                     EECON1          equ	396	;# 
   360     018D                     EECON2          equ	397	;# 
   361                           
   362                           	psect	idataBANK0
   363     0DC1                     __pidataBANK0:
   364                           
   365                           ;initializer for _columna
   366     0DC1  3401               	retlw	1
   367     0DC2  3400               	retlw	0
   368                           
   369                           ;initializer for _renglon
   370     0DC3  3401               	retlw	1
   371     0DC4  3400               	retlw	0
   372                           
   373                           	psect	strings
   374     0700                     __pstrings:
   375     0700                     stringtab:
   376     0700                     __stringtab:
   377     0700                     stringcode:	
   378                           ;	String table - string pointers are 1 byte each
   379                           
   380     0700                     stringdir:
   381     0700  3007               	movlw	high stringdir
   382     0701  008A               	movwf	10
   383     0702  0804               	movf	4,w
   384     0703  0A84               	incf	4,f
   385     0704  0782               	addwf	2,f
   386     0705                     __stringbase:
   387     0705  3400               	retlw	0
   388     0706                     __end_of__stringtab:
   389     0706                     _ASCII_CHARS:
   390     0706  3400               	retlw	0
   391     0707  3401               	retlw	1
   392     0708  3402               	retlw	2
   393     0709  3403               	retlw	3
   394     070A  3404               	retlw	4
   395     070B  3405               	retlw	5
   396     070C  3406               	retlw	6
   397     070D  3407               	retlw	7
   398     070E  3408               	retlw	8
   399     070F  3409               	retlw	9
   400     0710  340A               	retlw	10
   401     0711  340B               	retlw	11
   402     0712  340C               	retlw	12
   403     0713  340D               	retlw	13
   404     0714  340E               	retlw	14
   405     0715  340F               	retlw	15
   406     0716  3410               	retlw	16
   407     0717  3411               	retlw	17
   408     0718  3412               	retlw	18
   409     0719  3413               	retlw	19
   410     071A  3414               	retlw	20
   411     071B  3415               	retlw	21
   412     071C  3416               	retlw	22
   413     071D  3417               	retlw	23
   414     071E  3418               	retlw	24
   415     071F  3419               	retlw	25
   416     0720  341A               	retlw	26
   417     0721  341B               	retlw	27
   418     0722  341C               	retlw	28
   419     0723  341D               	retlw	29
   420     0724  341E               	retlw	30
   421     0725  341F               	retlw	31
   422     0726  3420               	retlw	32
   423     0727  3421               	retlw	33
   424     0728  3422               	retlw	34
   425     0729  3423               	retlw	35
   426     072A  3424               	retlw	36
   427     072B  3425               	retlw	37
   428     072C  3426               	retlw	38
   429     072D  3427               	retlw	39
   430     072E  3428               	retlw	40
   431     072F  3429               	retlw	41
   432     0730  342A               	retlw	42
   433     0731  342B               	retlw	43
   434     0732  342C               	retlw	44
   435     0733  342D               	retlw	45
   436     0734  342E               	retlw	46
   437     0735  342F               	retlw	47
   438     0736  3430               	retlw	48
   439     0737  3431               	retlw	49
   440     0738  3432               	retlw	50
   441     0739  3433               	retlw	51
   442     073A  3434               	retlw	52
   443     073B  3435               	retlw	53
   444     073C  3436               	retlw	54
   445     073D  3437               	retlw	55
   446     073E  3438               	retlw	56
   447     073F  3439               	retlw	57
   448     0740  343A               	retlw	58
   449     0741  343B               	retlw	59
   450     0742  343C               	retlw	60
   451     0743  343D               	retlw	61
   452     0744  343E               	retlw	62
   453     0745  343F               	retlw	63
   454     0746  3440               	retlw	64
   455     0747  3441               	retlw	65
   456     0748  3442               	retlw	66
   457     0749  3443               	retlw	67
   458     074A  3444               	retlw	68
   459     074B  3445               	retlw	69
   460     074C  3446               	retlw	70
   461     074D  3447               	retlw	71
   462     074E  3448               	retlw	72
   463     074F  3449               	retlw	73
   464     0750  344A               	retlw	74
   465     0751  344B               	retlw	75
   466     0752  344C               	retlw	76
   467     0753  344D               	retlw	77
   468     0754  344E               	retlw	78
   469     0755  344F               	retlw	79
   470     0756  3450               	retlw	80
   471     0757  3451               	retlw	81
   472     0758  3452               	retlw	82
   473     0759  3453               	retlw	83
   474     075A  3454               	retlw	84
   475     075B  3455               	retlw	85
   476     075C  3456               	retlw	86
   477     075D  3457               	retlw	87
   478     075E  3458               	retlw	88
   479     075F  3459               	retlw	89
   480     0760  345A               	retlw	90
   481     0761  345B               	retlw	91
   482     0762  345C               	retlw	92
   483     0763  345D               	retlw	93
   484     0764  345E               	retlw	94
   485     0765  345F               	retlw	95
   486     0766  3460               	retlw	96
   487     0767  3461               	retlw	97
   488     0768  3462               	retlw	98
   489     0769  3463               	retlw	99
   490     076A  3464               	retlw	100
   491     076B  3465               	retlw	101
   492     076C  3466               	retlw	102
   493     076D  3467               	retlw	103
   494     076E  3468               	retlw	104
   495     076F  3469               	retlw	105
   496     0770  346A               	retlw	106
   497     0771  346B               	retlw	107
   498     0772  346C               	retlw	108
   499     0773  346D               	retlw	109
   500     0774  346E               	retlw	110
   501     0775  346F               	retlw	111
   502     0776  3470               	retlw	112
   503     0777  3471               	retlw	113
   504     0778  3472               	retlw	114
   505     0779  3473               	retlw	115
   506     077A  3474               	retlw	116
   507     077B  3475               	retlw	117
   508     077C  3476               	retlw	118
   509     077D  3477               	retlw	119
   510     077E  3478               	retlw	120
   511     077F  3479               	retlw	121
   512     0780  347A               	retlw	122
   513     0781  347B               	retlw	123
   514     0782  347C               	retlw	124
   515     0783  347D               	retlw	125
   516     0784  347E               	retlw	126
   517     0785  347F               	retlw	127
   518     0786                     __end_of_ASCII_CHARS:
   519     001A                     _RCREG          set	26
   520     0019                     _TXREG          set	25
   521     0007                     _PORTCbits      set	7
   522     0006                     _PORTBbits      set	6
   523     0005                     _PORTAbits      set	5
   524     0065                     _RCIF           set	101
   525     0064                     _TXIF           set	100
   526     00C4                     _CREN           set	196
   527     00C7                     _SPEN           set	199
   528     005F                     _GIE            set	95
   529     005E                     _PEIE           set	94
   530     0099                     _SPBRG          set	153
   531     0087                     _TRISCbits      set	135
   532     0086                     _TRISBbits      set	134
   533     0085                     _TRISAbits      set	133
   534     009F                     _ADCON1bits     set	159
   535     04C4                     _SYNC           set	1220
   536     04C5                     _TXEN           set	1221
   537     043F                     _TRISC7         set	1087
   538     043E                     _TRISC6         set	1086
   539     0465                     _RCIE           set	1125
   540                           
   541                           	psect	cinit
   542     000F                     start_initialization:	
   543                           ; #config settings
   544                           
   545     000F                     __initialization:
   546                           
   547                           ; Initialize objects allocated to BANK0
   548     000F  158A  25C1  118A   	fcall	__pidataBANK0	;fetch initializer
   549     0012  00D2               	movwf	__pdataBANK0& (0+127)
   550     0013  158A  25C2  118A   	fcall	__pidataBANK0+1	;fetch initializer
   551     0016  00D3               	movwf	(__pdataBANK0+1)& (0+127)
   552     0017  158A  25C3  118A   	fcall	__pidataBANK0+2	;fetch initializer
   553     001A  00D4               	movwf	(__pdataBANK0+2)& (0+127)
   554     001B  158A  25C4  118A   	fcall	__pidataBANK0+3	;fetch initializer
   555     001E  00D5               	movwf	(__pdataBANK0+3)& (0+127)
   556                           
   557                           ; Clear objects allocated to BANK0
   558     001F  01CE               	clrf	__pbssBANK0& (0+127)
   559     0020  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   560     0021  01D0               	clrf	(__pbssBANK0+2)& (0+127)
   561     0022  01D1               	clrf	(__pbssBANK0+3)& (0+127)
   562     0023                     end_of_initialization:	
   563                           ;End of C runtime variable initialization code
   564                           
   565     0023                     __end_of__initialization:
   566     0023  0183               	clrf	3
   567     0024  118A  2826         	ljmp	_main	;jump to C main() function
   568                           
   569                           	psect	bssBANK0
   570     004E                     __pbssBANK0:
   571     004E                     ISR@estado:
   572     004E                     	ds	1
   573     004F                     ISR@caracter_recibido:
   574     004F                     	ds	1
   575     0050                     ISR@columna_recibida:
   576     0050                     	ds	1
   577     0051                     ISR@renglon_recibido:
   578     0051                     	ds	1
   579                           
   580                           	psect	dataBANK0
   581     0052                     __pdataBANK0:
   582     0052                     _columna:
   583     0052                     	ds	2
   584     0054                     _renglon:
   585     0054                     	ds	2
   586                           
   587                           	psect	cstackCOMMON
   588     0000                     __pcstackCOMMON:
   589     0000                     ??_Keypad_Init:
   590     0000                     ??_Lcd_Blink:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0000                     ??_Lcd_Delete_Char:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0000                     ??_enviarInformacion:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0000                     ??_memset:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0000                     ??_main:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0000                     ??_Lcd_Port:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0000                     ??_Lcd_Clear:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0000                     ??_USART_Write:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0000                     ??___wmul:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0000                     ??i1_Lcd_Port:	
   618                           ; 1 bytes @ 0x0
   619                           
   620                           
   621                           	psect	cstackBANK0
   622     0020                     __pcstackBANK0:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0020                     ?_Keypad_Init:
   626     0020                     ?_Lcd_Init:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0020                     ?_Lcd_Blink:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0020                     ?_Keypad_Get_Char:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0020                     ?_Lcd_Write_Char:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0020                     ?_main:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0020                     ?_Lcd_Port:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0020                     ?_Lcd_Cmd:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0020                     ?_Lcd_Clear:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0020                     ?_USART_Write:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0020                     ?_ISR:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0020                     ?i1_Lcd_Port:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0020                     ?i1_Lcd_Cmd:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0020                     ?i1_Lcd_Write_Char:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0020                     i1Lcd_Port@a:	
   666                           ; 1 bytes @ 0x0
   667                           
   668                           
   669                           ; 1 bytes @ 0x0
   670     0020                     	ds	1
   671     0021                     ??i1_Lcd_Cmd:
   672     0021                     ??i1_Lcd_Write_Char:	
   673                           ; 1 bytes @ 0x1
   674                           
   675                           
   676                           ; 1 bytes @ 0x1
   677     0021                     	ds	1
   678     0022                     i1Lcd_Write_Char@temp:
   679                           
   680                           ; 1 bytes @ 0x2
   681     0022                     	ds	1
   682     0023                     i1Lcd_Cmd@a:
   683     0023                     i1Lcd_Write_Char@y:	
   684                           ; 1 bytes @ 0x3
   685                           
   686                           
   687                           ; 1 bytes @ 0x3
   688     0023                     	ds	1
   689     0024                     ?i1_Lcd_Set_Cursor:
   690     0024                     i1Lcd_Set_Cursor@b:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     0024                     i1Lcd_Write_Char@a:	
   694                           ; 1 bytes @ 0x4
   695                           
   696                           
   697                           ; 1 bytes @ 0x4
   698     0024                     	ds	1
   699     0025                     ??i1_Lcd_Set_Cursor:
   700                           
   701                           ; 1 bytes @ 0x5
   702     0025                     	ds	1
   703     0026                     i1Lcd_Set_Cursor@a:
   704                           
   705                           ; 1 bytes @ 0x6
   706     0026                     	ds	1
   707     0027                     i1Lcd_Set_Cursor@z:
   708                           
   709                           ; 1 bytes @ 0x7
   710     0027                     	ds	1
   711     0028                     i1Lcd_Set_Cursor@y:
   712                           
   713                           ; 1 bytes @ 0x8
   714     0028                     	ds	1
   715     0029                     i1Lcd_Set_Cursor@temp:
   716                           
   717                           ; 1 bytes @ 0x9
   718     0029                     	ds	1
   719     002A                     ??_ISR:
   720                           
   721                           ; 1 bytes @ 0xA
   722     002A                     	ds	2
   723     002C                     ISR@dato:
   724                           
   725                           ; 1 bytes @ 0xC
   726     002C                     	ds	1
   727     002D                     ?_Buzzer_On:
   728     002D                     ?_memset:	
   729                           ; 1 bytes @ 0xD
   730                           
   731     002D                     ?___wmul:	
   732                           ; 1 bytes @ 0xD
   733                           
   734     002D                     ?___aldiv:	
   735                           ; 2 bytes @ 0xD
   736                           
   737     002D                     Lcd_Port@a:	
   738                           ; 4 bytes @ 0xD
   739                           
   740     002D                     USART_Write@data:	
   741                           ; 1 bytes @ 0xD
   742                           
   743     002D                     memset@dest:	
   744                           ; 1 bytes @ 0xD
   745                           
   746     002D                     Buzzer_On@duration_ms:	
   747                           ; 1 bytes @ 0xD
   748                           
   749     002D                     ___wmul@multiplier:	
   750                           ; 2 bytes @ 0xD
   751                           
   752     002D                     ___aldiv@divisor:	
   753                           ; 2 bytes @ 0xD
   754                           
   755     002D                     ??_Keypad_Get_Char:	
   756                           ; 4 bytes @ 0xD
   757                           
   758                           
   759                           ; 1 bytes @ 0xD
   760     002D                     	ds	1
   761     002E                     ?_enviarInformacion:
   762     002E                     enviarInformacion@renglon:	
   763                           ; 1 bytes @ 0xE
   764                           
   765     002E                     memset@c:	
   766                           ; 2 bytes @ 0xE
   767                           
   768     002E                     ??_Lcd_Write_Char:	
   769                           ; 2 bytes @ 0xE
   770                           
   771     002E                     ??_Lcd_Cmd:	
   772                           ; 1 bytes @ 0xE
   773                           
   774                           
   775                           ; 1 bytes @ 0xE
   776     002E                     	ds	1
   777     002F                     Lcd_Write_Char@temp:
   778     002F                     ___wmul@multiplicand:	
   779                           ; 1 bytes @ 0xF
   780                           
   781     002F                     ??_Buzzer_On:	
   782                           ; 2 bytes @ 0xF
   783                           
   784                           
   785                           ; 1 bytes @ 0xF
   786     002F                     	ds	1
   787     0030                     Lcd_Cmd@a:
   788     0030                     Lcd_Write_Char@y:	
   789                           ; 1 bytes @ 0x10
   790                           
   791     0030                     enviarInformacion@columna:	
   792                           ; 1 bytes @ 0x10
   793                           
   794     0030                     memset@n:	
   795                           ; 2 bytes @ 0x10
   796                           
   797                           
   798                           ; 2 bytes @ 0x10
   799     0030                     	ds	1
   800     0031                     ?_Lcd_Set_Cursor:
   801     0031                     Lcd_Set_Cursor@b:	
   802                           ; 1 bytes @ 0x11
   803                           
   804     0031                     Lcd_Write_Char@a:	
   805                           ; 1 bytes @ 0x11
   806                           
   807     0031                     ___wmul@product:	
   808                           ; 1 bytes @ 0x11
   809                           
   810     0031                     ___aldiv@dividend:	
   811                           ; 2 bytes @ 0x11
   812                           
   813     0031                     ??_Lcd_Init:	
   814                           ; 4 bytes @ 0x11
   815                           
   816                           
   817                           ; 1 bytes @ 0x11
   818     0031                     	ds	1
   819     0032                     enviarInformacion@caracter:
   820     0032                     memset@p:	
   821                           ; 1 bytes @ 0x12
   822                           
   823     0032                     ??_Lcd_Set_Cursor:	
   824                           ; 1 bytes @ 0x12
   825                           
   826                           
   827                           ; 1 bytes @ 0x12
   828     0032                     	ds	1
   829     0033                     ?_atoi:
   830     0033                     Lcd_Set_Cursor@a:	
   831                           ; 2 bytes @ 0x13
   832                           
   833     0033                     atoi@s:	
   834                           ; 1 bytes @ 0x13
   835                           
   836                           
   837                           ; 1 bytes @ 0x13
   838     0033                     	ds	1
   839     0034                     Lcd_Set_Cursor@z:
   840                           
   841                           ; 1 bytes @ 0x14
   842     0034                     	ds	1
   843     0035                     Lcd_Set_Cursor@y:
   844     0035                     ??_atoi:	
   845                           ; 1 bytes @ 0x15
   846                           
   847     0035                     ??___aldiv:	
   848                           ; 1 bytes @ 0x15
   849                           
   850                           
   851                           ; 1 bytes @ 0x15
   852     0035                     	ds	1
   853     0036                     Lcd_Set_Cursor@temp:
   854     0036                     ___aldiv@counter:	
   855                           ; 1 bytes @ 0x16
   856                           
   857                           
   858                           ; 1 bytes @ 0x16
   859     0036                     	ds	1
   860     0037                     ?_Lcd_Delete_Char:
   861     0037                     ___aldiv@sign:	
   862                           ; 1 bytes @ 0x17
   863                           
   864     0037                     atoi@neg:	
   865                           ; 1 bytes @ 0x17
   866                           
   867     0037                     Lcd_Delete_Char@renglon:	
   868                           ; 1 bytes @ 0x17
   869                           
   870                           
   871                           ; 2 bytes @ 0x17
   872     0037                     	ds	1
   873     0038                     atoi@n:
   874     0038                     ___aldiv@quotient:	
   875                           ; 2 bytes @ 0x18
   876                           
   877                           
   878                           ; 4 bytes @ 0x18
   879     0038                     	ds	1
   880     0039                     Lcd_Delete_Char@columna:
   881                           
   882                           ; 2 bytes @ 0x19
   883     0039                     	ds	3
   884     003C                     ?_USART_Init:
   885     003C                     USART_Init@baud:	
   886                           ; 1 bytes @ 0x1C
   887                           
   888                           
   889                           ; 4 bytes @ 0x1C
   890     003C                     	ds	4
   891     0040                     ??_USART_Init:
   892                           
   893                           ; 1 bytes @ 0x20
   894     0040                     	ds	4
   895     0044                     main@caracter_asc:
   896                           
   897                           ; 4 bytes @ 0x24
   898     0044                     	ds	4
   899     0048                     main@CaracterEnAsc:
   900                           
   901                           ; 2 bytes @ 0x28
   902     0048                     	ds	2
   903     004A                     main@tecla:
   904                           
   905                           ; 1 bytes @ 0x2A
   906     004A                     	ds	1
   907     004B                     main@CaracteresEscritos:
   908                           
   909                           ; 2 bytes @ 0x2B
   910     004B                     	ds	2
   911     004D                     main@caracter:
   912                           
   913                           ; 1 bytes @ 0x2D
   914     004D                     	ds	1
   915                           
   916                           	psect	maintext
   917     0026                     __pmaintext:	
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 28 in file "Practica-3-main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  caracter_asc    4   36[BANK0 ] unsigned char [4]
   928 ;;  CaracteresEs    2   43[BANK0 ] int 
   929 ;;  CaracterEnAs    2   40[BANK0 ] int 
   930 ;;  caracter        1   45[BANK0 ] unsigned char 
   931 ;;  tecla           1   42[BANK0 ] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : B00/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1
   941 ;;      Params:         0       0       0
   942 ;;      Locals:         0      10       0
   943 ;;      Temps:          0       0       0
   944 ;;      Totals:         0      10       0
   945 ;;Total ram usage:       10 bytes
   946 ;; Hardware stack levels required when called: 8
   947 ;; This function calls:
   948 ;;		_Buzzer_On
   949 ;;		_Keypad_Get_Char
   950 ;;		_Keypad_Init
   951 ;;		_Lcd_Blink
   952 ;;		_Lcd_Delete_Char
   953 ;;		_Lcd_Init
   954 ;;		_Lcd_Set_Cursor
   955 ;;		_Lcd_Write_Char
   956 ;;		_USART_Init
   957 ;;		_atoi
   958 ;;		_enviarInformacion
   959 ;;		_memset
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965     0026                     _main:	
   966                           ;psect for function _main
   967                           
   968     0026                     l1969:	
   969                           ;incstack = 0
   970 ;; using string table level
   971                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   972                           
   973                           
   974                           ;Practica-3-main.c: 30:  ADCON1bits.PCFG = 0x0F;
   975     0026  300F               	movlw	15
   976     0027  1683               	bsf	3,5	;RP0=1, select bank1
   977     0028  1303               	bcf	3,6	;RP1=0, select bank1
   978     0029  049F               	iorwf	31,f	;volatile
   979     002A                     l1971:
   980                           
   981                           ;Practica-3-main.c: 31:     Keypad_Init();
   982     002A  118A  27F9  118A   	fcall	_Keypad_Init
   983     002D                     l1973:
   984                           
   985                           ;Practica-3-main.c: 32:     Lcd_Init();
   986     002D  158A  27A8  118A   	fcall	_Lcd_Init
   987     0030                     l1975:
   988                           
   989                           ;Practica-3-main.c: 33:     Lcd_Blink();
   990     0030  158A  25C5  118A   	fcall	_Lcd_Blink
   991     0033                     l1977:
   992                           
   993                           ;Practica-3-main.c: 34:     TRISAbits.TRISA4=0;
   994     0033  1683               	bsf	3,5	;RP0=1, select bank1
   995     0034  1303               	bcf	3,6	;RP1=0, select bank1
   996     0035  1205               	bcf	5,4	;volatile
   997     0036                     l1979:
   998                           
   999                           ;Practica-3-main.c: 35:     PORTAbits.RA4=1;
  1000     0036  1283               	bcf	3,5	;RP0=0, select bank0
  1001     0037  1303               	bcf	3,6	;RP1=0, select bank0
  1002     0038  1605               	bsf	5,4	;volatile
  1003     0039                     l1981:
  1004                           
  1005                           ;Practica-3-main.c: 37:  int CaracteresEscritos=0;
  1006     0039  01CB               	clrf	main@CaracteresEscritos
  1007     003A  01CC               	clrf	main@CaracteresEscritos+1
  1008     003B                     l1983:
  1009     003B                     l1985:
  1010                           
  1011                           ;Practica-3-main.c: 40:  char caracter_asc[4];;Practica-3-main.c: 41:  char caracter;;Pr
      +                          actica-3-main.c: 43:  char tecla;;Practica-3-main.c: 44:  Lcd_Set_Cursor(renglon,columna
      +                          );
  1012     003B  0852               	movf	_columna,w
  1013     003C  00B1               	movwf	Lcd_Set_Cursor@b
  1014     003D  0854               	movf	_renglon,w
  1015     003E  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1016     0041                     l1987:
  1017                           
  1018                           ;Practica-3-main.c: 46:     USART_Init(9600);
  1019     0041  3000               	movlw	0
  1020     0042  1283               	bcf	3,5	;RP0=0, select bank0
  1021     0043  1303               	bcf	3,6	;RP1=0, select bank0
  1022     0044  00BF               	movwf	USART_Init@baud+3
  1023     0045  3000               	movlw	0
  1024     0046  00BE               	movwf	USART_Init@baud+2
  1025     0047  3025               	movlw	37
  1026     0048  00BD               	movwf	USART_Init@baud+1
  1027     0049  3080               	movlw	128
  1028     004A  00BC               	movwf	USART_Init@baud
  1029     004B  158A  272F  118A   	fcall	_USART_Init
  1030     004E                     l1989:
  1031                           
  1032                           ;Practica-3-main.c: 47:     RCIE = 1;
  1033     004E  1683               	bsf	3,5	;RP0=1, select bank1
  1034     004F  1303               	bcf	3,6	;RP1=0, select bank1
  1035     0050  168C               	bsf	12,5	;volatile
  1036     0051                     l1991:
  1037                           
  1038                           ;Practica-3-main.c: 48:     PEIE = 1;
  1039     0051  170B               	bsf	11,6	;volatile
  1040     0052                     l1993:
  1041                           
  1042                           ;Practica-3-main.c: 49:     GIE = 1;
  1043     0052  178B               	bsf	11,7	;volatile
  1044     0053                     l47:	
  1045                           ;Practica-3-main.c: 51:  while(1)
  1046                           
  1047                           
  1048                           ;Practica-3-main.c: 52:     {;Practica-3-main.c: 53:   tecla = Keypad_Get_Char();
  1049     0053  118A  2300  118A   	fcall	_Keypad_Get_Char
  1050     0056  1283               	bcf	3,5	;RP0=0, select bank0
  1051     0057  1303               	bcf	3,6	;RP1=0, select bank0
  1052     0058  00CA               	movwf	main@tecla
  1053     0059                     l1995:
  1054                           
  1055                           ;Practica-3-main.c: 54:   if(tecla != 0)
  1056     0059  084A               	movf	main@tecla,w
  1057     005A  1903               	btfsc	3,2
  1058     005B  285D               	goto	u1871
  1059     005C  285E               	goto	u1870
  1060     005D                     u1871:
  1061     005D  2853               	goto	l47
  1062     005E                     u1870:
  1063     005E  2AE9               	goto	l2173
  1064     005F                     l1999:
  1065                           
  1066                           ;Practica-3-main.c: 59:                     Buzzer_On(50);
  1067     005F  3032               	movlw	50
  1068     0060  00AD               	movwf	Buzzer_On@duration_ms
  1069     0061  3000               	movlw	0
  1070     0062  00AE               	movwf	Buzzer_On@duration_ms+1
  1071     0063  158A  263B  118A   	fcall	_Buzzer_On
  1072     0066                     l2001:
  1073                           
  1074                           ;Practica-3-main.c: 60:      if(renglon==1){
  1075     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1076     0067  1303               	bcf	3,6	;RP1=0, select bank0
  1077     0068  0354               	decf	_renglon,w
  1078     0069  0455               	iorwf	_renglon+1,w
  1079     006A  1D03               	btfss	3,2
  1080     006B  286D               	goto	u1881
  1081     006C  286E               	goto	u1880
  1082     006D                     u1881:
  1083     006D  2882               	goto	l2009
  1084     006E                     u1880:
  1085     006E                     l2003:
  1086                           
  1087                           ;Practica-3-main.c: 61:                         Buzzer_On(50);
  1088     006E  3032               	movlw	50
  1089     006F  00AD               	movwf	Buzzer_On@duration_ms
  1090     0070  3000               	movlw	0
  1091     0071  00AE               	movwf	Buzzer_On@duration_ms+1
  1092     0072  158A  263B  118A   	fcall	_Buzzer_On
  1093     0075                     l2005:
  1094                           
  1095                           ;Practica-3-main.c: 62:       renglon=2;
  1096     0075  3002               	movlw	2
  1097     0076  1283               	bcf	3,5	;RP0=0, select bank0
  1098     0077  1303               	bcf	3,6	;RP1=0, select bank0
  1099     0078  00D4               	movwf	_renglon
  1100     0079  3000               	movlw	0
  1101     007A  00D5               	movwf	_renglon+1
  1102     007B                     l2007:
  1103                           
  1104                           ;Practica-3-main.c: 63:       Lcd_Set_Cursor(renglon,columna);
  1105     007B  0852               	movf	_columna,w
  1106     007C  00B1               	movwf	Lcd_Set_Cursor@b
  1107     007D  0854               	movf	_renglon,w
  1108     007E  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1109                           
  1110                           ;Practica-3-main.c: 64:      }
  1111     0081  2853               	goto	l47
  1112     0082                     l2009:
  1113                           
  1114                           ;Practica-3-main.c: 66:      {;Practica-3-main.c: 67:       renglon=1;
  1115     0082  3001               	movlw	1
  1116     0083  00D4               	movwf	_renglon
  1117     0084  3000               	movlw	0
  1118     0085  00D5               	movwf	_renglon+1
  1119     0086                     l2011:
  1120                           
  1121                           ;Practica-3-main.c: 68:       Lcd_Set_Cursor(renglon,columna);
  1122     0086  0852               	movf	_columna,w
  1123     0087  00B1               	movwf	Lcd_Set_Cursor@b
  1124     0088  0854               	movf	_renglon,w
  1125     0089  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1126     008C  2853               	goto	l47
  1127     008D                     l2013:
  1128                           
  1129                           ;Practica-3-main.c: 72:                     if(renglon==2){
  1130     008D  3002               	movlw	2
  1131     008E  0654               	xorwf	_renglon,w
  1132     008F  0455               	iorwf	_renglon+1,w
  1133     0090  1D03               	btfss	3,2
  1134     0091  2893               	goto	u1891
  1135     0092  2894               	goto	u1890
  1136     0093                     u1891:
  1137     0093  28E9               	goto	l2033
  1138     0094                     u1890:
  1139     0094                     l2015:
  1140                           
  1141                           ;Practica-3-main.c: 73:                         if(columna > 1)
  1142     0094  0853               	movf	_columna+1,w
  1143     0095  3A80               	xorlw	128
  1144     0096  00FF               	movwf	btemp+1
  1145     0097  3080               	movlw	128
  1146     0098  027F               	subwf	btemp+1,w
  1147     0099  1D03               	skipz
  1148     009A  289D               	goto	u1905
  1149     009B  3002               	movlw	2
  1150     009C  0252               	subwf	_columna,w
  1151     009D                     u1905:
  1152     009D  1C03               	skipc
  1153     009E  28A0               	goto	u1901
  1154     009F  28A1               	goto	u1900
  1155     00A0                     u1901:
  1156     00A0  28D3               	goto	l2025
  1157     00A1                     u1900:
  1158     00A1                     l2017:
  1159                           
  1160                           ;Practica-3-main.c: 74:                         {;Practica-3-main.c: 75:                
      +                                       Lcd_Delete_Char(renglon, columna-1);
  1161     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1162     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1163     00A3  0855               	movf	_renglon+1,w
  1164     00A4  00B8               	movwf	Lcd_Delete_Char@renglon+1
  1165     00A5  0854               	movf	_renglon,w
  1166     00A6  00B7               	movwf	Lcd_Delete_Char@renglon
  1167     00A7  0852               	movf	_columna,w
  1168     00A8  3EFF               	addlw	255
  1169     00A9  00B9               	movwf	Lcd_Delete_Char@columna
  1170     00AA  0853               	movf	_columna+1,w
  1171     00AB  1803               	skipnc
  1172     00AC  3E01               	addlw	1
  1173     00AD  3EFF               	addlw	255
  1174     00AE  00BA               	movwf	Lcd_Delete_Char@columna+1
  1175     00AF  158A  25F4  118A   	fcall	_Lcd_Delete_Char
  1176     00B2                     l2019:
  1177                           
  1178                           ;Practica-3-main.c: 76:                             columna--;
  1179     00B2  30FF               	movlw	255
  1180     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1181     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1182     00B5  07D2               	addwf	_columna,f
  1183     00B6  1803               	skipnc
  1184     00B7  0AD3               	incf	_columna+1,f
  1185     00B8  30FF               	movlw	255
  1186     00B9  07D3               	addwf	_columna+1,f
  1187     00BA                     l2021:
  1188                           
  1189                           ;Practica-3-main.c: 77:                             enviarInformacion(renglon,columna,' 
      +                          ');
  1190     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1191     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1192     00BC  0855               	movf	_renglon+1,w
  1193     00BD  00AF               	movwf	enviarInformacion@renglon+1
  1194     00BE  0854               	movf	_renglon,w
  1195     00BF  00AE               	movwf	enviarInformacion@renglon
  1196     00C0  0853               	movf	_columna+1,w
  1197     00C1  00B1               	movwf	enviarInformacion@columna+1
  1198     00C2  0852               	movf	_columna,w
  1199     00C3  00B0               	movwf	enviarInformacion@columna
  1200     00C4  3020               	movlw	32
  1201     00C5  00B2               	movwf	enviarInformacion@caracter
  1202     00C6  158A  25E1  118A   	fcall	_enviarInformacion
  1203     00C9                     l2023:
  1204                           
  1205                           ;Practica-3-main.c: 78:                             Buzzer_On(50);
  1206     00C9  3032               	movlw	50
  1207     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1208     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1209     00CC  00AD               	movwf	Buzzer_On@duration_ms
  1210     00CD  3000               	movlw	0
  1211     00CE  00AE               	movwf	Buzzer_On@duration_ms+1
  1212     00CF  158A  263B  118A   	fcall	_Buzzer_On
  1213                           
  1214                           ;Practica-3-main.c: 79:                         }else{
  1215     00D2  2853               	goto	l47
  1216     00D3                     l2025:
  1217                           
  1218                           ;Practica-3-main.c: 80:                             renglon=1;
  1219     00D3  3001               	movlw	1
  1220     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1221     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1222     00D6  00D4               	movwf	_renglon
  1223     00D7  3000               	movlw	0
  1224     00D8  00D5               	movwf	_renglon+1
  1225                           
  1226                           ;Practica-3-main.c: 81:                             columna=16;
  1227     00D9  3010               	movlw	16
  1228     00DA  00D2               	movwf	_columna
  1229     00DB  3000               	movlw	0
  1230     00DC  00D3               	movwf	_columna+1
  1231     00DD                     l2027:
  1232                           
  1233                           ;Practica-3-main.c: 82:                             Lcd_Delete_Char(renglon, columna);
  1234     00DD  0855               	movf	_renglon+1,w
  1235     00DE  00B8               	movwf	Lcd_Delete_Char@renglon+1
  1236     00DF  0854               	movf	_renglon,w
  1237     00E0  00B7               	movwf	Lcd_Delete_Char@renglon
  1238     00E1  0853               	movf	_columna+1,w
  1239     00E2  00BA               	movwf	Lcd_Delete_Char@columna+1
  1240     00E3  0852               	movf	_columna,w
  1241     00E4  00B9               	movwf	Lcd_Delete_Char@columna
  1242     00E5  158A  25F4  118A   	fcall	_Lcd_Delete_Char
  1243     00E8  28BA               	goto	l2021
  1244     00E9                     l2033:
  1245                           
  1246                           ;Practica-3-main.c: 87:                         if(columna > 1)
  1247     00E9  0853               	movf	_columna+1,w
  1248     00EA  3A80               	xorlw	128
  1249     00EB  00FF               	movwf	btemp+1
  1250     00EC  3080               	movlw	128
  1251     00ED  027F               	subwf	btemp+1,w
  1252     00EE  1D03               	skipz
  1253     00EF  28F2               	goto	u1915
  1254     00F0  3002               	movlw	2
  1255     00F1  0252               	subwf	_columna,w
  1256     00F2                     u1915:
  1257     00F2  1C03               	skipc
  1258     00F3  28F5               	goto	u1911
  1259     00F4  28F6               	goto	u1910
  1260     00F5                     u1911:
  1261     00F5  28F7               	goto	l2043
  1262     00F6                     u1910:
  1263     00F6  28A1               	goto	l2017
  1264     00F7                     l2043:
  1265                           
  1266                           ;Practica-3-main.c: 94:                             renglon=2;
  1267     00F7  3002               	movlw	2
  1268     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1269     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1270     00FA  00D4               	movwf	_renglon
  1271     00FB  3000               	movlw	0
  1272     00FC  00D5               	movwf	_renglon+1
  1273                           
  1274                           ;Practica-3-main.c: 95:                             columna=16;
  1275     00FD  3010               	movlw	16
  1276     00FE  00D2               	movwf	_columna
  1277     00FF  3000               	movlw	0
  1278     0100  00D3               	movwf	_columna+1
  1279     0101  28DD               	goto	l2027
  1280     0102                     l2051:
  1281                           
  1282                           ;Practica-3-main.c: 103:      CaracteresEscritos=0;
  1283     0102  01CB               	clrf	main@CaracteresEscritos
  1284     0103  01CC               	clrf	main@CaracteresEscritos+1
  1285     0104                     l2053:
  1286                           
  1287                           ;Practica-3-main.c: 104:                     memset(caracter_asc, 0, sizeof(caracter_asc
      +                          ));
  1288     0104  3044               	movlw	(low (main@caracter_asc| 0))& (0+255)
  1289     0105  00AD               	movwf	memset@dest
  1290     0106  3000               	movlw	0
  1291     0107  00AE               	movwf	memset@c
  1292     0108  00AF               	movwf	memset@c+1
  1293     0109  3004               	movlw	4
  1294     010A  00B0               	movwf	memset@n
  1295     010B  3000               	movlw	0
  1296     010C  00B1               	movwf	memset@n+1
  1297     010D  118A  26E3  118A   	fcall	_memset
  1298     0110                     l2055:
  1299                           
  1300                           ;Practica-3-main.c: 105:                     Buzzer_On(250);
  1301     0110  30FA               	movlw	250
  1302     0111  1283               	bcf	3,5	;RP0=0, select bank0
  1303     0112  1303               	bcf	3,6	;RP1=0, select bank0
  1304     0113  00AD               	movwf	Buzzer_On@duration_ms
  1305     0114  3000               	movlw	0
  1306     0115  00AE               	movwf	Buzzer_On@duration_ms+1
  1307     0116  158A  263B  118A   	fcall	_Buzzer_On
  1308                           
  1309                           ;Practica-3-main.c: 106:      break;
  1310     0119  2853               	goto	l47
  1311     011A                     l2057:
  1312                           
  1313                           ;Practica-3-main.c: 108:       caracter_asc[3] = '\0';
  1314     011A  01C7               	clrf	main@caracter_asc+3
  1315     011B                     l2059:
  1316                           
  1317                           ;Practica-3-main.c: 110:                     CaracterEnAsc = atoi(caracter_asc);
  1318     011B  3044               	movlw	(low (main@caracter_asc| 0))& (0+255)
  1319     011C  00B3               	movwf	atoi@s
  1320     011D  118A  2786  118A   	fcall	_atoi
  1321     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1322     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1323     0122  0834               	movf	?_atoi+1,w
  1324     0123  00C9               	movwf	main@CaracterEnAsc+1
  1325     0124  0833               	movf	?_atoi,w
  1326     0125  00C8               	movwf	main@CaracterEnAsc
  1327     0126                     l2061:
  1328                           
  1329                           ;Practica-3-main.c: 113:                     if(CaracterEnAsc >= 32 && CaracterEnAsc < 1
      +                          27)
  1330     0126  0849               	movf	main@CaracterEnAsc+1,w
  1331     0127  3A80               	xorlw	128
  1332     0128  00FF               	movwf	btemp+1
  1333     0129  3080               	movlw	128
  1334     012A  027F               	subwf	btemp+1,w
  1335     012B  1D03               	skipz
  1336     012C  292F               	goto	u1925
  1337     012D  3020               	movlw	32
  1338     012E  0248               	subwf	main@CaracterEnAsc,w
  1339     012F                     u1925:
  1340     012F  1C03               	skipc
  1341     0130  2932               	goto	u1921
  1342     0131  2933               	goto	u1920
  1343     0132                     u1921:
  1344     0132  2A05               	goto	l2115
  1345     0133                     u1920:
  1346     0133                     l2063:
  1347     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1348     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1349     0135  0849               	movf	main@CaracterEnAsc+1,w
  1350     0136  3A80               	xorlw	128
  1351     0137  00FF               	movwf	btemp+1
  1352     0138  3080               	movlw	128
  1353     0139  027F               	subwf	btemp+1,w
  1354     013A  1D03               	skipz
  1355     013B  293E               	goto	u1935
  1356     013C  307F               	movlw	127
  1357     013D  0248               	subwf	main@CaracterEnAsc,w
  1358     013E                     u1935:
  1359     013E  1803               	skipnc
  1360     013F  2941               	goto	u1931
  1361     0140  2942               	goto	u1930
  1362     0141                     u1931:
  1363     0141  2A05               	goto	l2115
  1364     0142                     u1930:
  1365     0142                     l2065:
  1366                           
  1367                           ;Practica-3-main.c: 114:                     {;Practica-3-main.c: 115:                  
      +                                 Buzzer_On(200);
  1368     0142  30C8               	movlw	200
  1369     0143  1283               	bcf	3,5	;RP0=0, select bank0
  1370     0144  1303               	bcf	3,6	;RP1=0, select bank0
  1371     0145  00AD               	movwf	Buzzer_On@duration_ms
  1372     0146  3000               	movlw	0
  1373     0147  00AE               	movwf	Buzzer_On@duration_ms+1
  1374     0148  158A  263B  118A   	fcall	_Buzzer_On
  1375     014B                     l2067:
  1376                           
  1377                           ;Practica-3-main.c: 116:                         caracter = ASCII_CHARS[CaracterEnAsc];
  1378     014B  1283               	bcf	3,5	;RP0=0, select bank0
  1379     014C  1303               	bcf	3,6	;RP1=0, select bank0
  1380     014D  0848               	movf	main@CaracterEnAsc,w
  1381     014E  3E01               	addlw	low ((_ASCII_CHARS-__stringbase)| (0+32768))
  1382     014F  0084               	movwf	4
  1383     0150  118A  2700  118A   	fcall	stringdir
  1384     0153  00CD               	movwf	main@caracter
  1385     0154                     l2069:
  1386                           
  1387                           ;Practica-3-main.c: 117:                         if(renglon==2){
  1388     0154  3002               	movlw	2
  1389     0155  0654               	xorwf	_renglon,w
  1390     0156  0455               	iorwf	_renglon+1,w
  1391     0157  1D03               	btfss	3,2
  1392     0158  295A               	goto	u1941
  1393     0159  295B               	goto	u1940
  1394     015A                     u1941:
  1395     015A  29B8               	goto	l2093
  1396     015B                     u1940:
  1397     015B                     l2071:
  1398                           
  1399                           ;Practica-3-main.c: 118:                             if(columna==16){
  1400     015B  3010               	movlw	16
  1401     015C  0652               	xorwf	_columna,w
  1402     015D  0453               	iorwf	_columna+1,w
  1403     015E  1D03               	btfss	3,2
  1404     015F  2961               	goto	u1951
  1405     0160  2962               	goto	u1950
  1406     0161                     u1951:
  1407     0161  2996               	goto	l2083
  1408     0162                     u1950:
  1409     0162                     l2073:
  1410                           
  1411                           ;Practica-3-main.c: 119:                                 Lcd_Write_Char(caracter);
  1412     0162  084D               	movf	main@caracter,w
  1413     0163  158A  26F8  118A   	fcall	_Lcd_Write_Char
  1414                           
  1415                           ;Practica-3-main.c: 120:                                 enviarInformacion(renglon,colum
      +                          na,caracter);
  1416     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1417     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1418     0168  0855               	movf	_renglon+1,w
  1419     0169  00AF               	movwf	enviarInformacion@renglon+1
  1420     016A  0854               	movf	_renglon,w
  1421     016B  00AE               	movwf	enviarInformacion@renglon
  1422     016C  0853               	movf	_columna+1,w
  1423     016D  00B1               	movwf	enviarInformacion@columna+1
  1424     016E  0852               	movf	_columna,w
  1425     016F  00B0               	movwf	enviarInformacion@columna
  1426     0170  084D               	movf	main@caracter,w
  1427     0171  00B2               	movwf	enviarInformacion@caracter
  1428     0172  158A  25E1  118A   	fcall	_enviarInformacion
  1429     0175                     l2075:
  1430                           
  1431                           ;Practica-3-main.c: 121:                                 renglon=1;
  1432     0175  3001               	movlw	1
  1433     0176  1283               	bcf	3,5	;RP0=0, select bank0
  1434     0177  1303               	bcf	3,6	;RP1=0, select bank0
  1435     0178  00D4               	movwf	_renglon
  1436     0179  3000               	movlw	0
  1437     017A  00D5               	movwf	_renglon+1
  1438     017B                     l2077:
  1439                           
  1440                           ;Practica-3-main.c: 122:                                 columna=1;
  1441     017B  3001               	movlw	1
  1442     017C  00D2               	movwf	_columna
  1443     017D  3000               	movlw	0
  1444     017E  00D3               	movwf	_columna+1
  1445                           
  1446                           ;Practica-3-main.c: 123:                                 Lcd_Set_Cursor(renglon,columna)
      +                          ;
  1447     017F  0852               	movf	_columna,w
  1448     0180  00B1               	movwf	Lcd_Set_Cursor@b
  1449     0181  0854               	movf	_renglon,w
  1450     0182  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1451     0185                     l2079:
  1452                           
  1453                           ;Practica-3-main.c: 124:                                 CaracteresEscritos=0;
  1454     0185  1283               	bcf	3,5	;RP0=0, select bank0
  1455     0186  1303               	bcf	3,6	;RP1=0, select bank0
  1456     0187  01CB               	clrf	main@CaracteresEscritos
  1457     0188  01CC               	clrf	main@CaracteresEscritos+1
  1458     0189                     l2081:
  1459                           
  1460                           ;Practica-3-main.c: 125:                                 memset(caracter_asc, 0, sizeof(
      +                          caracter_asc));
  1461     0189  3044               	movlw	(low (main@caracter_asc| 0))& (0+255)
  1462     018A  00AD               	movwf	memset@dest
  1463     018B  3000               	movlw	0
  1464     018C  00AE               	movwf	memset@c
  1465     018D  00AF               	movwf	memset@c+1
  1466     018E  3004               	movlw	4
  1467     018F  00B0               	movwf	memset@n
  1468     0190  3000               	movlw	0
  1469     0191  00B1               	movwf	memset@n+1
  1470     0192  118A  26E3  118A   	fcall	_memset
  1471                           
  1472                           ;Practica-3-main.c: 126:                             }else{
  1473     0195  2853               	goto	l47
  1474     0196                     l2083:
  1475                           
  1476                           ;Practica-3-main.c: 127:                                 Lcd_Write_Char(caracter);
  1477     0196  084D               	movf	main@caracter,w
  1478     0197  158A  26F8  118A   	fcall	_Lcd_Write_Char
  1479                           
  1480                           ;Practica-3-main.c: 128:                                 enviarInformacion(renglon,colum
      +                          na,caracter);
  1481     019A  1283               	bcf	3,5	;RP0=0, select bank0
  1482     019B  1303               	bcf	3,6	;RP1=0, select bank0
  1483     019C  0855               	movf	_renglon+1,w
  1484     019D  00AF               	movwf	enviarInformacion@renglon+1
  1485     019E  0854               	movf	_renglon,w
  1486     019F  00AE               	movwf	enviarInformacion@renglon
  1487     01A0  0853               	movf	_columna+1,w
  1488     01A1  00B1               	movwf	enviarInformacion@columna+1
  1489     01A2  0852               	movf	_columna,w
  1490     01A3  00B0               	movwf	enviarInformacion@columna
  1491     01A4  084D               	movf	main@caracter,w
  1492     01A5  00B2               	movwf	enviarInformacion@caracter
  1493     01A6  158A  25E1  118A   	fcall	_enviarInformacion
  1494     01A9                     l2085:
  1495                           
  1496                           ;Practica-3-main.c: 129:                                 columna++;
  1497     01A9  3001               	movlw	1
  1498     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1499     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1500     01AC  07D2               	addwf	_columna,f
  1501     01AD  1803               	skipnc
  1502     01AE  0AD3               	incf	_columna+1,f
  1503     01AF  3000               	movlw	0
  1504     01B0  07D3               	addwf	_columna+1,f
  1505     01B1                     l2087:
  1506                           
  1507                           ;Practica-3-main.c: 130:                                 Lcd_Set_Cursor(renglon,columna)
      +                          ;
  1508     01B1  0852               	movf	_columna,w
  1509     01B2  00B1               	movwf	Lcd_Set_Cursor@b
  1510     01B3  0854               	movf	_renglon,w
  1511     01B4  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1512     01B7  2985               	goto	l2079
  1513     01B8                     l2093:
  1514                           
  1515                           ;Practica-3-main.c: 135:                             if(columna==16)
  1516     01B8  3010               	movlw	16
  1517     01B9  0652               	xorwf	_columna,w
  1518     01BA  0453               	iorwf	_columna+1,w
  1519     01BB  1D03               	btfss	3,2
  1520     01BC  29BE               	goto	u1961
  1521     01BD  29BF               	goto	u1960
  1522     01BE                     u1961:
  1523     01BE  29E3               	goto	l2105
  1524     01BF                     u1960:
  1525     01BF                     l2095:
  1526                           
  1527                           ;Practica-3-main.c: 136:                             {;Practica-3-main.c: 137:          
      +                                                 Lcd_Write_Char(caracter);
  1528     01BF  084D               	movf	main@caracter,w
  1529     01C0  158A  26F8  118A   	fcall	_Lcd_Write_Char
  1530                           
  1531                           ;Practica-3-main.c: 138:                                 enviarInformacion(renglon,colum
      +                          na,caracter);
  1532     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1533     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1534     01C5  0855               	movf	_renglon+1,w
  1535     01C6  00AF               	movwf	enviarInformacion@renglon+1
  1536     01C7  0854               	movf	_renglon,w
  1537     01C8  00AE               	movwf	enviarInformacion@renglon
  1538     01C9  0853               	movf	_columna+1,w
  1539     01CA  00B1               	movwf	enviarInformacion@columna+1
  1540     01CB  0852               	movf	_columna,w
  1541     01CC  00B0               	movwf	enviarInformacion@columna
  1542     01CD  084D               	movf	main@caracter,w
  1543     01CE  00B2               	movwf	enviarInformacion@caracter
  1544     01CF  158A  25E1  118A   	fcall	_enviarInformacion
  1545     01D2                     l2097:
  1546                           
  1547                           ;Practica-3-main.c: 139:                                 renglon=2;
  1548     01D2  3002               	movlw	2
  1549     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1550     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1551     01D5  00D4               	movwf	_renglon
  1552     01D6  3000               	movlw	0
  1553     01D7  00D5               	movwf	_renglon+1
  1554     01D8                     l2099:
  1555                           
  1556                           ;Practica-3-main.c: 140:                                 columna=1;
  1557     01D8  3001               	movlw	1
  1558     01D9  00D2               	movwf	_columna
  1559     01DA  3000               	movlw	0
  1560     01DB  00D3               	movwf	_columna+1
  1561                           
  1562                           ;Practica-3-main.c: 141:                                 Lcd_Set_Cursor(renglon,columna)
      +                          ;
  1563     01DC  0852               	movf	_columna,w
  1564     01DD  00B1               	movwf	Lcd_Set_Cursor@b
  1565     01DE  0854               	movf	_renglon,w
  1566     01DF  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1567     01E2  2985               	goto	l2079
  1568     01E3                     l2105:
  1569                           
  1570                           ;Practica-3-main.c: 145:                                 Lcd_Write_Char(caracter);
  1571     01E3  084D               	movf	main@caracter,w
  1572     01E4  158A  26F8  118A   	fcall	_Lcd_Write_Char
  1573                           
  1574                           ;Practica-3-main.c: 146:                                 enviarInformacion(renglon,colum
      +                          na,caracter);
  1575     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1576     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1577     01E9  0855               	movf	_renglon+1,w
  1578     01EA  00AF               	movwf	enviarInformacion@renglon+1
  1579     01EB  0854               	movf	_renglon,w
  1580     01EC  00AE               	movwf	enviarInformacion@renglon
  1581     01ED  0853               	movf	_columna+1,w
  1582     01EE  00B1               	movwf	enviarInformacion@columna+1
  1583     01EF  0852               	movf	_columna,w
  1584     01F0  00B0               	movwf	enviarInformacion@columna
  1585     01F1  084D               	movf	main@caracter,w
  1586     01F2  00B2               	movwf	enviarInformacion@caracter
  1587     01F3  158A  25E1  118A   	fcall	_enviarInformacion
  1588     01F6                     l2107:
  1589                           
  1590                           ;Practica-3-main.c: 147:                                 columna++;
  1591     01F6  3001               	movlw	1
  1592     01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1593     01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1594     01F9  07D2               	addwf	_columna,f
  1595     01FA  1803               	skipnc
  1596     01FB  0AD3               	incf	_columna+1,f
  1597     01FC  3000               	movlw	0
  1598     01FD  07D3               	addwf	_columna+1,f
  1599     01FE                     l2109:
  1600                           
  1601                           ;Practica-3-main.c: 148:                                 Lcd_Set_Cursor(renglon,columna)
      +                          ;
  1602     01FE  0852               	movf	_columna,w
  1603     01FF  00B1               	movwf	Lcd_Set_Cursor@b
  1604     0200  0854               	movf	_renglon,w
  1605     0201  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1606     0204  2985               	goto	l2079
  1607     0205                     l2115:
  1608                           
  1609                           ;Practica-3-main.c: 155:                     {;Practica-3-main.c: 156:                  
      +                                 Buzzer_On(700);
  1610     0205  30BC               	movlw	188
  1611     0206  1283               	bcf	3,5	;RP0=0, select bank0
  1612     0207  1303               	bcf	3,6	;RP1=0, select bank0
  1613     0208  00AD               	movwf	Buzzer_On@duration_ms
  1614     0209  3002               	movlw	2
  1615     020A  00AE               	movwf	Buzzer_On@duration_ms+1
  1616     020B  158A  263B  118A   	fcall	_Buzzer_On
  1617     020E  2985               	goto	l2079
  1618     020F                     l2121:
  1619                           
  1620                           ;Practica-3-main.c: 162:                     Buzzer_On(50);
  1621     020F  3032               	movlw	50
  1622     0210  00AD               	movwf	Buzzer_On@duration_ms
  1623     0211  3000               	movlw	0
  1624     0212  00AE               	movwf	Buzzer_On@duration_ms+1
  1625     0213  158A  263B  118A   	fcall	_Buzzer_On
  1626     0216                     l2123:
  1627                           
  1628                           ;Practica-3-main.c: 163:      if(renglon==2){
  1629     0216  3002               	movlw	2
  1630     0217  1283               	bcf	3,5	;RP0=0, select bank0
  1631     0218  1303               	bcf	3,6	;RP1=0, select bank0
  1632     0219  0654               	xorwf	_renglon,w
  1633     021A  0455               	iorwf	_renglon+1,w
  1634     021B  1D03               	btfss	3,2
  1635     021C  2A1E               	goto	u1971
  1636     021D  2A1F               	goto	u1970
  1637     021E                     u1971:
  1638     021E  2A4E               	goto	l2135
  1639     021F                     u1970:
  1640     021F                     l2125:
  1641                           
  1642                           ;Practica-3-main.c: 164:                         if(columna > 1)
  1643     021F  0853               	movf	_columna+1,w
  1644     0220  3A80               	xorlw	128
  1645     0221  00FF               	movwf	btemp+1
  1646     0222  3080               	movlw	128
  1647     0223  027F               	subwf	btemp+1,w
  1648     0224  1D03               	skipz
  1649     0225  2A28               	goto	u1985
  1650     0226  3002               	movlw	2
  1651     0227  0252               	subwf	_columna,w
  1652     0228                     u1985:
  1653     0228  1C03               	skipc
  1654     0229  2A2B               	goto	u1981
  1655     022A  2A2C               	goto	u1980
  1656     022B                     u1981:
  1657     022B  2A3B               	goto	l2131
  1658     022C                     u1980:
  1659     022C                     l2127:
  1660                           
  1661                           ;Practica-3-main.c: 165:                         {;Practica-3-main.c: 166:              
      +                                         columna--;
  1662     022C  30FF               	movlw	255
  1663     022D  1283               	bcf	3,5	;RP0=0, select bank0
  1664     022E  1303               	bcf	3,6	;RP1=0, select bank0
  1665     022F  07D2               	addwf	_columna,f
  1666     0230  1803               	skipnc
  1667     0231  0AD3               	incf	_columna+1,f
  1668     0232  30FF               	movlw	255
  1669     0233  07D3               	addwf	_columna+1,f
  1670     0234                     l2129:
  1671                           
  1672                           ;Practica-3-main.c: 167:                             Lcd_Set_Cursor(renglon,columna);
  1673     0234  0852               	movf	_columna,w
  1674     0235  00B1               	movwf	Lcd_Set_Cursor@b
  1675     0236  0854               	movf	_renglon,w
  1676     0237  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1677                           
  1678                           ;Practica-3-main.c: 168:                         }else{
  1679     023A  2853               	goto	l47
  1680     023B                     l2131:
  1681                           
  1682                           ;Practica-3-main.c: 169:                             renglon--;
  1683     023B  30FF               	movlw	255
  1684     023C  1283               	bcf	3,5	;RP0=0, select bank0
  1685     023D  1303               	bcf	3,6	;RP1=0, select bank0
  1686     023E  07D4               	addwf	_renglon,f
  1687     023F  1803               	skipnc
  1688     0240  0AD5               	incf	_renglon+1,f
  1689     0241  30FF               	movlw	255
  1690     0242  07D5               	addwf	_renglon+1,f
  1691                           
  1692                           ;Practica-3-main.c: 170:                             columna=16;
  1693     0243  3010               	movlw	16
  1694     0244  00D2               	movwf	_columna
  1695     0245  3000               	movlw	0
  1696     0246  00D3               	movwf	_columna+1
  1697     0247                     l2133:
  1698                           
  1699                           ;Practica-3-main.c: 171:                             Lcd_Set_Cursor(renglon,columna);
  1700     0247  0852               	movf	_columna,w
  1701     0248  00B1               	movwf	Lcd_Set_Cursor@b
  1702     0249  0854               	movf	_renglon,w
  1703     024A  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1704     024D  2853               	goto	l47
  1705     024E                     l2135:
  1706                           
  1707                           ;Practica-3-main.c: 174:                         if(columna > 1)
  1708     024E  0853               	movf	_columna+1,w
  1709     024F  3A80               	xorlw	128
  1710     0250  00FF               	movwf	btemp+1
  1711     0251  3080               	movlw	128
  1712     0252  027F               	subwf	btemp+1,w
  1713     0253  1D03               	skipz
  1714     0254  2A57               	goto	u1995
  1715     0255  3002               	movlw	2
  1716     0256  0252               	subwf	_columna,w
  1717     0257                     u1995:
  1718     0257  1C03               	skipc
  1719     0258  2A5A               	goto	u1991
  1720     0259  2A5B               	goto	u1990
  1721     025A                     u1991:
  1722     025A  2AFD               	goto	l48
  1723     025B                     u1990:
  1724     025B                     l2137:
  1725                           
  1726                           ;Practica-3-main.c: 175:                         {;Practica-3-main.c: 176:              
      +                                         columna--;
  1727     025B  30FF               	movlw	255
  1728     025C  1283               	bcf	3,5	;RP0=0, select bank0
  1729     025D  1303               	bcf	3,6	;RP1=0, select bank0
  1730     025E  07D2               	addwf	_columna,f
  1731     025F  1803               	skipnc
  1732     0260  0AD3               	incf	_columna+1,f
  1733     0261  30FF               	movlw	255
  1734     0262  07D3               	addwf	_columna+1,f
  1735     0263                     l2139:
  1736                           
  1737                           ;Practica-3-main.c: 177:                             Lcd_Set_Cursor(renglon,columna);
  1738     0263  0852               	movf	_columna,w
  1739     0264  00B1               	movwf	Lcd_Set_Cursor@b
  1740     0265  0854               	movf	_renglon,w
  1741     0266  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1742     0269  2853               	goto	l47
  1743     026A                     l2141:
  1744                           
  1745                           ;Practica-3-main.c: 182:                     Buzzer_On(50);
  1746     026A  3032               	movlw	50
  1747     026B  00AD               	movwf	Buzzer_On@duration_ms
  1748     026C  3000               	movlw	0
  1749     026D  00AE               	movwf	Buzzer_On@duration_ms+1
  1750     026E  158A  263B  118A   	fcall	_Buzzer_On
  1751     0271                     l2143:
  1752                           
  1753                           ;Practica-3-main.c: 183:      if(renglon==1){
  1754     0271  1283               	bcf	3,5	;RP0=0, select bank0
  1755     0272  1303               	bcf	3,6	;RP1=0, select bank0
  1756     0273  0354               	decf	_renglon,w
  1757     0274  0455               	iorwf	_renglon+1,w
  1758     0275  1D03               	btfss	3,2
  1759     0276  2A78               	goto	u2001
  1760     0277  2A79               	goto	u2000
  1761     0278                     u2001:
  1762     0278  2A9E               	goto	l2155
  1763     0279                     u2000:
  1764     0279                     l2145:
  1765                           
  1766                           ;Practica-3-main.c: 184:                         if(columna == 16)
  1767     0279  3010               	movlw	16
  1768     027A  0652               	xorwf	_columna,w
  1769     027B  0453               	iorwf	_columna+1,w
  1770     027C  1D03               	btfss	3,2
  1771     027D  2A7F               	goto	u2011
  1772     027E  2A80               	goto	u2010
  1773     027F                     u2011:
  1774     027F  2A91               	goto	l2151
  1775     0280                     u2010:
  1776     0280                     l2147:
  1777                           
  1778                           ;Practica-3-main.c: 185:                         {;Practica-3-main.c: 186:              
      +                                         renglon++;
  1779     0280  3001               	movlw	1
  1780     0281  07D4               	addwf	_renglon,f
  1781     0282  1803               	skipnc
  1782     0283  0AD5               	incf	_renglon+1,f
  1783     0284  3000               	movlw	0
  1784     0285  07D5               	addwf	_renglon+1,f
  1785                           
  1786                           ;Practica-3-main.c: 187:                             columna=1;
  1787     0286  3001               	movlw	1
  1788     0287  00D2               	movwf	_columna
  1789     0288  3000               	movlw	0
  1790     0289  00D3               	movwf	_columna+1
  1791     028A                     l2149:
  1792                           
  1793                           ;Practica-3-main.c: 188:                             Lcd_Set_Cursor(renglon,columna);
  1794     028A  0852               	movf	_columna,w
  1795     028B  00B1               	movwf	Lcd_Set_Cursor@b
  1796     028C  0854               	movf	_renglon,w
  1797     028D  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1798                           
  1799                           ;Practica-3-main.c: 189:                         }else{
  1800     0290  2853               	goto	l47
  1801     0291                     l2151:
  1802                           
  1803                           ;Practica-3-main.c: 190:                             columna++;
  1804     0291  3001               	movlw	1
  1805     0292  07D2               	addwf	_columna,f
  1806     0293  1803               	skipnc
  1807     0294  0AD3               	incf	_columna+1,f
  1808     0295  3000               	movlw	0
  1809     0296  07D3               	addwf	_columna+1,f
  1810     0297                     l2153:
  1811                           
  1812                           ;Practica-3-main.c: 191:                             Lcd_Set_Cursor(renglon,columna);
  1813     0297  0852               	movf	_columna,w
  1814     0298  00B1               	movwf	Lcd_Set_Cursor@b
  1815     0299  0854               	movf	_renglon,w
  1816     029A  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1817     029D  2853               	goto	l47
  1818     029E                     l2155:
  1819                           
  1820                           ;Practica-3-main.c: 194:                         if(columna < 16)
  1821     029E  0853               	movf	_columna+1,w
  1822     029F  3A80               	xorlw	128
  1823     02A0  00FF               	movwf	btemp+1
  1824     02A1  3080               	movlw	128
  1825     02A2  027F               	subwf	btemp+1,w
  1826     02A3  1D03               	skipz
  1827     02A4  2AA7               	goto	u2025
  1828     02A5  3010               	movlw	16
  1829     02A6  0252               	subwf	_columna,w
  1830     02A7                     u2025:
  1831     02A7  1803               	skipnc
  1832     02A8  2AAA               	goto	u2021
  1833     02A9  2AAB               	goto	u2020
  1834     02AA                     u2021:
  1835     02AA  2AFD               	goto	l48
  1836     02AB                     u2020:
  1837     02AB                     l2157:
  1838                           
  1839                           ;Practica-3-main.c: 195:                         {;Practica-3-main.c: 196:              
      +                                         columna++;
  1840     02AB  3001               	movlw	1
  1841     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1842     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1843     02AE  07D2               	addwf	_columna,f
  1844     02AF  1803               	skipnc
  1845     02B0  0AD3               	incf	_columna+1,f
  1846     02B1  3000               	movlw	0
  1847     02B2  07D3               	addwf	_columna+1,f
  1848     02B3                     l2159:
  1849                           
  1850                           ;Practica-3-main.c: 197:                             Lcd_Set_Cursor(renglon,columna);
  1851     02B3  0852               	movf	_columna,w
  1852     02B4  00B1               	movwf	Lcd_Set_Cursor@b
  1853     02B5  0854               	movf	_renglon,w
  1854     02B6  118A  25CD  118A   	fcall	_Lcd_Set_Cursor
  1855     02B9  2853               	goto	l47
  1856     02BA                     l2161:
  1857                           
  1858                           ;Practica-3-main.c: 202:      if(CaracteresEscritos>=3){
  1859     02BA  084C               	movf	main@CaracteresEscritos+1,w
  1860     02BB  3A80               	xorlw	128
  1861     02BC  00FF               	movwf	btemp+1
  1862     02BD  3080               	movlw	128
  1863     02BE  027F               	subwf	btemp+1,w
  1864     02BF  1D03               	skipz
  1865     02C0  2AC3               	goto	u2035
  1866     02C1  3003               	movlw	3
  1867     02C2  024B               	subwf	main@CaracteresEscritos,w
  1868     02C3                     u2035:
  1869     02C3  1C03               	skipc
  1870     02C4  2AC6               	goto	u2031
  1871     02C5  2AC7               	goto	u2030
  1872     02C6                     u2031:
  1873     02C6  2AD1               	goto	l2165
  1874     02C7                     u2030:
  1875     02C7                     l2163:
  1876                           
  1877                           ;Practica-3-main.c: 203:                         Buzzer_On(500);
  1878     02C7  30F4               	movlw	244
  1879     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1880     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1881     02CA  00AD               	movwf	Buzzer_On@duration_ms
  1882     02CB  3001               	movlw	1
  1883     02CC  00AE               	movwf	Buzzer_On@duration_ms+1
  1884     02CD  158A  263B  118A   	fcall	_Buzzer_On
  1885                           
  1886                           ;Practica-3-main.c: 204:                     }
  1887     02D0  2853               	goto	l47
  1888     02D1                     l2165:
  1889                           
  1890                           ;Practica-3-main.c: 206:                         Buzzer_On(50);
  1891     02D1  3032               	movlw	50
  1892     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1893     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1894     02D4  00AD               	movwf	Buzzer_On@duration_ms
  1895     02D5  3000               	movlw	0
  1896     02D6  00AE               	movwf	Buzzer_On@duration_ms+1
  1897     02D7  158A  263B  118A   	fcall	_Buzzer_On
  1898     02DA                     l2167:
  1899                           
  1900                           ;Practica-3-main.c: 207:                         caracter_asc[CaracteresEscritos]=tecla;
  1901     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1902     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1903     02DC  084B               	movf	main@CaracteresEscritos,w
  1904     02DD  3E44               	addlw	(low (main@caracter_asc| 0))& (0+255)
  1905     02DE  0084               	movwf	4
  1906     02DF  084A               	movf	main@tecla,w
  1907     02E0  1383               	bcf	3,7	;select IRP bank0
  1908     02E1  0080               	movwf	0
  1909     02E2                     l2169:
  1910                           
  1911                           ;Practica-3-main.c: 208:                         CaracteresEscritos++;
  1912     02E2  3001               	movlw	1
  1913     02E3  07CB               	addwf	main@CaracteresEscritos,f
  1914     02E4  1803               	skipnc
  1915     02E5  0ACC               	incf	main@CaracteresEscritos+1,f
  1916     02E6  3000               	movlw	0
  1917     02E7  07CC               	addwf	main@CaracteresEscritos+1,f
  1918     02E8  2853               	goto	l47
  1919     02E9                     l2173:
  1920     02E9  084A               	movf	main@tecla,w
  1921                           
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 6, Range of values is 35 to 68
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte           19    10 (average)
  1927                           ; direct_byte           78    10 (fixed)
  1928                           ; jumptable            263     9 (fixed)
  1929                           ;	Chosen strategy is simple_byte
  1930     02EA  3A23               	xorlw	35	; case 35
  1931     02EB  1903               	skipnz
  1932     02EC  2A6A               	goto	l2141
  1933     02ED  3A09               	xorlw	9	; case 42
  1934     02EE  1903               	skipnz
  1935     02EF  2A0F               	goto	l2121
  1936     02F0  3A6B               	xorlw	107	; case 65
  1937     02F1  1903               	skipnz
  1938     02F2  285F               	goto	l1999
  1939     02F3  3A03               	xorlw	3	; case 66
  1940     02F4  1903               	skipnz
  1941     02F5  288D               	goto	l2013
  1942     02F6  3A01               	xorlw	1	; case 67
  1943     02F7  1903               	skipnz
  1944     02F8  2902               	goto	l2051
  1945     02F9  3A07               	xorlw	7	; case 68
  1946     02FA  1903               	skipnz
  1947     02FB  291A               	goto	l2057
  1948     02FC  2ABA               	goto	l2161
  1949     02FD                     l48:	
  1950                           ;Practica-3-main.c: 212:   }
  1951                           
  1952     02FD  2853               	goto	l47
  1953     02FE  118A  280D         	ljmp	start
  1954     0300                     __end_of_main:
  1955                           
  1956                           	psect	text1
  1957     06E3                     __ptext1:	
  1958 ;; *************** function _memset *****************
  1959 ;; Defined at:
  1960 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  dest            1   13[BANK0 ] PTR void 
  1963 ;;		 -> main@caracter_asc(4), 
  1964 ;;  c               2   14[BANK0 ] int 
  1965 ;;  n               2   16[BANK0 ] unsigned int 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  p               1   18[BANK0 ] PTR unsigned char 
  1968 ;;		 -> main@caracter_asc(4), 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1   13[BANK0 ] PTR void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1
  1978 ;;      Params:         0       5       0
  1979 ;;      Locals:         0       1       0
  1980 ;;      Temps:          0       0       0
  1981 ;;      Totals:         0       6       0
  1982 ;;Total ram usage:        6 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 4
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992     06E3                     _memset:	
  1993                           ;psect for function _memset
  1994                           
  1995     06E3                     l1857:	
  1996                           ;incstack = 0
  1997                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  1998                           
  1999     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  2000     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  2001     06E5  082D               	movf	memset@dest,w
  2002     06E6  00B2               	movwf	memset@p
  2003     06E7  2EEF               	goto	l1863
  2004     06E8                     l1859:
  2005     06E8  0832               	movf	memset@p,w
  2006     06E9  0084               	movwf	4
  2007     06EA  082E               	movf	memset@c,w
  2008     06EB  1383               	bcf	3,7	;select IRP bank0
  2009     06EC  0080               	movwf	0
  2010     06ED                     l1861:
  2011     06ED  3001               	movlw	1
  2012     06EE  07B2               	addwf	memset@p,f
  2013     06EF                     l1863:
  2014     06EF  3001               	movlw	1
  2015     06F0  02B0               	subwf	memset@n,f
  2016     06F1  3000               	movlw	0
  2017     06F2  1C03               	skipc
  2018     06F3  03B1               	decf	memset@n+1,f
  2019     06F4  02B1               	subwf	memset@n+1,f
  2020     06F5  0A30               	incf	memset@n,w
  2021     06F6  1D03               	skipz
  2022     06F7  2EFC               	goto	u1711
  2023     06F8  0A31               	incf	memset@n+1,w
  2024     06F9  1D03               	btfss	3,2
  2025     06FA  2EFC               	goto	u1711
  2026     06FB  2EFD               	goto	u1710
  2027     06FC                     u1711:
  2028     06FC  2EE8               	goto	l1859
  2029     06FD                     u1710:
  2030     06FD                     l871:
  2031     06FD  0008               	return
  2032     06FE                     __end_of_memset:
  2033                           
  2034                           	psect	text2
  2035     0DE1                     __ptext2:	
  2036 ;; *************** function _enviarInformacion *****************
  2037 ;; Defined at:
  2038 ;;		line 58 in file "funciones.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  renglon         2   14[BANK0 ] int 
  2041 ;;  columna         2   16[BANK0 ] int 
  2042 ;;  caracter        1   18[BANK0 ] unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0, pclath, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1
  2054 ;;      Params:         0       5       0
  2055 ;;      Locals:         0       0       0
  2056 ;;      Temps:          0       0       0
  2057 ;;      Totals:         0       5       0
  2058 ;;Total ram usage:        5 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 5
  2061 ;; This function calls:
  2062 ;;		_USART_Write
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068     0DE1                     _enviarInformacion:	
  2069                           ;psect for function _enviarInformacion
  2070                           
  2071     0DE1                     l1855:	
  2072                           ;incstack = 0
  2073                           ; Regs used in _enviarInformacion: [wreg+status,2+status,0+pclath+cstack]
  2074                           
  2075                           
  2076                           ;funciones.c: 59:     USART_Write((char)renglon);
  2077     0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  2078     0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  2079     0DE3  082E               	movf	enviarInformacion@renglon,w
  2080     0DE4  158A  25D7  158A   	fcall	_USART_Write
  2081                           
  2082                           ;funciones.c: 60:     USART_Write((char)columna);
  2083     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  2084     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  2085     0DE9  0830               	movf	enviarInformacion@columna,w
  2086     0DEA  158A  25D7  158A   	fcall	_USART_Write
  2087                           
  2088                           ;funciones.c: 61:     USART_Write(caracter);
  2089     0DED  1283               	bcf	3,5	;RP0=0, select bank0
  2090     0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  2091     0DEF  0832               	movf	enviarInformacion@caracter,w
  2092     0DF0  158A  25D7  158A   	fcall	_USART_Write
  2093     0DF3                     l307:
  2094     0DF3  0008               	return
  2095     0DF4                     __end_of_enviarInformacion:
  2096                           
  2097                           	psect	text3
  2098     0DD7                     __ptext3:	
  2099 ;; *************** function _USART_Write *****************
  2100 ;; Defined at:
  2101 ;;		line 26 in file "funciones.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  data            1    wreg     unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  data            1   13[BANK0 ] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1
  2115 ;;      Params:         0       0       0
  2116 ;;      Locals:         0       1       0
  2117 ;;      Temps:          0       0       0
  2118 ;;      Totals:         0       1       0
  2119 ;;Total ram usage:        1 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 4
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_enviarInformacion
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129     0DD7                     _USART_Write:	
  2130                           ;psect for function _USART_Write
  2131                           
  2132                           
  2133                           ;incstack = 0
  2134                           ; Regs used in _USART_Write: [wreg]
  2135                           ;USART_Write@data stored from wreg
  2136     0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  2137     0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  2138     0DD9  00AD               	movwf	USART_Write@data
  2139     0DDA                     l1649:
  2140     0DDA                     l282:	
  2141                           ;funciones.c: 27:     while(!TXIF);
  2142                           
  2143     0DDA  1E0C               	btfss	12,4	;volatile
  2144     0DDB  2DDD               	goto	u1221
  2145     0DDC  2DDE               	goto	u1220
  2146     0DDD                     u1221:
  2147     0DDD  2DDA               	goto	l282
  2148     0DDE                     u1220:
  2149     0DDE                     l1651:
  2150                           
  2151                           ;funciones.c: 28:     TXREG = data;
  2152     0DDE  082D               	movf	USART_Write@data,w
  2153     0DDF  0099               	movwf	25	;volatile
  2154     0DE0                     l285:
  2155     0DE0  0008               	return
  2156     0DE1                     __end_of_USART_Write:
  2157                           
  2158                           	psect	text4
  2159     0786                     __ptext4:	
  2160 ;; *************** function _atoi *****************
  2161 ;; Defined at:
  2162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  s               1   19[BANK0 ] PTR const unsigned char 
  2165 ;;		 -> main@caracter_asc(4), 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  n               2   24[BANK0 ] int 
  2168 ;;  neg             1   23[BANK0 ] _Bool 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2   19[BANK0 ] int 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1
  2178 ;;      Params:         0       2       0
  2179 ;;      Locals:         0       3       0
  2180 ;;      Temps:          0       2       0
  2181 ;;      Totals:         0       7       0
  2182 ;;Total ram usage:        7 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 5
  2185 ;; This function calls:
  2186 ;;		___wmul
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192     0786                     _atoi:	
  2193                           ;psect for function _atoi
  2194                           
  2195     0786                     l1865:	
  2196                           ;incstack = 0
  2197                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2198                           
  2199     0786  1283               	bcf	3,5	;RP0=0, select bank0
  2200     0787  1303               	bcf	3,6	;RP1=0, select bank0
  2201     0788  01B8               	clrf	atoi@n
  2202     0789  01B9               	clrf	atoi@n+1
  2203     078A  01B7               	clrf	atoi@neg
  2204     078B  2F8E               	goto	l1869
  2205     078C                     l1867:
  2206     078C  3001               	movlw	1
  2207     078D  07B3               	addwf	atoi@s,f
  2208     078E                     l1869:
  2209     078E  0833               	movf	atoi@s,w
  2210     078F  0084               	movwf	4
  2211     0790  3020               	movlw	32
  2212     0791  1383               	bcf	3,7	;select IRP bank0
  2213     0792  0600               	xorwf	0,w
  2214     0793  1903               	btfsc	3,2
  2215     0794  2F96               	goto	u1721
  2216     0795  2F97               	goto	u1720
  2217     0796                     u1721:
  2218     0796  2F8C               	goto	l1867
  2219     0797                     u1720:
  2220     0797                     l1871:
  2221     0797  0833               	movf	atoi@s,w
  2222     0798  0084               	movwf	4
  2223     0799  30F7               	movlw	247
  2224     079A  0700               	addwf	0,w
  2225     079B  00B5               	movwf	??_atoi
  2226     079C  3005               	movlw	5
  2227     079D  0235               	subwf	??_atoi,w
  2228     079E  1C03               	skipc
  2229     079F  2FA1               	goto	u1731
  2230     07A0  2FA2               	goto	u1730
  2231     07A1                     u1731:
  2232     07A1  2F8C               	goto	l1867
  2233     07A2                     u1730:
  2234     07A2                     l1873:
  2235     07A2  0833               	movf	atoi@s,w
  2236     07A3  0084               	movwf	4
  2237     07A4  302D               	movlw	45
  2238     07A5  0600               	xorwf	0,w
  2239     07A6  1D03               	btfss	3,2
  2240     07A7  2FA9               	goto	u1741
  2241     07A8  2FAA               	goto	u1740
  2242     07A9                     u1741:
  2243     07A9  2FAF               	goto	l1879
  2244     07AA                     u1740:
  2245     07AA                     l1875:
  2246     07AA  3001               	movlw	1
  2247     07AB  00B7               	movwf	atoi@neg
  2248     07AC                     l1877:
  2249     07AC  3001               	movlw	1
  2250     07AD  07B3               	addwf	atoi@s,f
  2251     07AE  2FD8               	goto	l1887
  2252     07AF                     l1879:
  2253     07AF  0833               	movf	atoi@s,w
  2254     07B0  0084               	movwf	4
  2255     07B1  302B               	movlw	43
  2256     07B2  0600               	xorwf	0,w
  2257     07B3  1D03               	btfss	3,2
  2258     07B4  2FB6               	goto	u1751
  2259     07B5  2FB7               	goto	u1750
  2260     07B6                     u1751:
  2261     07B6  2FD8               	goto	l1887
  2262     07B7                     u1750:
  2263     07B7  2FAC               	goto	l1877
  2264     07B8                     l1883:
  2265     07B8  0833               	movf	atoi@s,w
  2266     07B9  0084               	movwf	4
  2267     07BA  0839               	movf	atoi@n+1,w
  2268     07BB  00AE               	movwf	___wmul@multiplier+1
  2269     07BC  0838               	movf	atoi@n,w
  2270     07BD  00AD               	movwf	___wmul@multiplier
  2271     07BE  300A               	movlw	10
  2272     07BF  00AF               	movwf	___wmul@multiplicand
  2273     07C0  3000               	movlw	0
  2274     07C1  00B0               	movwf	___wmul@multiplicand+1
  2275     07C2  158A  269A  118A   	fcall	___wmul
  2276     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  2277     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  2278     07C7  082E               	movf	?___wmul+1,w
  2279     07C8  00B6               	movwf	??_atoi+1
  2280     07C9  1383               	bcf	3,7	;select IRP bank0
  2281     07CA  0800               	movf	0,w
  2282     07CB  022D               	subwf	?___wmul,w
  2283     07CC  00B5               	movwf	??_atoi
  2284     07CD  1C03               	skipc
  2285     07CE  03B6               	decf	??_atoi+1,f
  2286     07CF  0835               	movf	??_atoi,w
  2287     07D0  3E30               	addlw	48
  2288     07D1  00B8               	movwf	atoi@n
  2289     07D2  0836               	movf	??_atoi+1,w
  2290     07D3  1803               	skipnc
  2291     07D4  3E01               	addlw	1
  2292     07D5  3E00               	addlw	0
  2293     07D6  00B9               	movwf	atoi@n+1
  2294     07D7  2FAC               	goto	l1877
  2295     07D8                     l1887:
  2296     07D8  0833               	movf	atoi@s,w
  2297     07D9  0084               	movwf	4
  2298     07DA  30D0               	movlw	208
  2299     07DB  0700               	addwf	0,w
  2300     07DC  00B5               	movwf	??_atoi
  2301     07DD  300A               	movlw	10
  2302     07DE  0235               	subwf	??_atoi,w
  2303     07DF  1C03               	skipc
  2304     07E0  2FE2               	goto	u1761
  2305     07E1  2FE3               	goto	u1760
  2306     07E2                     u1761:
  2307     07E2  2FB8               	goto	l1883
  2308     07E3                     u1760:
  2309     07E3                     l1889:
  2310     07E3  0837               	movf	atoi@neg,w
  2311     07E4  1D03               	btfss	3,2
  2312     07E5  2FE7               	goto	u1771
  2313     07E6  2FE8               	goto	u1770
  2314     07E7                     u1771:
  2315     07E7  2FF4               	goto	l1893
  2316     07E8                     u1770:
  2317     07E8                     l1891:
  2318     07E8  0938               	comf	atoi@n,w
  2319     07E9  00B5               	movwf	??_atoi
  2320     07EA  0939               	comf	atoi@n+1,w
  2321     07EB  00B6               	movwf	??_atoi+1
  2322     07EC  0AB5               	incf	??_atoi,f
  2323     07ED  1903               	skipnz
  2324     07EE  0AB6               	incf	??_atoi+1,f
  2325     07EF  0835               	movf	??_atoi,w
  2326     07F0  00B3               	movwf	?_atoi
  2327     07F1  0836               	movf	??_atoi+1,w
  2328     07F2  00B4               	movwf	?_atoi+1
  2329     07F3  2FF8               	goto	l865
  2330     07F4                     l1893:
  2331     07F4  0839               	movf	atoi@n+1,w
  2332     07F5  00B4               	movwf	?_atoi+1
  2333     07F6  0838               	movf	atoi@n,w
  2334     07F7  00B3               	movwf	?_atoi
  2335     07F8                     l865:
  2336     07F8  0008               	return
  2337     07F9                     __end_of_atoi:
  2338                           
  2339                           	psect	text5
  2340     0E9A                     __ptext5:	
  2341 ;; *************** function ___wmul *****************
  2342 ;; Defined at:
  2343 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  multiplier      2   13[BANK0 ] unsigned int 
  2346 ;;  multiplicand    2   15[BANK0 ] unsigned int 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  product         2   17[BANK0 ] unsigned int 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  2   13[BANK0 ] unsigned int 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1
  2358 ;;      Params:         0       4       0
  2359 ;;      Locals:         0       2       0
  2360 ;;      Temps:          0       0       0
  2361 ;;      Totals:         0       6       0
  2362 ;;Total ram usage:        6 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 4
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_atoi
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372     0E9A                     ___wmul:	
  2373                           ;psect for function ___wmul
  2374                           
  2375     0E9A                     l1653:	
  2376                           ;incstack = 0
  2377                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2378                           
  2379     0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  2380     0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  2381     0E9C  01B1               	clrf	___wmul@product
  2382     0E9D  01B2               	clrf	___wmul@product+1
  2383     0E9E                     l1655:
  2384     0E9E  1C2D               	btfss	___wmul@multiplier,0
  2385     0E9F  2EA1               	goto	u1231
  2386     0EA0  2EA2               	goto	u1230
  2387     0EA1                     u1231:
  2388     0EA1  2EA8               	goto	l393
  2389     0EA2                     u1230:
  2390     0EA2                     l1657:
  2391     0EA2  082F               	movf	___wmul@multiplicand,w
  2392     0EA3  07B1               	addwf	___wmul@product,f
  2393     0EA4  1803               	skipnc
  2394     0EA5  0AB2               	incf	___wmul@product+1,f
  2395     0EA6  0830               	movf	___wmul@multiplicand+1,w
  2396     0EA7  07B2               	addwf	___wmul@product+1,f
  2397     0EA8                     l393:
  2398     0EA8  3001               	movlw	1
  2399     0EA9                     u1245:
  2400     0EA9  1003               	clrc
  2401     0EAA  0DAF               	rlf	___wmul@multiplicand,f
  2402     0EAB  0DB0               	rlf	___wmul@multiplicand+1,f
  2403     0EAC  3EFF               	addlw	-1
  2404     0EAD  1D03               	skipz
  2405     0EAE  2EA9               	goto	u1245
  2406     0EAF                     l1659:
  2407     0EAF  3001               	movlw	1
  2408     0EB0                     u1255:
  2409     0EB0  1003               	clrc
  2410     0EB1  0CAE               	rrf	___wmul@multiplier+1,f
  2411     0EB2  0CAD               	rrf	___wmul@multiplier,f
  2412     0EB3  3EFF               	addlw	-1
  2413     0EB4  1D03               	skipz
  2414     0EB5  2EB0               	goto	u1255
  2415     0EB6                     l1661:
  2416     0EB6  082D               	movf	___wmul@multiplier,w
  2417     0EB7  042E               	iorwf	___wmul@multiplier+1,w
  2418     0EB8  1D03               	btfss	3,2
  2419     0EB9  2EBB               	goto	u1261
  2420     0EBA  2EBC               	goto	u1260
  2421     0EBB                     u1261:
  2422     0EBB  2E9E               	goto	l1655
  2423     0EBC                     u1260:
  2424     0EBC                     l1663:
  2425     0EBC  0832               	movf	___wmul@product+1,w
  2426     0EBD  00AE               	movwf	?___wmul+1
  2427     0EBE  0831               	movf	___wmul@product,w
  2428     0EBF  00AD               	movwf	?___wmul
  2429     0EC0                     l395:
  2430     0EC0  0008               	return
  2431     0EC1                     __end_of___wmul:
  2432                           
  2433                           	psect	text6
  2434     0F2F                     __ptext6:	
  2435 ;; *************** function _USART_Init *****************
  2436 ;; Defined at:
  2437 ;;		line 16 in file "funciones.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  baud            4   28[BANK0 ] long 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1
  2451 ;;      Params:         0       4       0
  2452 ;;      Locals:         0       0       0
  2453 ;;      Temps:          0       4       0
  2454 ;;      Totals:         0       8       0
  2455 ;;Total ram usage:        8 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 5
  2458 ;; This function calls:
  2459 ;;		___aldiv
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465     0F2F                     _USART_Init:	
  2466                           ;psect for function _USART_Init
  2467                           
  2468     0F2F                     l1733:	
  2469                           ;incstack = 0
  2470                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2471                           
  2472                           
  2473                           ;funciones.c: 17:     TRISC6 = 0;
  2474     0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  2475     0F30  1303               	bcf	3,6	;RP1=0, select bank1
  2476     0F31  1307               	bcf	7,6	;volatile
  2477                           
  2478                           ;funciones.c: 18:     TRISC7 = 1;
  2479     0F32  1787               	bsf	7,7	;volatile
  2480     0F33                     l1735:
  2481                           
  2482                           ;funciones.c: 19:     SPBRG = (4000000 / (64 * baud)) - 1;
  2483     0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2484     0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2485     0F35  083C               	movf	USART_Init@baud,w
  2486     0F36  00C0               	movwf	??_USART_Init
  2487     0F37  083D               	movf	USART_Init@baud+1,w
  2488     0F38  00C1               	movwf	??_USART_Init+1
  2489     0F39  083E               	movf	USART_Init@baud+2,w
  2490     0F3A  00C2               	movwf	??_USART_Init+2
  2491     0F3B  083F               	movf	USART_Init@baud+3,w
  2492     0F3C  00C3               	movwf	??_USART_Init+3
  2493     0F3D  3006               	movlw	6
  2494     0F3E                     u1375:
  2495     0F3E  1003               	clrc
  2496     0F3F  0DC0               	rlf	??_USART_Init,f
  2497     0F40  0DC1               	rlf	??_USART_Init+1,f
  2498     0F41  0DC2               	rlf	??_USART_Init+2,f
  2499     0F42  0DC3               	rlf	??_USART_Init+3,f
  2500     0F43                     u1370:
  2501     0F43  3EFF               	addlw	-1
  2502     0F44  1D03               	skipz
  2503     0F45  2F3E               	goto	u1375
  2504     0F46  0843               	movf	??_USART_Init+3,w
  2505     0F47  00B0               	movwf	___aldiv@divisor+3
  2506     0F48  0842               	movf	??_USART_Init+2,w
  2507     0F49  00AF               	movwf	___aldiv@divisor+2
  2508     0F4A  0841               	movf	??_USART_Init+1,w
  2509     0F4B  00AE               	movwf	___aldiv@divisor+1
  2510     0F4C  0840               	movf	??_USART_Init,w
  2511     0F4D  00AD               	movwf	___aldiv@divisor
  2512     0F4E  3000               	movlw	0
  2513     0F4F  00B4               	movwf	___aldiv@dividend+3
  2514     0F50  303D               	movlw	61
  2515     0F51  00B3               	movwf	___aldiv@dividend+2
  2516     0F52  3009               	movlw	9
  2517     0F53  00B2               	movwf	___aldiv@dividend+1
  2518     0F54  3000               	movlw	0
  2519     0F55  00B1               	movwf	___aldiv@dividend
  2520     0F56  118A  2534  158A   	fcall	___aldiv
  2521     0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2522     0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2523     0F5B  082D               	movf	?___aldiv,w
  2524     0F5C  3EFF               	addlw	255
  2525     0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  2526     0F5E  1303               	bcf	3,6	;RP1=0, select bank1
  2527     0F5F  0099               	movwf	25	;volatile
  2528     0F60                     l1737:
  2529                           
  2530                           ;funciones.c: 20:     TXEN = 1;
  2531     0F60  1698               	bsf	24,5	;volatile
  2532     0F61                     l1739:
  2533                           
  2534                           ;funciones.c: 21:     SYNC = 0;
  2535     0F61  1218               	bcf	24,4	;volatile
  2536     0F62                     l1741:
  2537                           
  2538                           ;funciones.c: 22:     SPEN = 1;
  2539     0F62  1283               	bcf	3,5	;RP0=0, select bank0
  2540     0F63  1303               	bcf	3,6	;RP1=0, select bank0
  2541     0F64  1798               	bsf	24,7	;volatile
  2542     0F65                     l1743:
  2543                           
  2544                           ;funciones.c: 23:     CREN = 1;
  2545     0F65  1618               	bsf	24,4	;volatile
  2546     0F66                     l279:
  2547     0F66  0008               	return
  2548     0F67                     __end_of_USART_Init:
  2549                           
  2550                           	psect	text7
  2551     0534                     __ptext7:	
  2552 ;; *************** function ___aldiv *****************
  2553 ;; Defined at:
  2554 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  divisor         4   13[BANK0 ] long 
  2557 ;;  dividend        4   17[BANK0 ] long 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  quotient        4   24[BANK0 ] long 
  2560 ;;  sign            1   23[BANK0 ] unsigned char 
  2561 ;;  counter         1   22[BANK0 ] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  4   13[BANK0 ] long 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1
  2571 ;;      Params:         0       8       0
  2572 ;;      Locals:         0       6       0
  2573 ;;      Temps:          0       1       0
  2574 ;;      Totals:         0      15       0
  2575 ;;Total ram usage:       15 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 4
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_USART_Init
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585     0534                     ___aldiv:	
  2586                           ;psect for function ___aldiv
  2587                           
  2588     0534                     l1667:	
  2589                           ;incstack = 0
  2590                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2591                           
  2592     0534  1283               	bcf	3,5	;RP0=0, select bank0
  2593     0535  1303               	bcf	3,6	;RP1=0, select bank0
  2594     0536  01B7               	clrf	___aldiv@sign
  2595     0537                     l1669:
  2596     0537  1FB0               	btfss	___aldiv@divisor+3,7
  2597     0538  2D3A               	goto	u1271
  2598     0539  2D3B               	goto	u1270
  2599     053A                     u1271:
  2600     053A  2D48               	goto	l458
  2601     053B                     u1270:
  2602     053B                     l1671:
  2603     053B  09AD               	comf	___aldiv@divisor,f
  2604     053C  09AE               	comf	___aldiv@divisor+1,f
  2605     053D  09AF               	comf	___aldiv@divisor+2,f
  2606     053E  09B0               	comf	___aldiv@divisor+3,f
  2607     053F  0AAD               	incf	___aldiv@divisor,f
  2608     0540  1903               	skipnz
  2609     0541  0AAE               	incf	___aldiv@divisor+1,f
  2610     0542  1903               	skipnz
  2611     0543  0AAF               	incf	___aldiv@divisor+2,f
  2612     0544  1903               	skipnz
  2613     0545  0AB0               	incf	___aldiv@divisor+3,f
  2614     0546  3001               	movlw	1
  2615     0547  00B7               	movwf	___aldiv@sign
  2616     0548                     l458:
  2617     0548  1FB4               	btfss	___aldiv@dividend+3,7
  2618     0549  2D4B               	goto	u1281
  2619     054A  2D4C               	goto	u1280
  2620     054B                     u1281:
  2621     054B  2D59               	goto	l1677
  2622     054C                     u1280:
  2623     054C                     l1673:
  2624     054C  09B1               	comf	___aldiv@dividend,f
  2625     054D  09B2               	comf	___aldiv@dividend+1,f
  2626     054E  09B3               	comf	___aldiv@dividend+2,f
  2627     054F  09B4               	comf	___aldiv@dividend+3,f
  2628     0550  0AB1               	incf	___aldiv@dividend,f
  2629     0551  1903               	skipnz
  2630     0552  0AB2               	incf	___aldiv@dividend+1,f
  2631     0553  1903               	skipnz
  2632     0554  0AB3               	incf	___aldiv@dividend+2,f
  2633     0555  1903               	skipnz
  2634     0556  0AB4               	incf	___aldiv@dividend+3,f
  2635     0557                     l1675:
  2636     0557  3001               	movlw	1
  2637     0558  06B7               	xorwf	___aldiv@sign,f
  2638     0559                     l1677:
  2639     0559  3000               	movlw	0
  2640     055A  00BB               	movwf	___aldiv@quotient+3
  2641     055B  3000               	movlw	0
  2642     055C  00BA               	movwf	___aldiv@quotient+2
  2643     055D  3000               	movlw	0
  2644     055E  00B9               	movwf	___aldiv@quotient+1
  2645     055F  3000               	movlw	0
  2646     0560  00B8               	movwf	___aldiv@quotient
  2647     0561                     l1679:
  2648     0561  0830               	movf	___aldiv@divisor+3,w
  2649     0562  042F               	iorwf	___aldiv@divisor+2,w
  2650     0563  042E               	iorwf	___aldiv@divisor+1,w
  2651     0564  042D               	iorwf	___aldiv@divisor,w
  2652     0565  1903               	skipnz
  2653     0566  2D68               	goto	u1291
  2654     0567  2D69               	goto	u1290
  2655     0568                     u1291:
  2656     0568  2DB4               	goto	l1699
  2657     0569                     u1290:
  2658     0569                     l1681:
  2659     0569  3001               	movlw	1
  2660     056A  00B6               	movwf	___aldiv@counter
  2661     056B  2D77               	goto	l1685
  2662     056C                     l1683:
  2663     056C  3001               	movlw	1
  2664     056D  00B5               	movwf	??___aldiv
  2665     056E                     u1305:
  2666     056E  1003               	clrc
  2667     056F  0DAD               	rlf	___aldiv@divisor,f
  2668     0570  0DAE               	rlf	___aldiv@divisor+1,f
  2669     0571  0DAF               	rlf	___aldiv@divisor+2,f
  2670     0572  0DB0               	rlf	___aldiv@divisor+3,f
  2671     0573  0BB5               	decfsz	??___aldiv,f
  2672     0574  2D6E               	goto	u1305
  2673     0575  3001               	movlw	1
  2674     0576  07B6               	addwf	___aldiv@counter,f
  2675     0577                     l1685:
  2676     0577  1FB0               	btfss	___aldiv@divisor+3,7
  2677     0578  2D7A               	goto	u1311
  2678     0579  2D7B               	goto	u1310
  2679     057A                     u1311:
  2680     057A  2D6C               	goto	l1683
  2681     057B                     u1310:
  2682     057B                     l1687:
  2683     057B  3001               	movlw	1
  2684     057C  00B5               	movwf	??___aldiv
  2685     057D                     u1325:
  2686     057D  1003               	clrc
  2687     057E  0DB8               	rlf	___aldiv@quotient,f
  2688     057F  0DB9               	rlf	___aldiv@quotient+1,f
  2689     0580  0DBA               	rlf	___aldiv@quotient+2,f
  2690     0581  0DBB               	rlf	___aldiv@quotient+3,f
  2691     0582  0BB5               	decfsz	??___aldiv,f
  2692     0583  2D7D               	goto	u1325
  2693     0584                     l1689:
  2694     0584  0830               	movf	___aldiv@divisor+3,w
  2695     0585  0234               	subwf	___aldiv@dividend+3,w
  2696     0586  1D03               	skipz
  2697     0587  2D92               	goto	u1335
  2698     0588  082F               	movf	___aldiv@divisor+2,w
  2699     0589  0233               	subwf	___aldiv@dividend+2,w
  2700     058A  1D03               	skipz
  2701     058B  2D92               	goto	u1335
  2702     058C  082E               	movf	___aldiv@divisor+1,w
  2703     058D  0232               	subwf	___aldiv@dividend+1,w
  2704     058E  1D03               	skipz
  2705     058F  2D92               	goto	u1335
  2706     0590  082D               	movf	___aldiv@divisor,w
  2707     0591  0231               	subwf	___aldiv@dividend,w
  2708     0592                     u1335:
  2709     0592  1C03               	skipc
  2710     0593  2D95               	goto	u1331
  2711     0594  2D96               	goto	u1330
  2712     0595                     u1331:
  2713     0595  2DA5               	goto	l1695
  2714     0596                     u1330:
  2715     0596                     l1691:
  2716     0596  082D               	movf	___aldiv@divisor,w
  2717     0597  02B1               	subwf	___aldiv@dividend,f
  2718     0598  082E               	movf	___aldiv@divisor+1,w
  2719     0599  1C03               	skipc
  2720     059A  0F2E               	incfsz	___aldiv@divisor+1,w
  2721     059B  02B2               	subwf	___aldiv@dividend+1,f
  2722     059C  082F               	movf	___aldiv@divisor+2,w
  2723     059D  1C03               	skipc
  2724     059E  0F2F               	incfsz	___aldiv@divisor+2,w
  2725     059F  02B3               	subwf	___aldiv@dividend+2,f
  2726     05A0  0830               	movf	___aldiv@divisor+3,w
  2727     05A1  1C03               	skipc
  2728     05A2  0F30               	incfsz	___aldiv@divisor+3,w
  2729     05A3  02B4               	subwf	___aldiv@dividend+3,f
  2730     05A4                     l1693:
  2731     05A4  1438               	bsf	___aldiv@quotient,0
  2732     05A5                     l1695:
  2733     05A5  3001               	movlw	1
  2734     05A6                     u1345:
  2735     05A6  1003               	clrc
  2736     05A7  0CB0               	rrf	___aldiv@divisor+3,f
  2737     05A8  0CAF               	rrf	___aldiv@divisor+2,f
  2738     05A9  0CAE               	rrf	___aldiv@divisor+1,f
  2739     05AA  0CAD               	rrf	___aldiv@divisor,f
  2740     05AB  3EFF               	addlw	-1
  2741     05AC  1D03               	skipz
  2742     05AD  2DA6               	goto	u1345
  2743     05AE                     l1697:
  2744     05AE  3001               	movlw	1
  2745     05AF  02B6               	subwf	___aldiv@counter,f
  2746     05B0  1D03               	btfss	3,2
  2747     05B1  2DB3               	goto	u1351
  2748     05B2  2DB4               	goto	u1350
  2749     05B3                     u1351:
  2750     05B3  2D7B               	goto	l1687
  2751     05B4                     u1350:
  2752     05B4                     l1699:
  2753     05B4  0837               	movf	___aldiv@sign,w
  2754     05B5  1903               	btfsc	3,2
  2755     05B6  2DB8               	goto	u1361
  2756     05B7  2DB9               	goto	u1360
  2757     05B8                     u1361:
  2758     05B8  2DC4               	goto	l1703
  2759     05B9                     u1360:
  2760     05B9                     l1701:
  2761     05B9  09B8               	comf	___aldiv@quotient,f
  2762     05BA  09B9               	comf	___aldiv@quotient+1,f
  2763     05BB  09BA               	comf	___aldiv@quotient+2,f
  2764     05BC  09BB               	comf	___aldiv@quotient+3,f
  2765     05BD  0AB8               	incf	___aldiv@quotient,f
  2766     05BE  1903               	skipnz
  2767     05BF  0AB9               	incf	___aldiv@quotient+1,f
  2768     05C0  1903               	skipnz
  2769     05C1  0ABA               	incf	___aldiv@quotient+2,f
  2770     05C2  1903               	skipnz
  2771     05C3  0ABB               	incf	___aldiv@quotient+3,f
  2772     05C4                     l1703:
  2773     05C4  083B               	movf	___aldiv@quotient+3,w
  2774     05C5  00B0               	movwf	?___aldiv+3
  2775     05C6  083A               	movf	___aldiv@quotient+2,w
  2776     05C7  00AF               	movwf	?___aldiv+2
  2777     05C8  0839               	movf	___aldiv@quotient+1,w
  2778     05C9  00AE               	movwf	?___aldiv+1
  2779     05CA  0838               	movf	___aldiv@quotient,w
  2780     05CB  00AD               	movwf	?___aldiv
  2781     05CC                     l468:
  2782     05CC  0008               	return
  2783     05CD                     __end_of___aldiv:
  2784                           
  2785                           	psect	text8
  2786     0FA8                     __ptext8:	
  2787 ;; *************** function _Lcd_Init *****************
  2788 ;; Defined at:
  2789 ;;		line 63 in file "lcd.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1
  2803 ;;      Params:         0       0       0
  2804 ;;      Locals:         0       0       0
  2805 ;;      Temps:          0       2       0
  2806 ;;      Totals:         0       2       0
  2807 ;;Total ram usage:        2 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 7
  2810 ;; This function calls:
  2811 ;;		_Lcd_Clear
  2812 ;;		_Lcd_Cmd
  2813 ;;		_Lcd_Port
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819     0FA8                     _Lcd_Init:	
  2820                           ;psect for function _Lcd_Init
  2821                           
  2822     0FA8                     l1719:	
  2823                           ;incstack = 0
  2824                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2825                           
  2826                           
  2827                           ;lcd.c: 65:  TRISCbits.TRISC0 = 0;
  2828     0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  2829     0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  2830     0FAA  1007               	bcf	7,0	;volatile
  2831                           
  2832                           ;lcd.c: 66:  TRISCbits.TRISC2 = 0;
  2833     0FAB  1107               	bcf	7,2	;volatile
  2834                           
  2835                           ;lcd.c: 67:  TRISBbits.TRISB4 = 0;
  2836     0FAC  1206               	bcf	6,4	;volatile
  2837                           
  2838                           ;lcd.c: 68:  TRISBbits.TRISB5 = 0;
  2839     0FAD  1286               	bcf	6,5	;volatile
  2840                           
  2841                           ;lcd.c: 69:  TRISBbits.TRISB6 = 0;
  2842     0FAE  1306               	bcf	6,6	;volatile
  2843                           
  2844                           ;lcd.c: 70:  TRISBbits.TRISB7 = 0;
  2845     0FAF  1386               	bcf	6,7	;volatile
  2846     0FB0                     l1721:
  2847                           
  2848                           ;lcd.c: 71:     Lcd_Port(0x00);
  2849     0FB0  3000               	movlw	0
  2850     0FB1  158A  267A  158A   	fcall	_Lcd_Port
  2851     0FB4                     l1723:
  2852                           
  2853                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2854     0FB4  301A               	movlw	26
  2855     0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2856     0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2857     0FB7  00B2               	movwf	??_Lcd_Init+1
  2858     0FB8  30F8               	movlw	248
  2859     0FB9  00B1               	movwf	??_Lcd_Init
  2860     0FBA                     u2097:
  2861     0FBA  0BB1               	decfsz	??_Lcd_Init,f
  2862     0FBB  2FBA               	goto	u2097
  2863     0FBC  0BB2               	decfsz	??_Lcd_Init+1,f
  2864     0FBD  2FBA               	goto	u2097
  2865     0FBE                     l1725:
  2866                           
  2867                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  2868     0FBE  3003               	movlw	3
  2869     0FBF  158A  2622  158A   	fcall	_Lcd_Cmd
  2870                           
  2871                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2872     0FC2  3007               	movlw	7
  2873     0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  2874     0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  2875     0FC5  00B2               	movwf	??_Lcd_Init+1
  2876     0FC6  307C               	movlw	124
  2877     0FC7  00B1               	movwf	??_Lcd_Init
  2878     0FC8                     u2107:
  2879     0FC8  0BB1               	decfsz	??_Lcd_Init,f
  2880     0FC9  2FC8               	goto	u2107
  2881     0FCA  0BB2               	decfsz	??_Lcd_Init+1,f
  2882     0FCB  2FC8               	goto	u2107
  2883     0FCC  2FCD               	nop2
  2884     0FCD                     l1727:
  2885                           
  2886                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  2887     0FCD  3003               	movlw	3
  2888     0FCE  158A  2622  158A   	fcall	_Lcd_Cmd
  2889     0FD1                     l1729:
  2890                           
  2891                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2892     0FD1  300F               	movlw	15
  2893     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  2894     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  2895     0FD4  00B2               	movwf	??_Lcd_Init+1
  2896     0FD5  3047               	movlw	71
  2897     0FD6  00B1               	movwf	??_Lcd_Init
  2898     0FD7                     u2117:
  2899     0FD7  0BB1               	decfsz	??_Lcd_Init,f
  2900     0FD8  2FD7               	goto	u2117
  2901     0FD9  0BB2               	decfsz	??_Lcd_Init+1,f
  2902     0FDA  2FD7               	goto	u2117
  2903     0FDB  0000               	nop
  2904                           
  2905                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  2906     0FDC  3003               	movlw	3
  2907     0FDD  158A  2622  158A   	fcall	_Lcd_Cmd
  2908                           
  2909                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  2910     0FE0  3002               	movlw	2
  2911     0FE1  158A  2622  158A   	fcall	_Lcd_Cmd
  2912                           
  2913                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  2914     0FE4  3002               	movlw	2
  2915     0FE5  158A  2622  158A   	fcall	_Lcd_Cmd
  2916                           
  2917                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  2918     0FE8  3008               	movlw	8
  2919     0FE9  158A  2622  158A   	fcall	_Lcd_Cmd
  2920                           
  2921                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  2922     0FEC  3000               	movlw	0
  2923     0FED  158A  2622  158A   	fcall	_Lcd_Cmd
  2924                           
  2925                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  2926     0FF0  300C               	movlw	12
  2927     0FF1  158A  2622  158A   	fcall	_Lcd_Cmd
  2928                           
  2929                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  2930     0FF4  3000               	movlw	0
  2931     0FF5  158A  2622  158A   	fcall	_Lcd_Cmd
  2932                           
  2933                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  2934     0FF8  3006               	movlw	6
  2935     0FF9  158A  2622  158A   	fcall	_Lcd_Cmd
  2936                           
  2937                           ;lcd.c: 85:     Lcd_Clear();
  2938     0FFC  158A  25CE  158A   	fcall	_Lcd_Clear
  2939     0FFF                     l212:
  2940     0FFF  0008               	return
  2941     1000                     __end_of_Lcd_Init:
  2942                           
  2943                           	psect	text9
  2944     0DCE                     __ptext9:	
  2945 ;; *************** function _Lcd_Clear *****************
  2946 ;; Defined at:
  2947 ;;		line 20 in file "lcd.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0, pclath, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1
  2961 ;;      Params:         0       0       0
  2962 ;;      Locals:         0       0       0
  2963 ;;      Temps:          0       0       0
  2964 ;;      Totals:         0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 6
  2968 ;; This function calls:
  2969 ;;		_Lcd_Cmd
  2970 ;; This function is called by:
  2971 ;;		_Lcd_Init
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975     0DCE                     _Lcd_Clear:	
  2976                           ;psect for function _Lcd_Clear
  2977                           
  2978     0DCE                     l1647:	
  2979                           ;incstack = 0
  2980                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2981                           
  2982                           
  2983                           ;lcd.c: 22:     Lcd_Cmd(0);
  2984     0DCE  3000               	movlw	0
  2985     0DCF  158A  2622  158A   	fcall	_Lcd_Cmd
  2986                           
  2987                           ;lcd.c: 23:     Lcd_Cmd(1);
  2988     0DD2  3001               	movlw	1
  2989     0DD3  158A  2622  158A   	fcall	_Lcd_Cmd
  2990     0DD6                     l199:
  2991     0DD6  0008               	return
  2992     0DD7                     __end_of_Lcd_Clear:
  2993                           
  2994                           	psect	text10
  2995     0DF4                     __ptext10:	
  2996 ;; *************** function _Lcd_Delete_Char *****************
  2997 ;; Defined at:
  2998 ;;		line 134 in file "lcd.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  renglon         2   23[BANK0 ] int 
  3001 ;;  columna         2   25[BANK0 ] int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1
  3013 ;;      Params:         0       4       0
  3014 ;;      Locals:         0       0       0
  3015 ;;      Temps:          0       0       0
  3016 ;;      Totals:         0       4       0
  3017 ;;Total ram usage:        4 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 7
  3020 ;; This function calls:
  3021 ;;		_Lcd_Set_Cursor
  3022 ;;		_Lcd_Write_Char
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028     0DF4                     _Lcd_Delete_Char:	
  3029                           ;psect for function _Lcd_Delete_Char
  3030                           
  3031     0DF4                     l1853:	
  3032                           ;incstack = 0
  3033                           ; Regs used in _Lcd_Delete_Char: [wreg+status,2+status,0+pclath+cstack]
  3034                           
  3035                           
  3036                           ;lcd.c: 135:     Lcd_Set_Cursor(renglon,columna);
  3037     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  3038     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3039     0DF6  0839               	movf	Lcd_Delete_Char@columna,w
  3040     0DF7  00B1               	movwf	Lcd_Set_Cursor@b
  3041     0DF8  0837               	movf	Lcd_Delete_Char@renglon,w
  3042     0DF9  118A  25CD  158A   	fcall	_Lcd_Set_Cursor
  3043                           
  3044                           ;lcd.c: 136:     Lcd_Write_Char(' ');
  3045     0DFC  3020               	movlw	32
  3046     0DFD  158A  26F8  158A   	fcall	_Lcd_Write_Char
  3047                           
  3048                           ;lcd.c: 137:     Lcd_Set_Cursor(renglon,columna);
  3049     0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3050     0E01  1303               	bcf	3,6	;RP1=0, select bank0
  3051     0E02  0839               	movf	Lcd_Delete_Char@columna,w
  3052     0E03  00B1               	movwf	Lcd_Set_Cursor@b
  3053     0E04  0837               	movf	Lcd_Delete_Char@renglon,w
  3054     0E05  118A  25CD  158A   	fcall	_Lcd_Set_Cursor
  3055     0E08                     l236:
  3056     0E08  0008               	return
  3057     0E09                     __end_of_Lcd_Delete_Char:
  3058                           
  3059                           	psect	text11
  3060     0EF8                     __ptext11:	
  3061 ;; *************** function _Lcd_Write_Char *****************
  3062 ;; Defined at:
  3063 ;;		line 88 in file "lcd.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  a               1    wreg     unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  a               1   17[BANK0 ] unsigned char 
  3068 ;;  y               1   16[BANK0 ] unsigned char 
  3069 ;;  temp            1   15[BANK0 ] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, pclath, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1
  3079 ;;      Params:         0       0       0
  3080 ;;      Locals:         0       3       0
  3081 ;;      Temps:          0       1       0
  3082 ;;      Totals:         0       4       0
  3083 ;;Total ram usage:        4 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 5
  3086 ;; This function calls:
  3087 ;;		_Lcd_Port
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;;		_Lcd_Delete_Char
  3091 ;;		_Lcd_Write_String
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095     0EF8                     _Lcd_Write_Char:	
  3096                           ;psect for function _Lcd_Write_Char
  3097                           
  3098                           
  3099                           ;incstack = 0
  3100                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3101                           ;Lcd_Write_Char@a stored from wreg
  3102     0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  3103     0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  3104     0EFA  00B1               	movwf	Lcd_Write_Char@a
  3105     0EFB                     l1623:
  3106                           
  3107                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  3108     0EFB  0831               	movf	Lcd_Write_Char@a,w
  3109     0EFC  00AF               	movwf	Lcd_Write_Char@temp
  3110     0EFD                     l1625:
  3111     0EFD  300F               	movlw	15
  3112     0EFE  05AF               	andwf	Lcd_Write_Char@temp,f
  3113     0EFF                     l1627:
  3114                           
  3115                           ;lcd.c: 92:     y = a&0xF0;
  3116     0EFF  0831               	movf	Lcd_Write_Char@a,w
  3117     0F00  00B0               	movwf	Lcd_Write_Char@y
  3118     0F01  30F0               	movlw	240
  3119     0F02  05B0               	andwf	Lcd_Write_Char@y,f
  3120     0F03                     l1629:
  3121                           
  3122                           ;lcd.c: 93:     PORTCbits.RC0 = 1;
  3123     0F03  1407               	bsf	7,0	;volatile
  3124     0F04                     l1631:
  3125                           
  3126                           ;lcd.c: 94:     Lcd_Port(y>>4);
  3127     0F04  0830               	movf	Lcd_Write_Char@y,w
  3128     0F05  00AE               	movwf	??_Lcd_Write_Char
  3129     0F06  3004               	movlw	4
  3130     0F07                     u1215:
  3131     0F07  1003               	clrc
  3132     0F08  0CAE               	rrf	??_Lcd_Write_Char,f
  3133     0F09  3EFF               	addlw	-1
  3134     0F0A  1D03               	skipz
  3135     0F0B  2F07               	goto	u1215
  3136     0F0C  082E               	movf	??_Lcd_Write_Char,w
  3137     0F0D  158A  267A  158A   	fcall	_Lcd_Port
  3138     0F10                     l1633:
  3139                           
  3140                           ;lcd.c: 95:     PORTCbits.RC2 = 1;
  3141     0F10  1283               	bcf	3,5	;RP0=0, select bank0
  3142     0F11  1303               	bcf	3,6	;RP1=0, select bank0
  3143     0F12  1507               	bsf	7,2	;volatile
  3144     0F13                     l1635:
  3145                           
  3146                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3147     0F13  300C               	movlw	12
  3148     0F14  1283               	bcf	3,5	;RP0=0, select bank0
  3149     0F15  1303               	bcf	3,6	;RP1=0, select bank0
  3150     0F16  00AE               	movwf	??_Lcd_Write_Char
  3151     0F17                     u2127:
  3152     0F17  0BAE               	decfsz	??_Lcd_Write_Char,f
  3153     0F18  2F17               	goto	u2127
  3154     0F19  2F1A               	nop2
  3155     0F1A                     l1637:
  3156                           
  3157                           ;lcd.c: 97:     PORTCbits.RC2 = 0;
  3158     0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  3159     0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  3160     0F1C  1107               	bcf	7,2	;volatile
  3161     0F1D                     l1639:
  3162                           
  3163                           ;lcd.c: 98:     Lcd_Port(temp);
  3164     0F1D  082F               	movf	Lcd_Write_Char@temp,w
  3165     0F1E  158A  267A  158A   	fcall	_Lcd_Port
  3166     0F21                     l1641:
  3167                           
  3168                           ;lcd.c: 99:     PORTCbits.RC2 = 1;
  3169     0F21  1283               	bcf	3,5	;RP0=0, select bank0
  3170     0F22  1303               	bcf	3,6	;RP1=0, select bank0
  3171     0F23  1507               	bsf	7,2	;volatile
  3172     0F24                     l1643:
  3173                           
  3174                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3175     0F24  300C               	movlw	12
  3176     0F25  1283               	bcf	3,5	;RP0=0, select bank0
  3177     0F26  1303               	bcf	3,6	;RP1=0, select bank0
  3178     0F27  00AE               	movwf	??_Lcd_Write_Char
  3179     0F28                     u2137:
  3180     0F28  0BAE               	decfsz	??_Lcd_Write_Char,f
  3181     0F29  2F28               	goto	u2137
  3182     0F2A  2F2B               	nop2
  3183     0F2B                     l1645:
  3184                           
  3185                           ;lcd.c: 101:     PORTCbits.RC2 = 0;
  3186     0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3187     0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  3188     0F2D  1107               	bcf	7,2	;volatile
  3189     0F2E                     l215:
  3190     0F2E  0008               	return
  3191     0F2F                     __end_of_Lcd_Write_Char:
  3192                           
  3193                           	psect	text12
  3194     05CD                     __ptext12:	
  3195 ;; *************** function _Lcd_Set_Cursor *****************
  3196 ;; Defined at:
  3197 ;;		line 26 in file "lcd.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  a               1    wreg     unsigned char 
  3200 ;;  b               1   17[BANK0 ] unsigned char 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  a               1   19[BANK0 ] unsigned char 
  3203 ;;  temp            1   22[BANK0 ] unsigned char 
  3204 ;;  y               1   21[BANK0 ] unsigned char 
  3205 ;;  z               1   20[BANK0 ] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1
  3215 ;;      Params:         0       1       0
  3216 ;;      Locals:         0       4       0
  3217 ;;      Temps:          0       1       0
  3218 ;;      Totals:         0       6       0
  3219 ;;Total ram usage:        6 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 6
  3222 ;; This function calls:
  3223 ;;		_Lcd_Cmd
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;;		_Lcd_Delete_Char
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230     05CD                     _Lcd_Set_Cursor:	
  3231                           ;psect for function _Lcd_Set_Cursor
  3232                           
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3236                           ;Lcd_Set_Cursor@a stored from wreg
  3237     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3238     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3239     05CF  00B3               	movwf	Lcd_Set_Cursor@a
  3240     05D0                     l1575:
  3241                           
  3242                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  3243     05D0  0333               	decf	Lcd_Set_Cursor@a,w
  3244     05D1  1D03               	btfss	3,2
  3245     05D2  2DD4               	goto	u1131
  3246     05D3  2DD5               	goto	u1130
  3247     05D4                     u1131:
  3248     05D4  2DF1               	goto	l1587
  3249     05D5                     u1130:
  3250     05D5                     l1577:
  3251                           
  3252                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  3253     05D5  0831               	movf	Lcd_Set_Cursor@b,w
  3254     05D6  3E7F               	addlw	127
  3255     05D7  00B6               	movwf	Lcd_Set_Cursor@temp
  3256                           
  3257                           ;lcd.c: 32:         z = temp>>4;
  3258     05D8  0836               	movf	Lcd_Set_Cursor@temp,w
  3259     05D9  00B2               	movwf	??_Lcd_Set_Cursor
  3260     05DA  3004               	movlw	4
  3261     05DB                     u1145:
  3262     05DB  1003               	clrc
  3263     05DC  0CB2               	rrf	??_Lcd_Set_Cursor,f
  3264     05DD  3EFF               	addlw	-1
  3265     05DE  1D03               	skipz
  3266     05DF  2DDB               	goto	u1145
  3267     05E0  0832               	movf	??_Lcd_Set_Cursor,w
  3268     05E1  00B4               	movwf	Lcd_Set_Cursor@z
  3269     05E2                     l1579:
  3270                           
  3271                           ;lcd.c: 33:         y = temp & 0x0F;
  3272     05E2  0836               	movf	Lcd_Set_Cursor@temp,w
  3273     05E3  00B5               	movwf	Lcd_Set_Cursor@y
  3274     05E4                     l1581:
  3275     05E4  300F               	movlw	15
  3276     05E5  05B5               	andwf	Lcd_Set_Cursor@y,f
  3277     05E6                     l1583:
  3278                           
  3279                           ;lcd.c: 34:         Lcd_Cmd(z);
  3280     05E6  0834               	movf	Lcd_Set_Cursor@z,w
  3281     05E7  158A  2622  118A   	fcall	_Lcd_Cmd
  3282     05EA                     l1585:
  3283                           
  3284                           ;lcd.c: 35:         Lcd_Cmd(y);
  3285     05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3286     05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3287     05EC  0835               	movf	Lcd_Set_Cursor@y,w
  3288     05ED  158A  2622  118A   	fcall	_Lcd_Cmd
  3289                           
  3290                           ;lcd.c: 36:     }
  3291     05F0  2E57               	goto	l209
  3292     05F1                     l1587:
  3293     05F1  3002               	movlw	2
  3294     05F2  0633               	xorwf	Lcd_Set_Cursor@a,w
  3295     05F3  1D03               	btfss	3,2
  3296     05F4  2DF6               	goto	u1151
  3297     05F5  2DF7               	goto	u1150
  3298     05F6                     u1151:
  3299     05F6  2E13               	goto	l1599
  3300     05F7                     u1150:
  3301     05F7                     l1589:
  3302                           
  3303                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  3304     05F7  0831               	movf	Lcd_Set_Cursor@b,w
  3305     05F8  3EBF               	addlw	191
  3306     05F9  00B6               	movwf	Lcd_Set_Cursor@temp
  3307                           
  3308                           ;lcd.c: 40:         z = temp>>4;
  3309     05FA  0836               	movf	Lcd_Set_Cursor@temp,w
  3310     05FB  00B2               	movwf	??_Lcd_Set_Cursor
  3311     05FC  3004               	movlw	4
  3312     05FD                     u1165:
  3313     05FD  1003               	clrc
  3314     05FE  0CB2               	rrf	??_Lcd_Set_Cursor,f
  3315     05FF  3EFF               	addlw	-1
  3316     0600  1D03               	skipz
  3317     0601  2DFD               	goto	u1165
  3318     0602  0832               	movf	??_Lcd_Set_Cursor,w
  3319     0603  00B4               	movwf	Lcd_Set_Cursor@z
  3320     0604                     l1591:
  3321                           
  3322                           ;lcd.c: 41:         y = temp & 0x0F;
  3323     0604  0836               	movf	Lcd_Set_Cursor@temp,w
  3324     0605  00B5               	movwf	Lcd_Set_Cursor@y
  3325     0606                     l1593:
  3326     0606  300F               	movlw	15
  3327     0607  05B5               	andwf	Lcd_Set_Cursor@y,f
  3328     0608                     l1595:
  3329                           
  3330                           ;lcd.c: 42:         Lcd_Cmd(z);
  3331     0608  0834               	movf	Lcd_Set_Cursor@z,w
  3332     0609  158A  2622  118A   	fcall	_Lcd_Cmd
  3333     060C                     l1597:
  3334                           
  3335                           ;lcd.c: 43:         Lcd_Cmd(y);
  3336     060C  1283               	bcf	3,5	;RP0=0, select bank0
  3337     060D  1303               	bcf	3,6	;RP1=0, select bank0
  3338     060E  0835               	movf	Lcd_Set_Cursor@y,w
  3339     060F  158A  2622  118A   	fcall	_Lcd_Cmd
  3340                           
  3341                           ;lcd.c: 44:     }
  3342     0612  2E57               	goto	l209
  3343     0613                     l1599:
  3344     0613  3003               	movlw	3
  3345     0614  0633               	xorwf	Lcd_Set_Cursor@a,w
  3346     0615  1D03               	btfss	3,2
  3347     0616  2E18               	goto	u1171
  3348     0617  2E19               	goto	u1170
  3349     0618                     u1171:
  3350     0618  2E35               	goto	l1611
  3351     0619                     u1170:
  3352     0619                     l1601:
  3353                           
  3354                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  3355     0619  0831               	movf	Lcd_Set_Cursor@b,w
  3356     061A  3E93               	addlw	147
  3357     061B  00B6               	movwf	Lcd_Set_Cursor@temp
  3358                           
  3359                           ;lcd.c: 48:         z = temp>>4;
  3360     061C  0836               	movf	Lcd_Set_Cursor@temp,w
  3361     061D  00B2               	movwf	??_Lcd_Set_Cursor
  3362     061E  3004               	movlw	4
  3363     061F                     u1185:
  3364     061F  1003               	clrc
  3365     0620  0CB2               	rrf	??_Lcd_Set_Cursor,f
  3366     0621  3EFF               	addlw	-1
  3367     0622  1D03               	skipz
  3368     0623  2E1F               	goto	u1185
  3369     0624  0832               	movf	??_Lcd_Set_Cursor,w
  3370     0625  00B4               	movwf	Lcd_Set_Cursor@z
  3371     0626                     l1603:
  3372                           
  3373                           ;lcd.c: 49:         y = temp & 0x0F;
  3374     0626  0836               	movf	Lcd_Set_Cursor@temp,w
  3375     0627  00B5               	movwf	Lcd_Set_Cursor@y
  3376     0628                     l1605:
  3377     0628  300F               	movlw	15
  3378     0629  05B5               	andwf	Lcd_Set_Cursor@y,f
  3379     062A                     l1607:
  3380                           
  3381                           ;lcd.c: 50:         Lcd_Cmd(z);
  3382     062A  0834               	movf	Lcd_Set_Cursor@z,w
  3383     062B  158A  2622  118A   	fcall	_Lcd_Cmd
  3384     062E                     l1609:
  3385                           
  3386                           ;lcd.c: 51:         Lcd_Cmd(y);
  3387     062E  1283               	bcf	3,5	;RP0=0, select bank0
  3388     062F  1303               	bcf	3,6	;RP1=0, select bank0
  3389     0630  0835               	movf	Lcd_Set_Cursor@y,w
  3390     0631  158A  2622  118A   	fcall	_Lcd_Cmd
  3391                           
  3392                           ;lcd.c: 52:     }
  3393     0634  2E57               	goto	l209
  3394     0635                     l1611:
  3395     0635  3004               	movlw	4
  3396     0636  0633               	xorwf	Lcd_Set_Cursor@a,w
  3397     0637  1D03               	btfss	3,2
  3398     0638  2E3A               	goto	u1191
  3399     0639  2E3B               	goto	u1190
  3400     063A                     u1191:
  3401     063A  2E57               	goto	l205
  3402     063B                     u1190:
  3403     063B                     l1613:
  3404                           
  3405                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  3406     063B  0831               	movf	Lcd_Set_Cursor@b,w
  3407     063C  3ED3               	addlw	211
  3408     063D  00B6               	movwf	Lcd_Set_Cursor@temp
  3409                           
  3410                           ;lcd.c: 56:         z = temp>>4;
  3411     063E  0836               	movf	Lcd_Set_Cursor@temp,w
  3412     063F  00B2               	movwf	??_Lcd_Set_Cursor
  3413     0640  3004               	movlw	4
  3414     0641                     u1205:
  3415     0641  1003               	clrc
  3416     0642  0CB2               	rrf	??_Lcd_Set_Cursor,f
  3417     0643  3EFF               	addlw	-1
  3418     0644  1D03               	skipz
  3419     0645  2E41               	goto	u1205
  3420     0646  0832               	movf	??_Lcd_Set_Cursor,w
  3421     0647  00B4               	movwf	Lcd_Set_Cursor@z
  3422     0648                     l1615:
  3423                           
  3424                           ;lcd.c: 57:         y = temp & 0x0F;
  3425     0648  0836               	movf	Lcd_Set_Cursor@temp,w
  3426     0649  00B5               	movwf	Lcd_Set_Cursor@y
  3427     064A                     l1617:
  3428     064A  300F               	movlw	15
  3429     064B  05B5               	andwf	Lcd_Set_Cursor@y,f
  3430     064C                     l1619:
  3431                           
  3432                           ;lcd.c: 58:         Lcd_Cmd(z);
  3433     064C  0834               	movf	Lcd_Set_Cursor@z,w
  3434     064D  158A  2622  118A   	fcall	_Lcd_Cmd
  3435     0650                     l1621:
  3436                           
  3437                           ;lcd.c: 59:         Lcd_Cmd(y);
  3438     0650  1283               	bcf	3,5	;RP0=0, select bank0
  3439     0651  1303               	bcf	3,6	;RP1=0, select bank0
  3440     0652  0835               	movf	Lcd_Set_Cursor@y,w
  3441     0653  158A  2622  118A   	fcall	_Lcd_Cmd
  3442     0656  2E57               	goto	l209
  3443     0657                     l205:
  3444     0657                     l209:
  3445     0657  0008               	return
  3446     0658                     __end_of_Lcd_Set_Cursor:
  3447                           
  3448                           	psect	text13
  3449     0DC5                     __ptext13:	
  3450 ;; *************** function _Lcd_Blink *****************
  3451 ;; Defined at:
  3452 ;;		line 123 in file "lcd.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, pclath, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1
  3466 ;;      Params:         0       0       0
  3467 ;;      Locals:         0       0       0
  3468 ;;      Temps:          0       0       0
  3469 ;;      Totals:         0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 6
  3473 ;; This function calls:
  3474 ;;		_Lcd_Cmd
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480     0DC5                     _Lcd_Blink:	
  3481                           ;psect for function _Lcd_Blink
  3482                           
  3483     0DC5                     l1731:	
  3484                           ;incstack = 0
  3485                           ; Regs used in _Lcd_Blink: [wreg+status,2+status,0+pclath+cstack]
  3486                           
  3487                           
  3488                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  3489     0DC5  3000               	movlw	0
  3490     0DC6  158A  2622  158A   	fcall	_Lcd_Cmd
  3491                           
  3492                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  3493     0DC9  300F               	movlw	15
  3494     0DCA  158A  2622  158A   	fcall	_Lcd_Cmd
  3495     0DCD                     l230:
  3496     0DCD  0008               	return
  3497     0DCE                     __end_of_Lcd_Blink:
  3498                           
  3499                           	psect	text14
  3500     0E22                     __ptext14:	
  3501 ;; *************** function _Lcd_Cmd *****************
  3502 ;; Defined at:
  3503 ;;		line 11 in file "lcd.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  a               1    wreg     unsigned char 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  a               1   16[BANK0 ] unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1
  3517 ;;      Params:         0       0       0
  3518 ;;      Locals:         0       1       0
  3519 ;;      Temps:          0       2       0
  3520 ;;      Totals:         0       3       0
  3521 ;;Total ram usage:        3 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 5
  3524 ;; This function calls:
  3525 ;;		_Lcd_Port
  3526 ;; This function is called by:
  3527 ;;		_Lcd_Clear
  3528 ;;		_Lcd_Set_Cursor
  3529 ;;		_Lcd_Init
  3530 ;;		_Lcd_Blink
  3531 ;;		_Lcd_Shift_Right
  3532 ;;		_Lcd_Shift_Left
  3533 ;;		_Lcd_NoBlink
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537     0E22                     _Lcd_Cmd:	
  3538                           ;psect for function _Lcd_Cmd
  3539                           
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3543                           ;Lcd_Cmd@a stored from wreg
  3544     0E22  1283               	bcf	3,5	;RP0=0, select bank0
  3545     0E23  1303               	bcf	3,6	;RP1=0, select bank0
  3546     0E24  00B0               	movwf	Lcd_Cmd@a
  3547     0E25                     l1555:
  3548                           
  3549                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTCbits.RC0 = 0;
  3550     0E25  1007               	bcf	7,0	;volatile
  3551     0E26                     l1557:
  3552                           
  3553                           ;lcd.c: 14:     Lcd_Port(a);
  3554     0E26  0830               	movf	Lcd_Cmd@a,w
  3555     0E27  158A  267A  158A   	fcall	_Lcd_Port
  3556     0E2A                     l1559:
  3557                           
  3558                           ;lcd.c: 15:     PORTCbits.RC2 = 1;
  3559     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  3560     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  3561     0E2C  1507               	bsf	7,2	;volatile
  3562     0E2D                     l1561:
  3563                           
  3564                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3565     0E2D  3006               	movlw	6
  3566     0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3567     0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  3568     0E30  00AF               	movwf	??_Lcd_Cmd+1
  3569     0E31  3030               	movlw	48
  3570     0E32  00AE               	movwf	??_Lcd_Cmd
  3571     0E33                     u2147:
  3572     0E33  0BAE               	decfsz	??_Lcd_Cmd,f
  3573     0E34  2E33               	goto	u2147
  3574     0E35  0BAF               	decfsz	??_Lcd_Cmd+1,f
  3575     0E36  2E33               	goto	u2147
  3576     0E37                     l1563:
  3577                           
  3578                           ;lcd.c: 17:     PORTCbits.RC2 = 0;
  3579     0E37  1283               	bcf	3,5	;RP0=0, select bank0
  3580     0E38  1303               	bcf	3,6	;RP1=0, select bank0
  3581     0E39  1107               	bcf	7,2	;volatile
  3582     0E3A                     l196:
  3583     0E3A  0008               	return
  3584     0E3B                     __end_of_Lcd_Cmd:
  3585                           
  3586                           	psect	text15
  3587     0E7A                     __ptext15:	
  3588 ;; *************** function _Lcd_Port *****************
  3589 ;; Defined at:
  3590 ;;		line 3 in file "lcd.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  a               1    wreg     unsigned char 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  a               1   13[BANK0 ] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1
  3604 ;;      Params:         0       0       0
  3605 ;;      Locals:         0       1       0
  3606 ;;      Temps:          0       0       0
  3607 ;;      Totals:         0       1       0
  3608 ;;Total ram usage:        1 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; Hardware stack levels required when called: 4
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_Lcd_Cmd
  3615 ;;		_Lcd_Init
  3616 ;;		_Lcd_Write_Char
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620     0E7A                     _Lcd_Port:	
  3621                           ;psect for function _Lcd_Port
  3622                           
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in _Lcd_Port: [wreg]
  3626                           ;Lcd_Port@a stored from wreg
  3627     0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  3628     0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  3629     0E7C  00AD               	movwf	Lcd_Port@a
  3630     0E7D                     l1545:
  3631                           
  3632                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  3633     0E7D  1C2D               	btfss	Lcd_Port@a,0
  3634     0E7E  2E80               	goto	u1051
  3635     0E7F  2E81               	goto	u1050
  3636     0E80                     u1051:
  3637     0E80  2E83               	goto	l178
  3638     0E81                     u1050:
  3639     0E81                     l1547:
  3640     0E81  1606               	bsf	6,4	;volatile
  3641     0E82  2E84               	goto	l180
  3642     0E83                     l178:
  3643     0E83  1206               	bcf	6,4	;volatile
  3644     0E84                     l180:
  3645                           
  3646                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  3647     0E84  1CAD               	btfss	Lcd_Port@a,1
  3648     0E85  2E87               	goto	u1061
  3649     0E86  2E88               	goto	u1060
  3650     0E87                     u1061:
  3651     0E87  2E8A               	goto	l182
  3652     0E88                     u1060:
  3653     0E88                     l1549:
  3654     0E88  1686               	bsf	6,5	;volatile
  3655     0E89  2E8B               	goto	l184
  3656     0E8A                     l182:
  3657     0E8A  1286               	bcf	6,5	;volatile
  3658     0E8B                     l184:
  3659                           
  3660                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  3661     0E8B  1D2D               	btfss	Lcd_Port@a,2
  3662     0E8C  2E8E               	goto	u1071
  3663     0E8D  2E8F               	goto	u1070
  3664     0E8E                     u1071:
  3665     0E8E  2E91               	goto	l186
  3666     0E8F                     u1070:
  3667     0E8F                     l1551:
  3668     0E8F  1706               	bsf	6,6	;volatile
  3669     0E90  2E92               	goto	l188
  3670     0E91                     l186:
  3671     0E91  1306               	bcf	6,6	;volatile
  3672     0E92                     l188:
  3673                           
  3674                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  3675     0E92  1DAD               	btfss	Lcd_Port@a,3
  3676     0E93  2E95               	goto	u1081
  3677     0E94  2E96               	goto	u1080
  3678     0E95                     u1081:
  3679     0E95  2E98               	goto	l190
  3680     0E96                     u1080:
  3681     0E96                     l1553:
  3682     0E96  1786               	bsf	6,7	;volatile
  3683     0E97  2E99               	goto	l193
  3684     0E98                     l190:
  3685     0E98  1386               	bcf	6,7	;volatile
  3686     0E99                     l193:
  3687     0E99  0008               	return
  3688     0E9A                     __end_of_Lcd_Port:
  3689                           
  3690                           	psect	text16
  3691     07F9                     __ptext16:	
  3692 ;; *************** function _Keypad_Init *****************
  3693 ;; Defined at:
  3694 ;;		line 3 in file "kbd4x4.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		None
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1
  3708 ;;      Params:         0       0       0
  3709 ;;      Locals:         0       0       0
  3710 ;;      Temps:          0       0       0
  3711 ;;      Totals:         0       0       0
  3712 ;;Total ram usage:        0 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 4
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_main
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722     07F9                     _Keypad_Init:	
  3723                           ;psect for function _Keypad_Init
  3724                           
  3725     07F9                     l1717:	
  3726                           ;incstack = 0
  3727                           ; Regs used in _Keypad_Init: []
  3728                           
  3729                           
  3730                           ;kbd4x4.c: 9:     TRISBbits.TRISB3 = 1;
  3731     07F9  1683               	bsf	3,5	;RP0=1, select bank1
  3732     07FA  1303               	bcf	3,6	;RP1=0, select bank1
  3733     07FB  1586               	bsf	6,3	;volatile
  3734                           
  3735                           ;kbd4x4.c: 10:     TRISBbits.TRISB2 = 1;
  3736     07FC  1506               	bsf	6,2	;volatile
  3737                           
  3738                           ;kbd4x4.c: 11:     TRISBbits.TRISB1 = 1;
  3739     07FD  1486               	bsf	6,1	;volatile
  3740                           
  3741                           ;kbd4x4.c: 12:     TRISBbits.TRISB0 = 1;
  3742     07FE  1406               	bsf	6,0	;volatile
  3743     07FF                     l97:
  3744     07FF  0008               	return
  3745     0800                     __end_of_Keypad_Init:
  3746                           
  3747                           	psect	text17
  3748     0300                     __ptext17:	
  3749 ;; *************** function _Keypad_Get_Char *****************
  3750 ;; Defined at:
  3751 ;;		line 15 in file "kbd4x4.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      unsigned char 
  3758 ;; Registers used:
  3759 ;;		wreg
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1
  3765 ;;      Params:         0       0       0
  3766 ;;      Locals:         0       0       0
  3767 ;;      Temps:          0       2       0
  3768 ;;      Totals:         0       2       0
  3769 ;;Total ram usage:        2 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 4
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779     0300                     _Keypad_Get_Char:	
  3780                           ;psect for function _Keypad_Get_Char
  3781                           
  3782     0300                     l1745:	
  3783                           ;incstack = 0
  3784                           ; Regs used in _Keypad_Get_Char: [wreg]
  3785                           
  3786                           
  3787                           ;kbd4x4.c: 17:     PORTBbits.RB7 = 0;
  3788     0300  1283               	bcf	3,5	;RP0=0, select bank0
  3789     0301  1303               	bcf	3,6	;RP1=0, select bank0
  3790     0302  1386               	bcf	6,7	;volatile
  3791                           
  3792                           ;kbd4x4.c: 18:     PORTBbits.RB6 = 1;
  3793     0303  1706               	bsf	6,6	;volatile
  3794                           
  3795                           ;kbd4x4.c: 19:     PORTBbits.RB5 = 1;
  3796     0304  1686               	bsf	6,5	;volatile
  3797                           
  3798                           ;kbd4x4.c: 20:     PORTBbits.RB4 = 1;
  3799     0305  1606               	bsf	6,4	;volatile
  3800                           
  3801                           ;kbd4x4.c: 21:     if(PORTBbits.RB3 == 0){
  3802     0306  1986               	btfsc	6,3	;volatile
  3803     0307  2B09               	goto	u1381
  3804     0308  2B0A               	goto	u1380
  3805     0309                     u1381:
  3806     0309  2B28               	goto	l100
  3807     030A                     u1380:
  3808     030A                     l1747:
  3809                           
  3810                           ;kbd4x4.c: 22:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3811     030A  3003               	movlw	3
  3812     030B  1283               	bcf	3,5	;RP0=0, select bank0
  3813     030C  1303               	bcf	3,6	;RP1=0, select bank0
  3814     030D  00AE               	movwf	??_Keypad_Get_Char+1
  3815     030E  3097               	movlw	151
  3816     030F  00AD               	movwf	??_Keypad_Get_Char
  3817     0310                     u2157:
  3818     0310  0BAD               	decfsz	??_Keypad_Get_Char,f
  3819     0311  2B10               	goto	u2157
  3820     0312  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  3821     0313  2B10               	goto	u2157
  3822     0314  0000               	nop
  3823     0315                     l101:	
  3824                           ;kbd4x4.c: 23:         while(PORTBbits.RB3 == 0);
  3825                           
  3826     0315  1283               	bcf	3,5	;RP0=0, select bank0
  3827     0316  1303               	bcf	3,6	;RP1=0, select bank0
  3828     0317  1D86               	btfss	6,3	;volatile
  3829     0318  2B1A               	goto	u1391
  3830     0319  2B1B               	goto	u1390
  3831     031A                     u1391:
  3832     031A  2B15               	goto	l101
  3833     031B                     u1390:
  3834     031B                     l1749:
  3835                           
  3836                           ;kbd4x4.c: 24:         _delay((unsigned long)((5)*(4000000/4000.0)));
  3837     031B  3007               	movlw	7
  3838     031C  1283               	bcf	3,5	;RP0=0, select bank0
  3839     031D  1303               	bcf	3,6	;RP1=0, select bank0
  3840     031E  00AE               	movwf	??_Keypad_Get_Char+1
  3841     031F  307C               	movlw	124
  3842     0320  00AD               	movwf	??_Keypad_Get_Char
  3843     0321                     u2167:
  3844     0321  0BAD               	decfsz	??_Keypad_Get_Char,f
  3845     0322  2B21               	goto	u2167
  3846     0323  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  3847     0324  2B21               	goto	u2167
  3848     0325  2B26               	nop2
  3849                           
  3850                           ;kbd4x4.c: 25:         return '1';
  3851     0326  3031               	movlw	49
  3852     0327  2D33               	goto	l104
  3853     0328                     l100:	
  3854                           ;kbd4x4.c: 26:     }
  3855                           
  3856                           
  3857                           ;kbd4x4.c: 27:     if(PORTBbits.RB2 == 0){
  3858     0328  1906               	btfsc	6,2	;volatile
  3859     0329  2B2B               	goto	u1401
  3860     032A  2B2C               	goto	u1400
  3861     032B                     u1401:
  3862     032B  2B4A               	goto	l105
  3863     032C                     u1400:
  3864     032C                     l1753:
  3865                           
  3866                           ;kbd4x4.c: 28:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3867     032C  3003               	movlw	3
  3868     032D  1283               	bcf	3,5	;RP0=0, select bank0
  3869     032E  1303               	bcf	3,6	;RP1=0, select bank0
  3870     032F  00AE               	movwf	??_Keypad_Get_Char+1
  3871     0330  3097               	movlw	151
  3872     0331  00AD               	movwf	??_Keypad_Get_Char
  3873     0332                     u2177:
  3874     0332  0BAD               	decfsz	??_Keypad_Get_Char,f
  3875     0333  2B32               	goto	u2177
  3876     0334  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  3877     0335  2B32               	goto	u2177
  3878     0336  0000               	nop
  3879     0337                     l106:	
  3880                           ;kbd4x4.c: 29:         while(PORTBbits.RB2 == 0);
  3881                           
  3882     0337  1283               	bcf	3,5	;RP0=0, select bank0
  3883     0338  1303               	bcf	3,6	;RP1=0, select bank0
  3884     0339  1D06               	btfss	6,2	;volatile
  3885     033A  2B3C               	goto	u1411
  3886     033B  2B3D               	goto	u1410
  3887     033C                     u1411:
  3888     033C  2B37               	goto	l106
  3889     033D                     u1410:
  3890     033D                     l1755:
  3891                           
  3892                           ;kbd4x4.c: 30:         _delay((unsigned long)((5)*(4000000/4000.0)));
  3893     033D  3007               	movlw	7
  3894     033E  1283               	bcf	3,5	;RP0=0, select bank0
  3895     033F  1303               	bcf	3,6	;RP1=0, select bank0
  3896     0340  00AE               	movwf	??_Keypad_Get_Char+1
  3897     0341  307C               	movlw	124
  3898     0342  00AD               	movwf	??_Keypad_Get_Char
  3899     0343                     u2187:
  3900     0343  0BAD               	decfsz	??_Keypad_Get_Char,f
  3901     0344  2B43               	goto	u2187
  3902     0345  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  3903     0346  2B43               	goto	u2187
  3904     0347  2B48               	nop2
  3905                           
  3906                           ;kbd4x4.c: 31:         return '2';
  3907     0348  3032               	movlw	50
  3908     0349  2D33               	goto	l104
  3909     034A                     l105:	
  3910                           ;kbd4x4.c: 32:     }
  3911                           
  3912                           
  3913                           ;kbd4x4.c: 33:     if(PORTBbits.RB1 == 0){
  3914     034A  1886               	btfsc	6,1	;volatile
  3915     034B  2B4D               	goto	u1421
  3916     034C  2B4E               	goto	u1420
  3917     034D                     u1421:
  3918     034D  2B6C               	goto	l109
  3919     034E                     u1420:
  3920     034E                     l1759:
  3921                           
  3922                           ;kbd4x4.c: 34:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3923     034E  3003               	movlw	3
  3924     034F  1283               	bcf	3,5	;RP0=0, select bank0
  3925     0350  1303               	bcf	3,6	;RP1=0, select bank0
  3926     0351  00AE               	movwf	??_Keypad_Get_Char+1
  3927     0352  3097               	movlw	151
  3928     0353  00AD               	movwf	??_Keypad_Get_Char
  3929     0354                     u2197:
  3930     0354  0BAD               	decfsz	??_Keypad_Get_Char,f
  3931     0355  2B54               	goto	u2197
  3932     0356  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  3933     0357  2B54               	goto	u2197
  3934     0358  0000               	nop
  3935     0359                     l110:	
  3936                           ;kbd4x4.c: 35:         while(PORTBbits.RB1 == 0);
  3937                           
  3938     0359  1283               	bcf	3,5	;RP0=0, select bank0
  3939     035A  1303               	bcf	3,6	;RP1=0, select bank0
  3940     035B  1C86               	btfss	6,1	;volatile
  3941     035C  2B5E               	goto	u1431
  3942     035D  2B5F               	goto	u1430
  3943     035E                     u1431:
  3944     035E  2B59               	goto	l110
  3945     035F                     u1430:
  3946     035F                     l1761:
  3947                           
  3948                           ;kbd4x4.c: 36:         _delay((unsigned long)((5)*(4000000/4000.0)));
  3949     035F  3007               	movlw	7
  3950     0360  1283               	bcf	3,5	;RP0=0, select bank0
  3951     0361  1303               	bcf	3,6	;RP1=0, select bank0
  3952     0362  00AE               	movwf	??_Keypad_Get_Char+1
  3953     0363  307C               	movlw	124
  3954     0364  00AD               	movwf	??_Keypad_Get_Char
  3955     0365                     u2207:
  3956     0365  0BAD               	decfsz	??_Keypad_Get_Char,f
  3957     0366  2B65               	goto	u2207
  3958     0367  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  3959     0368  2B65               	goto	u2207
  3960     0369  2B6A               	nop2
  3961                           
  3962                           ;kbd4x4.c: 37:         return '3';
  3963     036A  3033               	movlw	51
  3964     036B  2D33               	goto	l104
  3965     036C                     l109:	
  3966                           ;kbd4x4.c: 38:     }
  3967                           
  3968                           
  3969                           ;kbd4x4.c: 39:     if(PORTBbits.RB0 == 0){
  3970     036C  1806               	btfsc	6,0	;volatile
  3971     036D  2B6F               	goto	u1441
  3972     036E  2B70               	goto	u1440
  3973     036F                     u1441:
  3974     036F  2B8E               	goto	l113
  3975     0370                     u1440:
  3976     0370                     l1765:
  3977                           
  3978                           ;kbd4x4.c: 40:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3979     0370  3003               	movlw	3
  3980     0371  1283               	bcf	3,5	;RP0=0, select bank0
  3981     0372  1303               	bcf	3,6	;RP1=0, select bank0
  3982     0373  00AE               	movwf	??_Keypad_Get_Char+1
  3983     0374  3097               	movlw	151
  3984     0375  00AD               	movwf	??_Keypad_Get_Char
  3985     0376                     u2217:
  3986     0376  0BAD               	decfsz	??_Keypad_Get_Char,f
  3987     0377  2B76               	goto	u2217
  3988     0378  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  3989     0379  2B76               	goto	u2217
  3990     037A  0000               	nop
  3991     037B                     l114:	
  3992                           ;kbd4x4.c: 41:         while(PORTBbits.RB0 == 0);
  3993                           
  3994     037B  1283               	bcf	3,5	;RP0=0, select bank0
  3995     037C  1303               	bcf	3,6	;RP1=0, select bank0
  3996     037D  1C06               	btfss	6,0	;volatile
  3997     037E  2B80               	goto	u1451
  3998     037F  2B81               	goto	u1450
  3999     0380                     u1451:
  4000     0380  2B7B               	goto	l114
  4001     0381                     u1450:
  4002     0381                     l1767:
  4003                           
  4004                           ;kbd4x4.c: 42:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4005     0381  3007               	movlw	7
  4006     0382  1283               	bcf	3,5	;RP0=0, select bank0
  4007     0383  1303               	bcf	3,6	;RP1=0, select bank0
  4008     0384  00AE               	movwf	??_Keypad_Get_Char+1
  4009     0385  307C               	movlw	124
  4010     0386  00AD               	movwf	??_Keypad_Get_Char
  4011     0387                     u2227:
  4012     0387  0BAD               	decfsz	??_Keypad_Get_Char,f
  4013     0388  2B87               	goto	u2227
  4014     0389  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4015     038A  2B87               	goto	u2227
  4016     038B  2B8C               	nop2
  4017                           
  4018                           ;kbd4x4.c: 43:         return 'A';
  4019     038C  3041               	movlw	65
  4020     038D  2D33               	goto	l104
  4021     038E                     l113:	
  4022                           ;kbd4x4.c: 44:     }
  4023                           
  4024                           
  4025                           ;kbd4x4.c: 46:     PORTBbits.RB7 = 1;
  4026     038E  1786               	bsf	6,7	;volatile
  4027                           
  4028                           ;kbd4x4.c: 47:     PORTBbits.RB6 = 0;
  4029     038F  1306               	bcf	6,6	;volatile
  4030                           
  4031                           ;kbd4x4.c: 48:     PORTBbits.RB5 = 1;
  4032     0390  1686               	bsf	6,5	;volatile
  4033                           
  4034                           ;kbd4x4.c: 49:     PORTBbits.RB4 = 1;
  4035     0391  1606               	bsf	6,4	;volatile
  4036                           
  4037                           ;kbd4x4.c: 50:     if(PORTBbits.RB3 == 0){
  4038     0392  1986               	btfsc	6,3	;volatile
  4039     0393  2B95               	goto	u1461
  4040     0394  2B96               	goto	u1460
  4041     0395                     u1461:
  4042     0395  2BB4               	goto	l117
  4043     0396                     u1460:
  4044     0396                     l1771:
  4045                           
  4046                           ;kbd4x4.c: 51:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4047     0396  3003               	movlw	3
  4048     0397  1283               	bcf	3,5	;RP0=0, select bank0
  4049     0398  1303               	bcf	3,6	;RP1=0, select bank0
  4050     0399  00AE               	movwf	??_Keypad_Get_Char+1
  4051     039A  3097               	movlw	151
  4052     039B  00AD               	movwf	??_Keypad_Get_Char
  4053     039C                     u2237:
  4054     039C  0BAD               	decfsz	??_Keypad_Get_Char,f
  4055     039D  2B9C               	goto	u2237
  4056     039E  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4057     039F  2B9C               	goto	u2237
  4058     03A0  0000               	nop
  4059     03A1                     l118:	
  4060                           ;kbd4x4.c: 52:         while(PORTBbits.RB3 == 0);
  4061                           
  4062     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  4063     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  4064     03A3  1D86               	btfss	6,3	;volatile
  4065     03A4  2BA6               	goto	u1471
  4066     03A5  2BA7               	goto	u1470
  4067     03A6                     u1471:
  4068     03A6  2BA1               	goto	l118
  4069     03A7                     u1470:
  4070     03A7                     l1773:
  4071                           
  4072                           ;kbd4x4.c: 53:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4073     03A7  3007               	movlw	7
  4074     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  4075     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  4076     03AA  00AE               	movwf	??_Keypad_Get_Char+1
  4077     03AB  307C               	movlw	124
  4078     03AC  00AD               	movwf	??_Keypad_Get_Char
  4079     03AD                     u2247:
  4080     03AD  0BAD               	decfsz	??_Keypad_Get_Char,f
  4081     03AE  2BAD               	goto	u2247
  4082     03AF  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4083     03B0  2BAD               	goto	u2247
  4084     03B1  2BB2               	nop2
  4085                           
  4086                           ;kbd4x4.c: 54:         return '4';
  4087     03B2  3034               	movlw	52
  4088     03B3  2D33               	goto	l104
  4089     03B4                     l117:	
  4090                           ;kbd4x4.c: 55:     }
  4091                           
  4092                           
  4093                           ;kbd4x4.c: 56:     if(PORTBbits.RB2 == 0){
  4094     03B4  1906               	btfsc	6,2	;volatile
  4095     03B5  2BB7               	goto	u1481
  4096     03B6  2BB8               	goto	u1480
  4097     03B7                     u1481:
  4098     03B7  2BD6               	goto	l121
  4099     03B8                     u1480:
  4100     03B8                     l1777:
  4101                           
  4102                           ;kbd4x4.c: 57:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4103     03B8  3003               	movlw	3
  4104     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  4105     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  4106     03BB  00AE               	movwf	??_Keypad_Get_Char+1
  4107     03BC  3097               	movlw	151
  4108     03BD  00AD               	movwf	??_Keypad_Get_Char
  4109     03BE                     u2257:
  4110     03BE  0BAD               	decfsz	??_Keypad_Get_Char,f
  4111     03BF  2BBE               	goto	u2257
  4112     03C0  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4113     03C1  2BBE               	goto	u2257
  4114     03C2  0000               	nop
  4115     03C3                     l122:	
  4116                           ;kbd4x4.c: 58:         while(PORTBbits.RB2 == 0);
  4117                           
  4118     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  4119     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  4120     03C5  1D06               	btfss	6,2	;volatile
  4121     03C6  2BC8               	goto	u1491
  4122     03C7  2BC9               	goto	u1490
  4123     03C8                     u1491:
  4124     03C8  2BC3               	goto	l122
  4125     03C9                     u1490:
  4126     03C9                     l1779:
  4127                           
  4128                           ;kbd4x4.c: 59:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4129     03C9  3007               	movlw	7
  4130     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  4131     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  4132     03CC  00AE               	movwf	??_Keypad_Get_Char+1
  4133     03CD  307C               	movlw	124
  4134     03CE  00AD               	movwf	??_Keypad_Get_Char
  4135     03CF                     u2267:
  4136     03CF  0BAD               	decfsz	??_Keypad_Get_Char,f
  4137     03D0  2BCF               	goto	u2267
  4138     03D1  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4139     03D2  2BCF               	goto	u2267
  4140     03D3  2BD4               	nop2
  4141                           
  4142                           ;kbd4x4.c: 60:         return '5';
  4143     03D4  3035               	movlw	53
  4144     03D5  2D33               	goto	l104
  4145     03D6                     l121:	
  4146                           ;kbd4x4.c: 61:     }
  4147                           
  4148                           
  4149                           ;kbd4x4.c: 62:     if(PORTBbits.RB1 == 0){
  4150     03D6  1886               	btfsc	6,1	;volatile
  4151     03D7  2BD9               	goto	u1501
  4152     03D8  2BDA               	goto	u1500
  4153     03D9                     u1501:
  4154     03D9  2BF8               	goto	l125
  4155     03DA                     u1500:
  4156     03DA                     l1783:
  4157                           
  4158                           ;kbd4x4.c: 63:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4159     03DA  3003               	movlw	3
  4160     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  4161     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  4162     03DD  00AE               	movwf	??_Keypad_Get_Char+1
  4163     03DE  3097               	movlw	151
  4164     03DF  00AD               	movwf	??_Keypad_Get_Char
  4165     03E0                     u2277:
  4166     03E0  0BAD               	decfsz	??_Keypad_Get_Char,f
  4167     03E1  2BE0               	goto	u2277
  4168     03E2  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4169     03E3  2BE0               	goto	u2277
  4170     03E4  0000               	nop
  4171     03E5                     l126:	
  4172                           ;kbd4x4.c: 64:         while(PORTBbits.RB1 == 0);
  4173                           
  4174     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  4175     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  4176     03E7  1C86               	btfss	6,1	;volatile
  4177     03E8  2BEA               	goto	u1511
  4178     03E9  2BEB               	goto	u1510
  4179     03EA                     u1511:
  4180     03EA  2BE5               	goto	l126
  4181     03EB                     u1510:
  4182     03EB                     l1785:
  4183                           
  4184                           ;kbd4x4.c: 65:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4185     03EB  3007               	movlw	7
  4186     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  4187     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  4188     03EE  00AE               	movwf	??_Keypad_Get_Char+1
  4189     03EF  307C               	movlw	124
  4190     03F0  00AD               	movwf	??_Keypad_Get_Char
  4191     03F1                     u2287:
  4192     03F1  0BAD               	decfsz	??_Keypad_Get_Char,f
  4193     03F2  2BF1               	goto	u2287
  4194     03F3  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4195     03F4  2BF1               	goto	u2287
  4196     03F5  2BF6               	nop2
  4197                           
  4198                           ;kbd4x4.c: 66:         return '6';
  4199     03F6  3036               	movlw	54
  4200     03F7  2D33               	goto	l104
  4201     03F8                     l125:	
  4202                           ;kbd4x4.c: 67:     }
  4203                           
  4204                           
  4205                           ;kbd4x4.c: 68:     if(PORTBbits.RB0 == 0){
  4206     03F8  1806               	btfsc	6,0	;volatile
  4207     03F9  2BFB               	goto	u1521
  4208     03FA  2BFC               	goto	u1520
  4209     03FB                     u1521:
  4210     03FB  2C1A               	goto	l129
  4211     03FC                     u1520:
  4212     03FC                     l1789:
  4213                           
  4214                           ;kbd4x4.c: 69:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4215     03FC  3003               	movlw	3
  4216     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  4217     03FE  1303               	bcf	3,6	;RP1=0, select bank0
  4218     03FF  00AE               	movwf	??_Keypad_Get_Char+1
  4219     0400  3097               	movlw	151
  4220     0401  00AD               	movwf	??_Keypad_Get_Char
  4221     0402                     u2297:
  4222     0402  0BAD               	decfsz	??_Keypad_Get_Char,f
  4223     0403  2C02               	goto	u2297
  4224     0404  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4225     0405  2C02               	goto	u2297
  4226     0406  0000               	nop
  4227     0407                     l130:	
  4228                           ;kbd4x4.c: 70:         while(PORTBbits.RB0 == 0);
  4229                           
  4230     0407  1283               	bcf	3,5	;RP0=0, select bank0
  4231     0408  1303               	bcf	3,6	;RP1=0, select bank0
  4232     0409  1C06               	btfss	6,0	;volatile
  4233     040A  2C0C               	goto	u1531
  4234     040B  2C0D               	goto	u1530
  4235     040C                     u1531:
  4236     040C  2C07               	goto	l130
  4237     040D                     u1530:
  4238     040D                     l1791:
  4239                           
  4240                           ;kbd4x4.c: 71:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4241     040D  3007               	movlw	7
  4242     040E  1283               	bcf	3,5	;RP0=0, select bank0
  4243     040F  1303               	bcf	3,6	;RP1=0, select bank0
  4244     0410  00AE               	movwf	??_Keypad_Get_Char+1
  4245     0411  307C               	movlw	124
  4246     0412  00AD               	movwf	??_Keypad_Get_Char
  4247     0413                     u2307:
  4248     0413  0BAD               	decfsz	??_Keypad_Get_Char,f
  4249     0414  2C13               	goto	u2307
  4250     0415  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4251     0416  2C13               	goto	u2307
  4252     0417  2C18               	nop2
  4253                           
  4254                           ;kbd4x4.c: 72:         return 'B';
  4255     0418  3042               	movlw	66
  4256     0419  2D33               	goto	l104
  4257     041A                     l129:	
  4258                           ;kbd4x4.c: 73:     }
  4259                           
  4260                           
  4261                           ;kbd4x4.c: 75:     PORTBbits.RB7 = 1;
  4262     041A  1786               	bsf	6,7	;volatile
  4263                           
  4264                           ;kbd4x4.c: 76:     PORTBbits.RB6 = 1;
  4265     041B  1706               	bsf	6,6	;volatile
  4266                           
  4267                           ;kbd4x4.c: 77:     PORTBbits.RB5 = 0;
  4268     041C  1286               	bcf	6,5	;volatile
  4269                           
  4270                           ;kbd4x4.c: 78:     PORTBbits.RB4 = 1;
  4271     041D  1606               	bsf	6,4	;volatile
  4272                           
  4273                           ;kbd4x4.c: 79:     if(PORTBbits.RB3 == 0){
  4274     041E  1986               	btfsc	6,3	;volatile
  4275     041F  2C21               	goto	u1541
  4276     0420  2C22               	goto	u1540
  4277     0421                     u1541:
  4278     0421  2C40               	goto	l133
  4279     0422                     u1540:
  4280     0422                     l1795:
  4281                           
  4282                           ;kbd4x4.c: 80:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4283     0422  3003               	movlw	3
  4284     0423  1283               	bcf	3,5	;RP0=0, select bank0
  4285     0424  1303               	bcf	3,6	;RP1=0, select bank0
  4286     0425  00AE               	movwf	??_Keypad_Get_Char+1
  4287     0426  3097               	movlw	151
  4288     0427  00AD               	movwf	??_Keypad_Get_Char
  4289     0428                     u2317:
  4290     0428  0BAD               	decfsz	??_Keypad_Get_Char,f
  4291     0429  2C28               	goto	u2317
  4292     042A  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4293     042B  2C28               	goto	u2317
  4294     042C  0000               	nop
  4295     042D                     l134:	
  4296                           ;kbd4x4.c: 81:         while(PORTBbits.RB3 == 0);
  4297                           
  4298     042D  1283               	bcf	3,5	;RP0=0, select bank0
  4299     042E  1303               	bcf	3,6	;RP1=0, select bank0
  4300     042F  1D86               	btfss	6,3	;volatile
  4301     0430  2C32               	goto	u1551
  4302     0431  2C33               	goto	u1550
  4303     0432                     u1551:
  4304     0432  2C2D               	goto	l134
  4305     0433                     u1550:
  4306     0433                     l1797:
  4307                           
  4308                           ;kbd4x4.c: 82:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4309     0433  3007               	movlw	7
  4310     0434  1283               	bcf	3,5	;RP0=0, select bank0
  4311     0435  1303               	bcf	3,6	;RP1=0, select bank0
  4312     0436  00AE               	movwf	??_Keypad_Get_Char+1
  4313     0437  307C               	movlw	124
  4314     0438  00AD               	movwf	??_Keypad_Get_Char
  4315     0439                     u2327:
  4316     0439  0BAD               	decfsz	??_Keypad_Get_Char,f
  4317     043A  2C39               	goto	u2327
  4318     043B  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4319     043C  2C39               	goto	u2327
  4320     043D  2C3E               	nop2
  4321                           
  4322                           ;kbd4x4.c: 83:         return '7';
  4323     043E  3037               	movlw	55
  4324     043F  2D33               	goto	l104
  4325     0440                     l133:	
  4326                           ;kbd4x4.c: 84:     }
  4327                           
  4328                           
  4329                           ;kbd4x4.c: 85:     if(PORTBbits.RB2 == 0){
  4330     0440  1906               	btfsc	6,2	;volatile
  4331     0441  2C43               	goto	u1561
  4332     0442  2C44               	goto	u1560
  4333     0443                     u1561:
  4334     0443  2C62               	goto	l137
  4335     0444                     u1560:
  4336     0444                     l1801:
  4337                           
  4338                           ;kbd4x4.c: 86:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4339     0444  3003               	movlw	3
  4340     0445  1283               	bcf	3,5	;RP0=0, select bank0
  4341     0446  1303               	bcf	3,6	;RP1=0, select bank0
  4342     0447  00AE               	movwf	??_Keypad_Get_Char+1
  4343     0448  3097               	movlw	151
  4344     0449  00AD               	movwf	??_Keypad_Get_Char
  4345     044A                     u2337:
  4346     044A  0BAD               	decfsz	??_Keypad_Get_Char,f
  4347     044B  2C4A               	goto	u2337
  4348     044C  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4349     044D  2C4A               	goto	u2337
  4350     044E  0000               	nop
  4351     044F                     l138:	
  4352                           ;kbd4x4.c: 87:         while(PORTBbits.RB2 == 0);
  4353                           
  4354     044F  1283               	bcf	3,5	;RP0=0, select bank0
  4355     0450  1303               	bcf	3,6	;RP1=0, select bank0
  4356     0451  1D06               	btfss	6,2	;volatile
  4357     0452  2C54               	goto	u1571
  4358     0453  2C55               	goto	u1570
  4359     0454                     u1571:
  4360     0454  2C4F               	goto	l138
  4361     0455                     u1570:
  4362     0455                     l1803:
  4363                           
  4364                           ;kbd4x4.c: 88:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4365     0455  3007               	movlw	7
  4366     0456  1283               	bcf	3,5	;RP0=0, select bank0
  4367     0457  1303               	bcf	3,6	;RP1=0, select bank0
  4368     0458  00AE               	movwf	??_Keypad_Get_Char+1
  4369     0459  307C               	movlw	124
  4370     045A  00AD               	movwf	??_Keypad_Get_Char
  4371     045B                     u2347:
  4372     045B  0BAD               	decfsz	??_Keypad_Get_Char,f
  4373     045C  2C5B               	goto	u2347
  4374     045D  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4375     045E  2C5B               	goto	u2347
  4376     045F  2C60               	nop2
  4377                           
  4378                           ;kbd4x4.c: 89:         return '8';
  4379     0460  3038               	movlw	56
  4380     0461  2D33               	goto	l104
  4381     0462                     l137:	
  4382                           ;kbd4x4.c: 90:     }
  4383                           
  4384                           
  4385                           ;kbd4x4.c: 91:     if(PORTBbits.RB1 == 0){
  4386     0462  1886               	btfsc	6,1	;volatile
  4387     0463  2C65               	goto	u1581
  4388     0464  2C66               	goto	u1580
  4389     0465                     u1581:
  4390     0465  2C84               	goto	l141
  4391     0466                     u1580:
  4392     0466                     l1807:
  4393                           
  4394                           ;kbd4x4.c: 92:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4395     0466  3003               	movlw	3
  4396     0467  1283               	bcf	3,5	;RP0=0, select bank0
  4397     0468  1303               	bcf	3,6	;RP1=0, select bank0
  4398     0469  00AE               	movwf	??_Keypad_Get_Char+1
  4399     046A  3097               	movlw	151
  4400     046B  00AD               	movwf	??_Keypad_Get_Char
  4401     046C                     u2357:
  4402     046C  0BAD               	decfsz	??_Keypad_Get_Char,f
  4403     046D  2C6C               	goto	u2357
  4404     046E  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4405     046F  2C6C               	goto	u2357
  4406     0470  0000               	nop
  4407     0471                     l142:	
  4408                           ;kbd4x4.c: 93:         while(PORTBbits.RB1 == 0);
  4409                           
  4410     0471  1283               	bcf	3,5	;RP0=0, select bank0
  4411     0472  1303               	bcf	3,6	;RP1=0, select bank0
  4412     0473  1C86               	btfss	6,1	;volatile
  4413     0474  2C76               	goto	u1591
  4414     0475  2C77               	goto	u1590
  4415     0476                     u1591:
  4416     0476  2C71               	goto	l142
  4417     0477                     u1590:
  4418     0477                     l1809:
  4419                           
  4420                           ;kbd4x4.c: 94:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4421     0477  3007               	movlw	7
  4422     0478  1283               	bcf	3,5	;RP0=0, select bank0
  4423     0479  1303               	bcf	3,6	;RP1=0, select bank0
  4424     047A  00AE               	movwf	??_Keypad_Get_Char+1
  4425     047B  307C               	movlw	124
  4426     047C  00AD               	movwf	??_Keypad_Get_Char
  4427     047D                     u2367:
  4428     047D  0BAD               	decfsz	??_Keypad_Get_Char,f
  4429     047E  2C7D               	goto	u2367
  4430     047F  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4431     0480  2C7D               	goto	u2367
  4432     0481  2C82               	nop2
  4433                           
  4434                           ;kbd4x4.c: 95:         return '9';
  4435     0482  3039               	movlw	57
  4436     0483  2D33               	goto	l104
  4437     0484                     l141:	
  4438                           ;kbd4x4.c: 96:     }
  4439                           
  4440                           
  4441                           ;kbd4x4.c: 97:     if(PORTBbits.RB0 == 0){
  4442     0484  1806               	btfsc	6,0	;volatile
  4443     0485  2C87               	goto	u1601
  4444     0486  2C88               	goto	u1600
  4445     0487                     u1601:
  4446     0487  2CA6               	goto	l145
  4447     0488                     u1600:
  4448     0488                     l1813:
  4449                           
  4450                           ;kbd4x4.c: 98:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4451     0488  3003               	movlw	3
  4452     0489  1283               	bcf	3,5	;RP0=0, select bank0
  4453     048A  1303               	bcf	3,6	;RP1=0, select bank0
  4454     048B  00AE               	movwf	??_Keypad_Get_Char+1
  4455     048C  3097               	movlw	151
  4456     048D  00AD               	movwf	??_Keypad_Get_Char
  4457     048E                     u2377:
  4458     048E  0BAD               	decfsz	??_Keypad_Get_Char,f
  4459     048F  2C8E               	goto	u2377
  4460     0490  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4461     0491  2C8E               	goto	u2377
  4462     0492  0000               	nop
  4463     0493                     l146:	
  4464                           ;kbd4x4.c: 99:         while(PORTBbits.RB0 == 0);
  4465                           
  4466     0493  1283               	bcf	3,5	;RP0=0, select bank0
  4467     0494  1303               	bcf	3,6	;RP1=0, select bank0
  4468     0495  1C06               	btfss	6,0	;volatile
  4469     0496  2C98               	goto	u1611
  4470     0497  2C99               	goto	u1610
  4471     0498                     u1611:
  4472     0498  2C93               	goto	l146
  4473     0499                     u1610:
  4474     0499                     l1815:
  4475                           
  4476                           ;kbd4x4.c: 100:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4477     0499  3007               	movlw	7
  4478     049A  1283               	bcf	3,5	;RP0=0, select bank0
  4479     049B  1303               	bcf	3,6	;RP1=0, select bank0
  4480     049C  00AE               	movwf	??_Keypad_Get_Char+1
  4481     049D  307C               	movlw	124
  4482     049E  00AD               	movwf	??_Keypad_Get_Char
  4483     049F                     u2387:
  4484     049F  0BAD               	decfsz	??_Keypad_Get_Char,f
  4485     04A0  2C9F               	goto	u2387
  4486     04A1  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4487     04A2  2C9F               	goto	u2387
  4488     04A3  2CA4               	nop2
  4489                           
  4490                           ;kbd4x4.c: 101:         return 'C';
  4491     04A4  3043               	movlw	67
  4492     04A5  2D33               	goto	l104
  4493     04A6                     l145:	
  4494                           ;kbd4x4.c: 102:     }
  4495                           
  4496                           
  4497                           ;kbd4x4.c: 104:     PORTBbits.RB7 = 1;
  4498     04A6  1786               	bsf	6,7	;volatile
  4499                           
  4500                           ;kbd4x4.c: 105:     PORTBbits.RB6 = 1;
  4501     04A7  1706               	bsf	6,6	;volatile
  4502                           
  4503                           ;kbd4x4.c: 106:     PORTBbits.RB5 = 1;
  4504     04A8  1686               	bsf	6,5	;volatile
  4505                           
  4506                           ;kbd4x4.c: 107:     PORTBbits.RB4 = 0;
  4507     04A9  1206               	bcf	6,4	;volatile
  4508                           
  4509                           ;kbd4x4.c: 108:     if(PORTBbits.RB3 == 0){
  4510     04AA  1986               	btfsc	6,3	;volatile
  4511     04AB  2CAD               	goto	u1621
  4512     04AC  2CAE               	goto	u1620
  4513     04AD                     u1621:
  4514     04AD  2CCC               	goto	l149
  4515     04AE                     u1620:
  4516     04AE                     l1819:
  4517                           
  4518                           ;kbd4x4.c: 109:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4519     04AE  3003               	movlw	3
  4520     04AF  1283               	bcf	3,5	;RP0=0, select bank0
  4521     04B0  1303               	bcf	3,6	;RP1=0, select bank0
  4522     04B1  00AE               	movwf	??_Keypad_Get_Char+1
  4523     04B2  3097               	movlw	151
  4524     04B3  00AD               	movwf	??_Keypad_Get_Char
  4525     04B4                     u2397:
  4526     04B4  0BAD               	decfsz	??_Keypad_Get_Char,f
  4527     04B5  2CB4               	goto	u2397
  4528     04B6  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4529     04B7  2CB4               	goto	u2397
  4530     04B8  0000               	nop
  4531     04B9                     l150:	
  4532                           ;kbd4x4.c: 110:         while(PORTBbits.RB3 == 0);
  4533                           
  4534     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  4535     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  4536     04BB  1D86               	btfss	6,3	;volatile
  4537     04BC  2CBE               	goto	u1631
  4538     04BD  2CBF               	goto	u1630
  4539     04BE                     u1631:
  4540     04BE  2CB9               	goto	l150
  4541     04BF                     u1630:
  4542     04BF                     l1821:
  4543                           
  4544                           ;kbd4x4.c: 111:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4545     04BF  3007               	movlw	7
  4546     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  4547     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  4548     04C2  00AE               	movwf	??_Keypad_Get_Char+1
  4549     04C3  307C               	movlw	124
  4550     04C4  00AD               	movwf	??_Keypad_Get_Char
  4551     04C5                     u2407:
  4552     04C5  0BAD               	decfsz	??_Keypad_Get_Char,f
  4553     04C6  2CC5               	goto	u2407
  4554     04C7  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4555     04C8  2CC5               	goto	u2407
  4556     04C9  2CCA               	nop2
  4557                           
  4558                           ;kbd4x4.c: 112:         return '*';
  4559     04CA  302A               	movlw	42
  4560     04CB  2D33               	goto	l104
  4561     04CC                     l149:	
  4562                           ;kbd4x4.c: 113:     }
  4563                           
  4564                           
  4565                           ;kbd4x4.c: 114:     if(PORTBbits.RB2 == 0){
  4566     04CC  1906               	btfsc	6,2	;volatile
  4567     04CD  2CCF               	goto	u1641
  4568     04CE  2CD0               	goto	u1640
  4569     04CF                     u1641:
  4570     04CF  2CEE               	goto	l153
  4571     04D0                     u1640:
  4572     04D0                     l1825:
  4573                           
  4574                           ;kbd4x4.c: 115:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4575     04D0  3003               	movlw	3
  4576     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  4577     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  4578     04D3  00AE               	movwf	??_Keypad_Get_Char+1
  4579     04D4  3097               	movlw	151
  4580     04D5  00AD               	movwf	??_Keypad_Get_Char
  4581     04D6                     u2417:
  4582     04D6  0BAD               	decfsz	??_Keypad_Get_Char,f
  4583     04D7  2CD6               	goto	u2417
  4584     04D8  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4585     04D9  2CD6               	goto	u2417
  4586     04DA  0000               	nop
  4587     04DB                     l154:	
  4588                           ;kbd4x4.c: 116:         while(PORTBbits.RB2 == 0);
  4589                           
  4590     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  4591     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  4592     04DD  1D06               	btfss	6,2	;volatile
  4593     04DE  2CE0               	goto	u1651
  4594     04DF  2CE1               	goto	u1650
  4595     04E0                     u1651:
  4596     04E0  2CDB               	goto	l154
  4597     04E1                     u1650:
  4598     04E1                     l1827:
  4599                           
  4600                           ;kbd4x4.c: 117:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4601     04E1  3007               	movlw	7
  4602     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  4603     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  4604     04E4  00AE               	movwf	??_Keypad_Get_Char+1
  4605     04E5  307C               	movlw	124
  4606     04E6  00AD               	movwf	??_Keypad_Get_Char
  4607     04E7                     u2427:
  4608     04E7  0BAD               	decfsz	??_Keypad_Get_Char,f
  4609     04E8  2CE7               	goto	u2427
  4610     04E9  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4611     04EA  2CE7               	goto	u2427
  4612     04EB  2CEC               	nop2
  4613                           
  4614                           ;kbd4x4.c: 118:         return '0';
  4615     04EC  3030               	movlw	48
  4616     04ED  2D33               	goto	l104
  4617     04EE                     l153:	
  4618                           ;kbd4x4.c: 119:     }
  4619                           
  4620                           
  4621                           ;kbd4x4.c: 120:     if(PORTBbits.RB1 == 0){
  4622     04EE  1886               	btfsc	6,1	;volatile
  4623     04EF  2CF1               	goto	u1661
  4624     04F0  2CF2               	goto	u1660
  4625     04F1                     u1661:
  4626     04F1  2D10               	goto	l157
  4627     04F2                     u1660:
  4628     04F2                     l1831:
  4629                           
  4630                           ;kbd4x4.c: 121:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4631     04F2  3003               	movlw	3
  4632     04F3  1283               	bcf	3,5	;RP0=0, select bank0
  4633     04F4  1303               	bcf	3,6	;RP1=0, select bank0
  4634     04F5  00AE               	movwf	??_Keypad_Get_Char+1
  4635     04F6  3097               	movlw	151
  4636     04F7  00AD               	movwf	??_Keypad_Get_Char
  4637     04F8                     u2437:
  4638     04F8  0BAD               	decfsz	??_Keypad_Get_Char,f
  4639     04F9  2CF8               	goto	u2437
  4640     04FA  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4641     04FB  2CF8               	goto	u2437
  4642     04FC  0000               	nop
  4643     04FD                     l158:	
  4644                           ;kbd4x4.c: 122:         while(PORTBbits.RB1 == 0);
  4645                           
  4646     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  4647     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  4648     04FF  1C86               	btfss	6,1	;volatile
  4649     0500  2D02               	goto	u1671
  4650     0501  2D03               	goto	u1670
  4651     0502                     u1671:
  4652     0502  2CFD               	goto	l158
  4653     0503                     u1670:
  4654     0503                     l1833:
  4655                           
  4656                           ;kbd4x4.c: 123:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4657     0503  3007               	movlw	7
  4658     0504  1283               	bcf	3,5	;RP0=0, select bank0
  4659     0505  1303               	bcf	3,6	;RP1=0, select bank0
  4660     0506  00AE               	movwf	??_Keypad_Get_Char+1
  4661     0507  307C               	movlw	124
  4662     0508  00AD               	movwf	??_Keypad_Get_Char
  4663     0509                     u2447:
  4664     0509  0BAD               	decfsz	??_Keypad_Get_Char,f
  4665     050A  2D09               	goto	u2447
  4666     050B  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4667     050C  2D09               	goto	u2447
  4668     050D  2D0E               	nop2
  4669                           
  4670                           ;kbd4x4.c: 124:         return '#';
  4671     050E  3023               	movlw	35
  4672     050F  2D33               	goto	l104
  4673     0510                     l157:	
  4674                           ;kbd4x4.c: 125:     }
  4675                           
  4676                           
  4677                           ;kbd4x4.c: 126:     if(PORTBbits.RB0 == 0){
  4678     0510  1806               	btfsc	6,0	;volatile
  4679     0511  2D13               	goto	u1681
  4680     0512  2D14               	goto	u1680
  4681     0513                     u1681:
  4682     0513  2D32               	goto	l1843
  4683     0514                     u1680:
  4684     0514                     l1837:
  4685                           
  4686                           ;kbd4x4.c: 127:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4687     0514  3003               	movlw	3
  4688     0515  1283               	bcf	3,5	;RP0=0, select bank0
  4689     0516  1303               	bcf	3,6	;RP1=0, select bank0
  4690     0517  00AE               	movwf	??_Keypad_Get_Char+1
  4691     0518  3097               	movlw	151
  4692     0519  00AD               	movwf	??_Keypad_Get_Char
  4693     051A                     u2457:
  4694     051A  0BAD               	decfsz	??_Keypad_Get_Char,f
  4695     051B  2D1A               	goto	u2457
  4696     051C  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4697     051D  2D1A               	goto	u2457
  4698     051E  0000               	nop
  4699     051F                     l162:	
  4700                           ;kbd4x4.c: 128:         while(PORTBbits.RB0 == 0);
  4701                           
  4702     051F  1283               	bcf	3,5	;RP0=0, select bank0
  4703     0520  1303               	bcf	3,6	;RP1=0, select bank0
  4704     0521  1C06               	btfss	6,0	;volatile
  4705     0522  2D24               	goto	u1691
  4706     0523  2D25               	goto	u1690
  4707     0524                     u1691:
  4708     0524  2D1F               	goto	l162
  4709     0525                     u1690:
  4710     0525                     l1839:
  4711                           
  4712                           ;kbd4x4.c: 129:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4713     0525  3007               	movlw	7
  4714     0526  1283               	bcf	3,5	;RP0=0, select bank0
  4715     0527  1303               	bcf	3,6	;RP1=0, select bank0
  4716     0528  00AE               	movwf	??_Keypad_Get_Char+1
  4717     0529  307C               	movlw	124
  4718     052A  00AD               	movwf	??_Keypad_Get_Char
  4719     052B                     u2467:
  4720     052B  0BAD               	decfsz	??_Keypad_Get_Char,f
  4721     052C  2D2B               	goto	u2467
  4722     052D  0BAE               	decfsz	??_Keypad_Get_Char+1,f
  4723     052E  2D2B               	goto	u2467
  4724     052F  2D30               	nop2
  4725                           
  4726                           ;kbd4x4.c: 130:         return 'D';
  4727     0530  3044               	movlw	68
  4728     0531  2D33               	goto	l104
  4729     0532                     l1843:
  4730                           
  4731                           ;kbd4x4.c: 132:     return 0;
  4732     0532  3000               	movlw	0
  4733     0533                     l104:
  4734     0533  0008               	return
  4735     0534                     __end_of_Keypad_Get_Char:
  4736                           
  4737                           	psect	text18
  4738     0E3B                     __ptext18:	
  4739 ;; *************** function _Buzzer_On *****************
  4740 ;; Defined at:
  4741 ;;		line 6 in file "funciones.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  duration_ms     2   13[BANK0 ] unsigned int 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1
  4755 ;;      Params:         0       2       0
  4756 ;;      Locals:         0       0       0
  4757 ;;      Temps:          0       1       0
  4758 ;;      Totals:         0       3       0
  4759 ;;Total ram usage:        3 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 4
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769     0E3B                     _Buzzer_On:	
  4770                           ;psect for function _Buzzer_On
  4771                           
  4772     0E3B                     l1847:	
  4773                           ;incstack = 0
  4774                           ; Regs used in _Buzzer_On: [wreg+status,2+status,0]
  4775                           
  4776                           
  4777                           ;funciones.c: 6: void Buzzer_On(unsigned int duration_ms);funciones.c: 7: {;funciones.c:
      +                           8:     PORTAbits.RA4 = 0;
  4778     0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  4779     0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  4780     0E3D  1205               	bcf	5,4	;volatile
  4781                           
  4782                           ;funciones.c: 9:     while(duration_ms--)
  4783     0E3E  2E48               	goto	l1851
  4784     0E3F                     l1849:
  4785                           
  4786                           ;funciones.c: 10:     {;funciones.c: 11:         _delay((unsigned long)((1)*(4000000/400
      +                          0.0)));
  4787     0E3F  30C7               	movlw	199
  4788     0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4789     0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4790     0E42  00AF               	movwf	??_Buzzer_On
  4791     0E43                     u2477:
  4792     0E43  2E44               	nop2
  4793     0E44  0BAF               	decfsz	??_Buzzer_On,f
  4794     0E45  2E43               	goto	u2477
  4795     0E46  2E47               	nop2
  4796     0E47  0000               	nop
  4797     0E48                     l1851:
  4798                           
  4799                           ;funciones.c: 9:     while(duration_ms--)
  4800     0E48  3001               	movlw	1
  4801     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  4802     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  4803     0E4B  02AD               	subwf	Buzzer_On@duration_ms,f
  4804     0E4C  3000               	movlw	0
  4805     0E4D  1C03               	skipc
  4806     0E4E  03AE               	decf	Buzzer_On@duration_ms+1,f
  4807     0E4F  02AE               	subwf	Buzzer_On@duration_ms+1,f
  4808     0E50  0A2D               	incf	Buzzer_On@duration_ms,w
  4809     0E51  1D03               	skipz
  4810     0E52  2E57               	goto	u1701
  4811     0E53  0A2E               	incf	Buzzer_On@duration_ms+1,w
  4812     0E54  1D03               	btfss	3,2
  4813     0E55  2E57               	goto	u1701
  4814     0E56  2E58               	goto	u1700
  4815     0E57                     u1701:
  4816     0E57  2E3F               	goto	l1849
  4817     0E58                     u1700:
  4818     0E58                     l275:
  4819                           
  4820                           ;funciones.c: 13:     PORTAbits.RA4 = 1;
  4821     0E58  1605               	bsf	5,4	;volatile
  4822     0E59                     l276:
  4823     0E59  0008               	return
  4824     0E5A                     __end_of_Buzzer_On:
  4825                           
  4826                           	psect	text19
  4827     0F67                     __ptext19:	
  4828 ;; *************** function _ISR *****************
  4829 ;; Defined at:
  4830 ;;		line 31 in file "funciones.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  dato            1   12[BANK0 ] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0, pclath, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1
  4844 ;;      Params:         0       0       0
  4845 ;;      Locals:         0       1       0
  4846 ;;      Temps:          0       2       0
  4847 ;;      Totals:         0       3       0
  4848 ;;Total ram usage:        3 bytes
  4849 ;; Hardware stack levels used: 1
  4850 ;; Hardware stack levels required when called: 3
  4851 ;; This function calls:
  4852 ;;		i1_Lcd_Set_Cursor
  4853 ;;		i1_Lcd_Write_Char
  4854 ;; This function is called by:
  4855 ;;		Interrupt level 1
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859     0F67                     _ISR:	
  4860                           ;psect for function _ISR
  4861                           
  4862     0F67                     i1l2189:
  4863                           
  4864                           ;funciones.c: 32:     static char renglon_recibido = 0, columna_recibida = 0, caracter_r
      +                          ecibido = 0;;funciones.c: 33:     static char estado = 0;;funciones.c: 35:     if (RCIF)
      +                           {
  4865     0F67  1E8C               	btfss	12,5	;volatile
  4866     0F68  2F6A               	goto	u205_21
  4867     0F69  2F6B               	goto	u205_20
  4868     0F6A                     u205_21:
  4869     0F6A  2F9F               	goto	i1l304
  4870     0F6B                     u205_20:
  4871     0F6B                     i1l2191:
  4872                           
  4873                           ;funciones.c: 36:         char dato = RCREG;
  4874     0F6B  081A               	movf	26,w	;volatile
  4875     0F6C  00AC               	movwf	ISR@dato
  4876     0F6D                     i1l2193:
  4877                           
  4878                           ;funciones.c: 38:         if (estado == 0) {
  4879     0F6D  084E               	movf	ISR@estado,w
  4880     0F6E  1D03               	btfss	3,2
  4881     0F6F  2F71               	goto	u206_21
  4882     0F70  2F72               	goto	u206_20
  4883     0F71                     u206_21:
  4884     0F71  2F77               	goto	i1l2199
  4885     0F72                     u206_20:
  4886     0F72                     i1l2195:
  4887                           
  4888                           ;funciones.c: 39:             renglon_recibido = dato;
  4889     0F72  082C               	movf	ISR@dato,w
  4890     0F73  00D1               	movwf	ISR@renglon_recibido
  4891     0F74                     i1l2197:
  4892                           
  4893                           ;funciones.c: 40:             estado = 1;
  4894     0F74  3001               	movlw	1
  4895     0F75  00CE               	movwf	ISR@estado
  4896                           
  4897                           ;funciones.c: 41:         }
  4898     0F76  2F9F               	goto	i1l304
  4899     0F77                     i1l2199:
  4900     0F77  034E               	decf	ISR@estado,w
  4901     0F78  1D03               	btfss	3,2
  4902     0F79  2F7B               	goto	u207_21
  4903     0F7A  2F7C               	goto	u207_20
  4904     0F7B                     u207_21:
  4905     0F7B  2F81               	goto	i1l2205
  4906     0F7C                     u207_20:
  4907     0F7C                     i1l2201:
  4908                           
  4909                           ;funciones.c: 43:             columna_recibida = dato;
  4910     0F7C  082C               	movf	ISR@dato,w
  4911     0F7D  00D0               	movwf	ISR@columna_recibida
  4912     0F7E                     i1l2203:
  4913                           
  4914                           ;funciones.c: 44:             estado = 2;
  4915     0F7E  3002               	movlw	2
  4916     0F7F  00CE               	movwf	ISR@estado
  4917                           
  4918                           ;funciones.c: 45:         }
  4919     0F80  2F9F               	goto	i1l304
  4920     0F81                     i1l2205:
  4921     0F81  3002               	movlw	2
  4922     0F82  064E               	xorwf	ISR@estado,w
  4923     0F83  1D03               	btfss	3,2
  4924     0F84  2F86               	goto	u208_21
  4925     0F85  2F87               	goto	u208_20
  4926     0F86                     u208_21:
  4927     0F86  2F9F               	goto	i1l300
  4928     0F87                     u208_20:
  4929     0F87                     i1l2207:
  4930                           
  4931                           ;funciones.c: 47:             caracter_recibido = dato;
  4932     0F87  082C               	movf	ISR@dato,w
  4933     0F88  00CF               	movwf	ISR@caracter_recibido
  4934     0F89                     i1l2209:
  4935                           
  4936                           ;funciones.c: 48:             estado = 0;
  4937     0F89  01CE               	clrf	ISR@estado
  4938     0F8A                     i1l2211:
  4939                           
  4940                           ;funciones.c: 51:             Lcd_Set_Cursor(renglon_recibido, columna_recibida);
  4941     0F8A  0850               	movf	ISR@columna_recibida,w
  4942     0F8B  00A4               	movwf	i1Lcd_Set_Cursor@b
  4943     0F8C  0851               	movf	ISR@renglon_recibido,w
  4944     0F8D  118A  2658  158A   	fcall	i1_Lcd_Set_Cursor
  4945     0F90                     i1l2213:
  4946                           
  4947                           ;funciones.c: 52:             Lcd_Write_Char(caracter_recibido);
  4948     0F90  1283               	bcf	3,5	;RP0=0, select bank0
  4949     0F91  1303               	bcf	3,6	;RP1=0, select bank0
  4950     0F92  084F               	movf	ISR@caracter_recibido,w
  4951     0F93  158A  26C1  158A   	fcall	i1_Lcd_Write_Char
  4952     0F96                     i1l2215:
  4953                           
  4954                           ;funciones.c: 53:             Lcd_Set_Cursor(renglon, columna);
  4955     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4956     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4957     0F98  0852               	movf	_columna,w
  4958     0F99  00A4               	movwf	i1Lcd_Set_Cursor@b
  4959     0F9A  0854               	movf	_renglon,w
  4960     0F9B  118A  2658  158A   	fcall	i1_Lcd_Set_Cursor
  4961     0F9E  2F9F               	goto	i1l304
  4962     0F9F                     i1l300:
  4963     0F9F                     i1l304:
  4964     0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  4965     0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  4966     0FA1  082B               	movf	??_ISR+1,w
  4967     0FA2  008A               	movwf	10
  4968     0FA3  0E2A               	swapf	??_ISR,w
  4969     0FA4  0083               	movwf	3
  4970     0FA5  0EFE               	swapf	btemp,f
  4971     0FA6  0E7E               	swapf	btemp,w
  4972     0FA7  0009               	retfie
  4973     0FA8                     __end_of_ISR:
  4974                           
  4975                           	psect	intentry
  4976     0004                     __pintentry:	
  4977                           ;incstack = 0
  4978                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4979                           
  4980     0004                     interrupt_function:
  4981     007E                     saved_w         set	btemp
  4982     0004  00FE               	movwf	btemp
  4983     0005  0E03               	swapf	3,w
  4984     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4985     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4986     0008  00AA               	movwf	??_ISR
  4987     0009  080A               	movf	10,w
  4988     000A  00AB               	movwf	??_ISR+1
  4989     000B  158A  2F67         	ljmp	_ISR
  4990                           
  4991                           	psect	text20
  4992     0EC1                     __ptext20:	
  4993 ;; *************** function i1_Lcd_Write_Char *****************
  4994 ;; Defined at:
  4995 ;;		line 88 in file "lcd.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  a               1    wreg     unsigned char 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  a               1    4[BANK0 ] unsigned char 
  5000 ;;  y               1    3[BANK0 ] unsigned char 
  5001 ;;  temp            1    2[BANK0 ] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1
  5011 ;;      Params:         0       0       0
  5012 ;;      Locals:         0       3       0
  5013 ;;      Temps:          0       1       0
  5014 ;;      Totals:         0       4       0
  5015 ;;Total ram usage:        4 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 1
  5018 ;; This function calls:
  5019 ;;		i1_Lcd_Port
  5020 ;; This function is called by:
  5021 ;;		_ISR
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025     0EC1                     i1_Lcd_Write_Char:	
  5026                           ;psect for function i1_Lcd_Write_Char
  5027                           
  5028                           
  5029                           ;incstack = 0
  5030                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5031                           ;i1Lcd_Write_Char@a stored from wreg
  5032     0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  5033     0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  5034     0EC3  00A4               	movwf	i1Lcd_Write_Char@a
  5035     0EC4                     i1l1945:
  5036                           
  5037                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  5038     0EC4  0824               	movf	i1Lcd_Write_Char@a,w
  5039     0EC5  00A2               	movwf	i1Lcd_Write_Char@temp
  5040     0EC6                     i1l1947:
  5041     0EC6  300F               	movlw	15
  5042     0EC7  05A2               	andwf	i1Lcd_Write_Char@temp,f
  5043     0EC8                     i1l1949:
  5044                           
  5045                           ;lcd.c: 92:     y = a&0xF0;
  5046     0EC8  0824               	movf	i1Lcd_Write_Char@a,w
  5047     0EC9  00A3               	movwf	i1Lcd_Write_Char@y
  5048     0ECA  30F0               	movlw	240
  5049     0ECB  05A3               	andwf	i1Lcd_Write_Char@y,f
  5050     0ECC                     i1l1951:
  5051                           
  5052                           ;lcd.c: 93:     PORTCbits.RC0 = 1;
  5053     0ECC  1407               	bsf	7,0	;volatile
  5054     0ECD                     i1l1953:
  5055                           
  5056                           ;lcd.c: 94:     Lcd_Port(y>>4);
  5057     0ECD  0823               	movf	i1Lcd_Write_Char@y,w
  5058     0ECE  00A1               	movwf	??i1_Lcd_Write_Char
  5059     0ECF  3004               	movlw	4
  5060     0ED0                     u186_25:
  5061     0ED0  1003               	clrc
  5062     0ED1  0CA1               	rrf	??i1_Lcd_Write_Char,f
  5063     0ED2  3EFF               	addlw	-1
  5064     0ED3  1D03               	skipz
  5065     0ED4  2ED0               	goto	u186_25
  5066     0ED5  0821               	movf	??i1_Lcd_Write_Char,w
  5067     0ED6  158A  265A  158A   	fcall	i1_Lcd_Port
  5068     0ED9                     i1l1955:
  5069                           
  5070                           ;lcd.c: 95:     PORTCbits.RC2 = 1;
  5071     0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  5072     0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  5073     0EDB  1507               	bsf	7,2	;volatile
  5074     0EDC                     i1l1957:
  5075                           
  5076                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5077     0EDC  300C               	movlw	12
  5078     0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  5079     0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  5080     0EDF  00A1               	movwf	??i1_Lcd_Write_Char
  5081     0EE0                     u248_27:
  5082     0EE0  0BA1               	decfsz	??i1_Lcd_Write_Char,f
  5083     0EE1  2EE0               	goto	u248_27
  5084     0EE2  2EE3               	nop2
  5085     0EE3                     i1l1959:
  5086                           
  5087                           ;lcd.c: 97:     PORTCbits.RC2 = 0;
  5088     0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  5089     0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  5090     0EE5  1107               	bcf	7,2	;volatile
  5091     0EE6                     i1l1961:
  5092                           
  5093                           ;lcd.c: 98:     Lcd_Port(temp);
  5094     0EE6  0822               	movf	i1Lcd_Write_Char@temp,w
  5095     0EE7  158A  265A  158A   	fcall	i1_Lcd_Port
  5096     0EEA                     i1l1963:
  5097                           
  5098                           ;lcd.c: 99:     PORTCbits.RC2 = 1;
  5099     0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  5100     0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  5101     0EEC  1507               	bsf	7,2	;volatile
  5102     0EED                     i1l1965:
  5103                           
  5104                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5105     0EED  300C               	movlw	12
  5106     0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  5107     0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  5108     0EF0  00A1               	movwf	??i1_Lcd_Write_Char
  5109     0EF1                     u249_27:
  5110     0EF1  0BA1               	decfsz	??i1_Lcd_Write_Char,f
  5111     0EF2  2EF1               	goto	u249_27
  5112     0EF3  2EF4               	nop2
  5113     0EF4                     i1l1967:
  5114                           
  5115                           ;lcd.c: 101:     PORTCbits.RC2 = 0;
  5116     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  5117     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  5118     0EF6  1107               	bcf	7,2	;volatile
  5119     0EF7                     i1l215:
  5120     0EF7  0008               	return
  5121     0EF8                     __end_ofi1_Lcd_Write_Char:
  5122                           
  5123                           	psect	text21
  5124     0658                     __ptext21:	
  5125 ;; *************** function i1_Lcd_Set_Cursor *****************
  5126 ;; Defined at:
  5127 ;;		line 26 in file "lcd.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  a               1    wreg     unsigned char 
  5130 ;;  b               1    4[BANK0 ] unsigned char 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  a               1    6[BANK0 ] unsigned char 
  5133 ;;  temp            1    9[BANK0 ] unsigned char 
  5134 ;;  y               1    8[BANK0 ] unsigned char 
  5135 ;;  z               1    7[BANK0 ] unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, status,0, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1
  5145 ;;      Params:         0       1       0
  5146 ;;      Locals:         0       4       0
  5147 ;;      Temps:          0       1       0
  5148 ;;      Totals:         0       6       0
  5149 ;;Total ram usage:        6 bytes
  5150 ;; Hardware stack levels used: 1
  5151 ;; Hardware stack levels required when called: 2
  5152 ;; This function calls:
  5153 ;;		i1_Lcd_Cmd
  5154 ;; This function is called by:
  5155 ;;		_ISR
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159     0658                     i1_Lcd_Set_Cursor:	
  5160                           ;psect for function i1_Lcd_Set_Cursor
  5161                           
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5165                           ;i1Lcd_Set_Cursor@a stored from wreg
  5166     0658  1283               	bcf	3,5	;RP0=0, select bank0
  5167     0659  1303               	bcf	3,6	;RP1=0, select bank0
  5168     065A  00A6               	movwf	i1Lcd_Set_Cursor@a
  5169     065B                     i1l1897:
  5170                           
  5171                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  5172     065B  0326               	decf	i1Lcd_Set_Cursor@a,w
  5173     065C  1D03               	btfss	3,2
  5174     065D  2E5F               	goto	u178_21
  5175     065E  2E60               	goto	u178_20
  5176     065F                     u178_21:
  5177     065F  2E7C               	goto	i1l1909
  5178     0660                     u178_20:
  5179     0660                     i1l1899:
  5180                           
  5181                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  5182     0660  0824               	movf	i1Lcd_Set_Cursor@b,w
  5183     0661  3E7F               	addlw	127
  5184     0662  00A9               	movwf	i1Lcd_Set_Cursor@temp
  5185                           
  5186                           ;lcd.c: 32:         z = temp>>4;
  5187     0663  0829               	movf	i1Lcd_Set_Cursor@temp,w
  5188     0664  00A5               	movwf	??i1_Lcd_Set_Cursor
  5189     0665  3004               	movlw	4
  5190     0666                     u179_25:
  5191     0666  1003               	clrc
  5192     0667  0CA5               	rrf	??i1_Lcd_Set_Cursor,f
  5193     0668  3EFF               	addlw	-1
  5194     0669  1D03               	skipz
  5195     066A  2E66               	goto	u179_25
  5196     066B  0825               	movf	??i1_Lcd_Set_Cursor,w
  5197     066C  00A7               	movwf	i1Lcd_Set_Cursor@z
  5198     066D                     i1l1901:
  5199                           
  5200                           ;lcd.c: 33:         y = temp & 0x0F;
  5201     066D  0829               	movf	i1Lcd_Set_Cursor@temp,w
  5202     066E  00A8               	movwf	i1Lcd_Set_Cursor@y
  5203     066F                     i1l1903:
  5204     066F  300F               	movlw	15
  5205     0670  05A8               	andwf	i1Lcd_Set_Cursor@y,f
  5206     0671                     i1l1905:
  5207                           
  5208                           ;lcd.c: 34:         Lcd_Cmd(z);
  5209     0671  0827               	movf	i1Lcd_Set_Cursor@z,w
  5210     0672  158A  2609  118A   	fcall	i1_Lcd_Cmd
  5211     0675                     i1l1907:
  5212                           
  5213                           ;lcd.c: 35:         Lcd_Cmd(y);
  5214     0675  1283               	bcf	3,5	;RP0=0, select bank0
  5215     0676  1303               	bcf	3,6	;RP1=0, select bank0
  5216     0677  0828               	movf	i1Lcd_Set_Cursor@y,w
  5217     0678  158A  2609  118A   	fcall	i1_Lcd_Cmd
  5218                           
  5219                           ;lcd.c: 36:     }
  5220     067B  2EE2               	goto	i1l209
  5221     067C                     i1l1909:
  5222     067C  3002               	movlw	2
  5223     067D  0626               	xorwf	i1Lcd_Set_Cursor@a,w
  5224     067E  1D03               	btfss	3,2
  5225     067F  2E81               	goto	u180_21
  5226     0680  2E82               	goto	u180_20
  5227     0681                     u180_21:
  5228     0681  2E9E               	goto	i1l1921
  5229     0682                     u180_20:
  5230     0682                     i1l1911:
  5231                           
  5232                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  5233     0682  0824               	movf	i1Lcd_Set_Cursor@b,w
  5234     0683  3EBF               	addlw	191
  5235     0684  00A9               	movwf	i1Lcd_Set_Cursor@temp
  5236                           
  5237                           ;lcd.c: 40:         z = temp>>4;
  5238     0685  0829               	movf	i1Lcd_Set_Cursor@temp,w
  5239     0686  00A5               	movwf	??i1_Lcd_Set_Cursor
  5240     0687  3004               	movlw	4
  5241     0688                     u181_25:
  5242     0688  1003               	clrc
  5243     0689  0CA5               	rrf	??i1_Lcd_Set_Cursor,f
  5244     068A  3EFF               	addlw	-1
  5245     068B  1D03               	skipz
  5246     068C  2E88               	goto	u181_25
  5247     068D  0825               	movf	??i1_Lcd_Set_Cursor,w
  5248     068E  00A7               	movwf	i1Lcd_Set_Cursor@z
  5249     068F                     i1l1913:
  5250                           
  5251                           ;lcd.c: 41:         y = temp & 0x0F;
  5252     068F  0829               	movf	i1Lcd_Set_Cursor@temp,w
  5253     0690  00A8               	movwf	i1Lcd_Set_Cursor@y
  5254     0691                     i1l1915:
  5255     0691  300F               	movlw	15
  5256     0692  05A8               	andwf	i1Lcd_Set_Cursor@y,f
  5257     0693                     i1l1917:
  5258                           
  5259                           ;lcd.c: 42:         Lcd_Cmd(z);
  5260     0693  0827               	movf	i1Lcd_Set_Cursor@z,w
  5261     0694  158A  2609  118A   	fcall	i1_Lcd_Cmd
  5262     0697                     i1l1919:
  5263                           
  5264                           ;lcd.c: 43:         Lcd_Cmd(y);
  5265     0697  1283               	bcf	3,5	;RP0=0, select bank0
  5266     0698  1303               	bcf	3,6	;RP1=0, select bank0
  5267     0699  0828               	movf	i1Lcd_Set_Cursor@y,w
  5268     069A  158A  2609  118A   	fcall	i1_Lcd_Cmd
  5269                           
  5270                           ;lcd.c: 44:     }
  5271     069D  2EE2               	goto	i1l209
  5272     069E                     i1l1921:
  5273     069E  3003               	movlw	3
  5274     069F  0626               	xorwf	i1Lcd_Set_Cursor@a,w
  5275     06A0  1D03               	btfss	3,2
  5276     06A1  2EA3               	goto	u182_21
  5277     06A2  2EA4               	goto	u182_20
  5278     06A3                     u182_21:
  5279     06A3  2EC0               	goto	i1l1933
  5280     06A4                     u182_20:
  5281     06A4                     i1l1923:
  5282                           
  5283                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  5284     06A4  0824               	movf	i1Lcd_Set_Cursor@b,w
  5285     06A5  3E93               	addlw	147
  5286     06A6  00A9               	movwf	i1Lcd_Set_Cursor@temp
  5287                           
  5288                           ;lcd.c: 48:         z = temp>>4;
  5289     06A7  0829               	movf	i1Lcd_Set_Cursor@temp,w
  5290     06A8  00A5               	movwf	??i1_Lcd_Set_Cursor
  5291     06A9  3004               	movlw	4
  5292     06AA                     u183_25:
  5293     06AA  1003               	clrc
  5294     06AB  0CA5               	rrf	??i1_Lcd_Set_Cursor,f
  5295     06AC  3EFF               	addlw	-1
  5296     06AD  1D03               	skipz
  5297     06AE  2EAA               	goto	u183_25
  5298     06AF  0825               	movf	??i1_Lcd_Set_Cursor,w
  5299     06B0  00A7               	movwf	i1Lcd_Set_Cursor@z
  5300     06B1                     i1l1925:
  5301                           
  5302                           ;lcd.c: 49:         y = temp & 0x0F;
  5303     06B1  0829               	movf	i1Lcd_Set_Cursor@temp,w
  5304     06B2  00A8               	movwf	i1Lcd_Set_Cursor@y
  5305     06B3                     i1l1927:
  5306     06B3  300F               	movlw	15
  5307     06B4  05A8               	andwf	i1Lcd_Set_Cursor@y,f
  5308     06B5                     i1l1929:
  5309                           
  5310                           ;lcd.c: 50:         Lcd_Cmd(z);
  5311     06B5  0827               	movf	i1Lcd_Set_Cursor@z,w
  5312     06B6  158A  2609  118A   	fcall	i1_Lcd_Cmd
  5313     06B9                     i1l1931:
  5314                           
  5315                           ;lcd.c: 51:         Lcd_Cmd(y);
  5316     06B9  1283               	bcf	3,5	;RP0=0, select bank0
  5317     06BA  1303               	bcf	3,6	;RP1=0, select bank0
  5318     06BB  0828               	movf	i1Lcd_Set_Cursor@y,w
  5319     06BC  158A  2609  118A   	fcall	i1_Lcd_Cmd
  5320                           
  5321                           ;lcd.c: 52:     }
  5322     06BF  2EE2               	goto	i1l209
  5323     06C0                     i1l1933:
  5324     06C0  3004               	movlw	4
  5325     06C1  0626               	xorwf	i1Lcd_Set_Cursor@a,w
  5326     06C2  1D03               	btfss	3,2
  5327     06C3  2EC5               	goto	u184_21
  5328     06C4  2EC6               	goto	u184_20
  5329     06C5                     u184_21:
  5330     06C5  2EE2               	goto	i1l205
  5331     06C6                     u184_20:
  5332     06C6                     i1l1935:
  5333                           
  5334                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  5335     06C6  0824               	movf	i1Lcd_Set_Cursor@b,w
  5336     06C7  3ED3               	addlw	211
  5337     06C8  00A9               	movwf	i1Lcd_Set_Cursor@temp
  5338                           
  5339                           ;lcd.c: 56:         z = temp>>4;
  5340     06C9  0829               	movf	i1Lcd_Set_Cursor@temp,w
  5341     06CA  00A5               	movwf	??i1_Lcd_Set_Cursor
  5342     06CB  3004               	movlw	4
  5343     06CC                     u185_25:
  5344     06CC  1003               	clrc
  5345     06CD  0CA5               	rrf	??i1_Lcd_Set_Cursor,f
  5346     06CE  3EFF               	addlw	-1
  5347     06CF  1D03               	skipz
  5348     06D0  2ECC               	goto	u185_25
  5349     06D1  0825               	movf	??i1_Lcd_Set_Cursor,w
  5350     06D2  00A7               	movwf	i1Lcd_Set_Cursor@z
  5351     06D3                     i1l1937:
  5352                           
  5353                           ;lcd.c: 57:         y = temp & 0x0F;
  5354     06D3  0829               	movf	i1Lcd_Set_Cursor@temp,w
  5355     06D4  00A8               	movwf	i1Lcd_Set_Cursor@y
  5356     06D5                     i1l1939:
  5357     06D5  300F               	movlw	15
  5358     06D6  05A8               	andwf	i1Lcd_Set_Cursor@y,f
  5359     06D7                     i1l1941:
  5360                           
  5361                           ;lcd.c: 58:         Lcd_Cmd(z);
  5362     06D7  0827               	movf	i1Lcd_Set_Cursor@z,w
  5363     06D8  158A  2609  118A   	fcall	i1_Lcd_Cmd
  5364     06DB                     i1l1943:
  5365                           
  5366                           ;lcd.c: 59:         Lcd_Cmd(y);
  5367     06DB  1283               	bcf	3,5	;RP0=0, select bank0
  5368     06DC  1303               	bcf	3,6	;RP1=0, select bank0
  5369     06DD  0828               	movf	i1Lcd_Set_Cursor@y,w
  5370     06DE  158A  2609  118A   	fcall	i1_Lcd_Cmd
  5371     06E1  2EE2               	goto	i1l209
  5372     06E2                     i1l205:
  5373     06E2                     i1l209:
  5374     06E2  0008               	return
  5375     06E3                     __end_ofi1_Lcd_Set_Cursor:
  5376                           
  5377                           	psect	text22
  5378     0E09                     __ptext22:	
  5379 ;; *************** function i1_Lcd_Cmd *****************
  5380 ;; Defined at:
  5381 ;;		line 11 in file "lcd.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  a               1    wreg     unsigned char 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  a               1    3[BANK0 ] unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0, pclath, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1
  5395 ;;      Params:         0       0       0
  5396 ;;      Locals:         0       1       0
  5397 ;;      Temps:          0       2       0
  5398 ;;      Totals:         0       3       0
  5399 ;;Total ram usage:        3 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 1
  5402 ;; This function calls:
  5403 ;;		i1_Lcd_Port
  5404 ;; This function is called by:
  5405 ;;		i1_Lcd_Set_Cursor
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409     0E09                     i1_Lcd_Cmd:	
  5410                           ;psect for function i1_Lcd_Cmd
  5411                           
  5412                           
  5413                           ;incstack = 0
  5414                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5415                           ;i1Lcd_Cmd@a stored from wreg
  5416     0E09  1283               	bcf	3,5	;RP0=0, select bank0
  5417     0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  5418     0E0B  00A3               	movwf	i1Lcd_Cmd@a
  5419     0E0C                     i1l1707:
  5420                           
  5421                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTCbits.RC0 = 0;
  5422     0E0C  1007               	bcf	7,0	;volatile
  5423     0E0D                     i1l1709:
  5424                           
  5425                           ;lcd.c: 14:     Lcd_Port(a);
  5426     0E0D  0823               	movf	i1Lcd_Cmd@a,w
  5427     0E0E  158A  265A  158A   	fcall	i1_Lcd_Port
  5428     0E11                     i1l1711:
  5429                           
  5430                           ;lcd.c: 15:     PORTCbits.RC2 = 1;
  5431     0E11  1283               	bcf	3,5	;RP0=0, select bank0
  5432     0E12  1303               	bcf	3,6	;RP1=0, select bank0
  5433     0E13  1507               	bsf	7,2	;volatile
  5434     0E14                     i1l1713:
  5435                           
  5436                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  5437     0E14  3006               	movlw	6
  5438     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  5439     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  5440     0E17  00A2               	movwf	??i1_Lcd_Cmd+1
  5441     0E18  3030               	movlw	48
  5442     0E19  00A1               	movwf	??i1_Lcd_Cmd
  5443     0E1A                     u250_27:
  5444     0E1A  0BA1               	decfsz	??i1_Lcd_Cmd,f
  5445     0E1B  2E1A               	goto	u250_27
  5446     0E1C  0BA2               	decfsz	??i1_Lcd_Cmd+1,f
  5447     0E1D  2E1A               	goto	u250_27
  5448     0E1E                     i1l1715:
  5449                           
  5450                           ;lcd.c: 17:     PORTCbits.RC2 = 0;
  5451     0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  5452     0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  5453     0E20  1107               	bcf	7,2	;volatile
  5454     0E21                     i1l196:
  5455     0E21  0008               	return
  5456     0E22                     __end_ofi1_Lcd_Cmd:
  5457                           
  5458                           	psect	text23
  5459     0E5A                     __ptext23:	
  5460 ;; *************** function i1_Lcd_Port *****************
  5461 ;; Defined at:
  5462 ;;		line 3 in file "lcd.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  a               1    wreg     unsigned char 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  a               1    0[BANK0 ] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1
  5476 ;;      Params:         0       0       0
  5477 ;;      Locals:         0       1       0
  5478 ;;      Temps:          0       0       0
  5479 ;;      Totals:         0       1       0
  5480 ;;Total ram usage:        1 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		i1_Lcd_Cmd
  5486 ;;		i1_Lcd_Write_Char
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490     0E5A                     i1_Lcd_Port:	
  5491                           ;psect for function i1_Lcd_Port
  5492                           
  5493                           
  5494                           ;incstack = 0
  5495                           ; Regs used in i1_Lcd_Port: [wreg]
  5496                           ;i1Lcd_Port@a stored from wreg
  5497     0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  5498     0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  5499     0E5C  00A0               	movwf	i1Lcd_Port@a
  5500     0E5D                     i1l1565:
  5501                           
  5502                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  5503     0E5D  1C20               	btfss	i1Lcd_Port@a,0
  5504     0E5E  2E60               	goto	u109_21
  5505     0E5F  2E61               	goto	u109_20
  5506     0E60                     u109_21:
  5507     0E60  2E63               	goto	i1l178
  5508     0E61                     u109_20:
  5509     0E61                     i1l1567:
  5510     0E61  1606               	bsf	6,4	;volatile
  5511     0E62  2E64               	goto	i1l180
  5512     0E63                     i1l178:
  5513     0E63  1206               	bcf	6,4	;volatile
  5514     0E64                     i1l180:
  5515                           
  5516                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  5517     0E64  1CA0               	btfss	i1Lcd_Port@a,1
  5518     0E65  2E67               	goto	u110_21
  5519     0E66  2E68               	goto	u110_20
  5520     0E67                     u110_21:
  5521     0E67  2E6A               	goto	i1l182
  5522     0E68                     u110_20:
  5523     0E68                     i1l1569:
  5524     0E68  1686               	bsf	6,5	;volatile
  5525     0E69  2E6B               	goto	i1l184
  5526     0E6A                     i1l182:
  5527     0E6A  1286               	bcf	6,5	;volatile
  5528     0E6B                     i1l184:
  5529                           
  5530                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  5531     0E6B  1D20               	btfss	i1Lcd_Port@a,2
  5532     0E6C  2E6E               	goto	u111_21
  5533     0E6D  2E6F               	goto	u111_20
  5534     0E6E                     u111_21:
  5535     0E6E  2E71               	goto	i1l186
  5536     0E6F                     u111_20:
  5537     0E6F                     i1l1571:
  5538     0E6F  1706               	bsf	6,6	;volatile
  5539     0E70  2E72               	goto	i1l188
  5540     0E71                     i1l186:
  5541     0E71  1306               	bcf	6,6	;volatile
  5542     0E72                     i1l188:
  5543                           
  5544                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  5545     0E72  1DA0               	btfss	i1Lcd_Port@a,3
  5546     0E73  2E75               	goto	u112_21
  5547     0E74  2E76               	goto	u112_20
  5548     0E75                     u112_21:
  5549     0E75  2E78               	goto	i1l190
  5550     0E76                     u112_20:
  5551     0E76                     i1l1573:
  5552     0E76  1786               	bsf	6,7	;volatile
  5553     0E77  2E79               	goto	i1l193
  5554     0E78                     i1l190:
  5555     0E78  1386               	bcf	6,7	;volatile
  5556     0E79                     i1l193:
  5557     0E79  0008               	return
  5558     0E7A                     __end_ofi1_Lcd_Port:
  5559     0001                     ___latbits      equ	1
  5560     007E                     btemp           set	126	;btemp
  5561     007E                     wtemp0          set	126
  5562                           
  5563                           	psect	config
  5564                           
  5565                           ;Config register CONFIG @ 0x2007
  5566                           ;	Oscillator Selection bits
  5567                           ;	FOSC = HS, HS oscillator
  5568                           ;	Watchdog Timer Enable bit
  5569                           ;	WDTE = OFF, WDT disabled
  5570                           ;	Power-up Timer Enable bit
  5571                           ;	PWRTE = ON, PWRT enabled
  5572                           ;	Brown-out Reset Enable bit
  5573                           ;	BOREN = ON, BOR enabled
  5574                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5575                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5576                           ;	Data EEPROM Memory Code Protection bit
  5577                           ;	CPD = OFF, Data EEPROM code protection off
  5578                           ;	Flash Program Memory Write Enable bits
  5579                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5580                           ;	In-Circuit Debugger Mode bit
  5581                           ;	DEBUG = 0x1, unprogrammed default
  5582                           ;	Flash Program Memory Code Protection bit
  5583                           ;	CP = OFF, Code protection off
  5584     2007                     	org	8199
  5585     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    128
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     46      54
    BANK1            94      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 4
		 -> main@caracter_asc(BANK0[4]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> main@caracter_asc(BANK0[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> main@caracter_asc(BANK0[4]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> main@caracter_asc(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Init
    _enviarInformacion->_USART_Write
    _atoi->___wmul
    _USART_Init->___aldiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Delete_Char->_Lcd_Set_Cursor
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    _ISR->i1_Lcd_Set_Cursor
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4045
                                             36 BANK0     10    10      0
                          _Buzzer_On
                    _Keypad_Get_Char
                        _Keypad_Init
                          _Lcd_Blink
                    _Lcd_Delete_Char
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                         _USART_Init
                               _atoi
                  _enviarInformacion
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               6     1      5     114
                                             13 BANK0      6     1      5
 ---------------------------------------------------------------------------------
 (1) _enviarInformacion                                    5     0      5     119
                                             14 BANK0      5     0      5
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      29
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2     323
                                             19 BANK0      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      94
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     325
                                             28 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     302
                                             13 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     406
                                             17 BANK0      2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     145
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Delete_Char                                      4     0      4    1050
                                             23 BANK0      4     0      4
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Char                                       4     4      0     222
                                             14 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     732
                                             17 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Blink                                            0     0      0     145
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     145
                                             14 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0     116
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Get_Char                                      2     2      0       0
                                             13 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_On                                            3     1      2      35
                                             13 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0    1008
                                             10 BANK0      3     3      0
                   i1_Lcd_Set_Cursor
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_Char                                     4     4      0     222
                                              1 BANK0      4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     6     5      1     719
                                              4 BANK0      6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     145
                                              1 BANK0      3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Port                                           1     1      0     116
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_On
   _Keypad_Get_Char
   _Keypad_Init
   _Lcd_Blink
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Delete_Char
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _USART_Init
     ___aldiv
   _atoi
     ___wmul
   _enviarInformacion
     _USART_Write
   _memset

 _ISR (ROOT)
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Write_Char
     i1_Lcd_Port

Address spaces:
Name               Size   Autos  Total    Usage
BANK1               94      0       0      0.0%
BITBANK1            94      0       0      0.0%
BANK0               94     46      54     57.4%
BITBANK0            94      0       0      0.0%
COMMON               0      0       0      0.0%
BITCOMMON            0      0       0      0.0%
DATA                 0      0      54      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 05 01:37:31 2025

                        pc 0002                         l47 0053                         l48 02FD  
                       l97 07FF                         fsr 0004        ___wmul@multiplicand 002F  
                      l100 0328                        l101 0315                        l110 0359  
                      l104 0533                        l121 03D6                        l113 038E  
                      l105 034A                        l130 0407                        l122 03C3  
                      l114 037B                        l106 0337                        l212 0FFF  
                      l141 0484                        l133 0440                        l125 03F8  
                      l117 03B4                        l109 036C                        l205 0657  
                      l150 04B9                        l142 0471                        l134 042D  
                      l126 03E5                        l118 03A1                        l230 0DCD  
                      l215 0F2E                        l153 04EE                        l145 04A6  
                      l137 0462                        l129 041A                        l209 0657  
                      l162 051F                        l154 04DB                        l146 0493  
                      l138 044F                        l307 0DF3                        l180 0E84  
                      l236 0E08                        l157 0510                        l149 04CC  
                      l158 04FD                        l190 0E98                        l182 0E8A  
                      l184 0E8B                        l193 0E99                        l186 0E91  
                      l178 0E83                        l282 0DDA                        l275 0E58  
                      l276 0E59                        l188 0E92                        l196 0E3A  
                      l285 0DE0                        l199 0DD6                        l279 0F66  
                      l393 0EA8                        l458 0548                        l395 0EC0  
                      l468 05CC                        l871 06FD                        l865 07F8  
                      _GIE 005F                        _ISR 0F67                        fsr0 0004  
                      indf 0000                       ?_ISR 0020                       l2001 0066  
                     l2011 0086                       l2003 006E                       l2021 00BA  
                     l2013 008D                       l2005 0075                       l2023 00C9  
                     l2015 0094                       l2007 007B                       l2121 020F  
                     l2105 01E3                       l2017 00A1                       l2025 00D3  
                     l2033 00E9                       l2009 0082                       l2131 023B  
                     l2123 0216                       l2107 01F6                       l2115 0205  
                     l2051 0102                       l2043 00F7                       l2027 00DD  
                     l2019 00B2                       l2141 026A                       l2133 0247  
                     l2125 021F                       l2109 01FE                       l2061 0126  
                     l2053 0104                       l2151 0291                       l2143 0271  
                     l2127 022C                       l2135 024E                       l2071 015B  
                     l2063 0133                       l2055 0110                       l1601 0619  
                     l2161 02BA                       l2153 0297                       l2145 0279  
                     l2137 025B                       l2129 0234                       l2081 0189  
                     l2073 0162                       l2065 0142                       l2057 011A  
                     l1603 0626                       l1611 0635                       l2163 02C7  
                     l2147 0280                       l2155 029E                       l2139 0263  
                     l2075 0175                       l2083 0196                       l2067 014B  
                     l2059 011B                       l1621 0650                       l1613 063B  
                     l1605 0628                       l1701 05B9                       l2165 02D1  
                     l2157 02AB                       l2149 028A                       l2085 01A9  
                     l2077 017B                       l2093 01B8                       l2069 0154  
                     l2173 02E9                       l1551 0E8F                       l1615 0648  
                     l1607 062A                       l1631 0F04                       l1623 0EFB  
                     l1703 05C4                       l2167 02DA                       l2159 02B3  
                     l2095 01BF                       l2087 01B1                       l2079 0185  
                     l1801 0444                       l1553 0E96                       l1545 0E7D  
                     l1561 0E2D                       l1617 064A                       l1609 062E  
                     l1641 0F21                       l1633 0F10                       l1625 0EFD  
                     l1721 0FB0                       l2169 02E2                       l2097 01D2  
                     l1803 0455                       l1547 0E81                       l1563 0E37  
                     l1555 0E25                       l1731 0DC5                       l1619 064C  
                     l1643 0F24                       l1635 0F13                       l1627 0EFF  
                     l1723 0FB4                       l1651 0DDE                       l2099 01D8  
                     l1821 04BF                       l1813 0488                       l1717 07F9  
                     l1549 0E88                       l1557 0E26                       l1581 05E4  
                     l1645 0F2B                       l1637 0F1A                       l1629 0F03  
                     l1725 0FBE                       l1741 0F62                       l1733 0F2F  
                     l1661 0EB6                       l1653 0E9A                       l1831 04F2  
                     l1815 0499                       l1807 0466                       l1559 0E2A  
                     l1591 0604                       l1583 05E6                       l1575 05D0  
                     l1639 0F1D                       l1647 0DCE                       l1727 0FCD  
                     l1719 0FA8                       l1671 053B                       l1743 0F65  
                     l1735 0F33                       l1663 0EBC                       l1655 0E9E  
                     l1833 0503                       l1825 04D0                       l1809 0477  
                     l1761 035F                       l1753 032C                       l1745 0300  
                     l1593 0606                       l1585 05EA                       l1577 05D5  
                     l1729 0FD1                       l1681 0569                       l1673 054C  
                     l1737 0F60                       l1657 0EA2                       l1649 0DDA  
                     l1851 0E48                       l1843 0532                       l1827 04E1  
                     l1819 04AE                       l1771 0396                       l1755 033D  
                     l1747 030A                       l1595 0608                       l1579 05E2  
                     l1587 05F1                       l1691 0596                       l1683 056C  
                     l1675 0557                       l1667 0534                       l1739 0F61  
                     l1659 0EAF                       l1837 0514                       l1773 03A7  
                     l1765 0370                       l1749 031B                       l1597 060C  
                     l1589 05F7                       l1853 0DF4                       l1693 05A4  
                     l1685 0577                       l1677 0559                       l1669 0537  
                     l1861 06ED                       l1847 0E3B                       l1839 0525  
                     l1791 040D                       l1783 03DA                       l1767 0381  
                     l1759 034E                       l1599 0613                       l1695 05A5  
                     l1687 057B                       l1679 0561                       l1871 0797  
                     l1855 0DE1                       l1863 06EF                       l1849 0E3F  
                     l1785 03EB                       l1777 03B8                       l1697 05AE  
                     l1689 0584                       l1873 07A2                       l1865 0786  
                     l1857 06E3                       l1795 0422                       l1779 03C9  
                     l1699 05B4                       l1891 07E8                       l1883 07B8  
                     l1875 07AA                       l1867 078C                       l1859 06E8  
                     l1971 002A                       l1797 0433                       l1789 03FC  
                     l1893 07F4                       l1877 07AC                       l1869 078E  
                     l1981 0039                       l1973 002D          main@CaracterEnAsc 0048  
                     l1887 07D8                       l1879 07AF                       l1991 0051  
                     l1983 003B                       l1975 0030                       l1889 07E3  
                     l1993 0052                       l1985 003B                       l1977 0033  
                     l1969 0026                       l1995 0059                       l1987 0041  
                     l1979 0036                       l1989 004E                       l1999 005F  
                     _CREN 00C4                       u2000 0279                       u2001 0278  
                     u1050 0E81                       u1130 05D5                       u2010 0280  
                     u1051 0E80                       u1131 05D4                       u2011 027F  
                     u1060 0E88                       u1220 0DDE                       u2020 02AB  
                     u1061 0E87                       u1205 0641                       u1221 0DDD  
                     u2021 02AA                       u1070 0E8F                       u1150 05F7  
                     u1310 057B                       u1230 0EA2                       u2030 02C7  
                     u1071 0E8E                       u1151 05F6                       u1215 0F07  
                     u1311 057A                       u1231 0EA1                       u2031 02C6  
                     u1400 032C                       u1080 0E96                       u1401 032B  
                     u1081 0E95                       u1145 05DB                       u1305 056E  
                     u2025 02A7                       u1410 033D                       u1170 0619  
                     u1330 0596                       u1411 033C                       u1171 0618  
                     u2107 0FC8                       u1331 0595                       u2035 02C3  
                     u1500 03DA                       u1420 034E                       u1260 0EBC  
                     u1501 03D9                       u1421 034D                       u1165 05FD  
                     u2117 0FD7                       u1325 057D                       u1261 0EBB  
                     u1245 0EA9                       u1510 03EB                       u1430 035F  
                     u1190 063B                       u1350 05B4                       u1270 053B  
                     u1511 03EA                       u2207 0365                       u1431 035E  
                     u1191 063A                       u2127 0F17                       u1351 05B3  
                     u1335 0592                       u1271 053A                       u1255 0EB0  
                     u1600 0488                       u1520 03FC                       u1440 0370  
                     u1360 05B9                       u1280 054C                       u1601 0487  
                     u1521 03FB                       u2217 0376                       u1441 036F  
                     u1185 061F                       u2137 0F28                       u1361 05B8  
                     u1345 05A6                       u1281 054B                       u1610 0499  
                     u1530 040D                       u1450 0381                       u1290 0569  
                     u1370 0F43                       u1611 0498                       u2307 0413  
                     u1531 040C                       u2227 0387                       u1451 0380  
                     u2147 0E33                       u1291 0568                       u1700 0E58  
                     u1620 04AE                       u1540 0422                       u1460 0396  
                     u1380 030A                       u1701 0E57                       u1621 04AD  
                     u2317 0428                       u1541 0421                       u2237 039C  
                     u1461 0395                       u2157 0310                       u1381 0309  
                     u1630 04BF                       u1550 0433                       u1470 03A7  
                     u1390 031B                       u1710 06FD                       u2407 04C5  
                     u1631 04BE                       u2327 0439                       u1551 0432  
                     u2247 03AD                       u1471 03A6                       u2167 0321  
                     u1391 031A                       u1375 0F3E                       u1711 06FC  
                     u1640 04D0                       u1560 0444                       u1480 03B8  
                     u1720 0797                       u2417 04D6                       u1641 04CF  
                     u2337 044A                       u1561 0443                       u2257 03BE  
                     u1481 03B7                       u2177 0332                       u2097 0FBA  
                     u1721 0796                       u1650 04E1                       u1570 0455  
                     u1490 03C9                       u1730 07A2                       u2427 04E7  
                     u1651 04E0                       u2347 045B                       u1571 0454  
                     u2267 03CF                       u1491 03C8                       u2187 0343  
                     u1731 07A1                       u1660 04F2                       u1580 0466  
                     u1740 07AA                       u1900 00A1                       u2437 04F8  
                     u1661 04F1                       u2357 046C                       u1581 0465  
                     u2277 03E0                       u2197 0354                       u1741 07A9  
                     u1901 00A0                       u1670 0503                       u1590 0477  
                     u1750 07B7                       u1910 00F6                       u2447 0509  
                     u1671 0502                       u2367 047D                       u1591 0476  
                     u2287 03F1                       u1751 07B6                       u1911 00F5  
                     u1680 0514                       u1760 07E3                       u1920 0133  
                     u2457 051A                       u1681 0513                       u2377 048E  
                     u2297 0402                       u1761 07E2                       u1921 0132  
                     u1905 009D                       u1690 0525                       u1770 07E8  
                     u1930 0142                       u2467 052B                       u1691 0524  
                     u2387 049F                       u1771 07E7                       u1931 0141  
                     u1915 00F2                       u1940 015B                       u2477 0E43  
                     u2397 04B4                       u1941 015A                       u1925 012F  
                     u1950 0162                       u1870 005E                       u1951 0161  
                     u1935 013E                       u1871 005D                       u1960 01BF  
                     u1880 006E                       u1961 01BE                       u1881 006D  
                     u1970 021F                       u1890 0094                       u1971 021E  
                     u1891 0093                       _PEIE 005E                       u1980 022C  
                     u1981 022B                       u1990 025B                       u1991 025A  
                     u1985 0228                       u1995 0257                       _RCIE 0465  
                     _RCIF 0065                       _SPEN 00C7                       _TXEN 04C5  
                     _TXIF 0064                       _SYNC 04C4                       _atoi 0786  
                     _main 0026                       btemp 007E                       start 000D  
          __end_of_Lcd_Cmd 0E3B               main@caracter 004D                      ??_ISR 002A  
          __end_of___aldiv 05CD                      ?_atoi 0033                      ?_main 0020  
                    i1l300 0F9F                      i1l205 06E2                      i1l215 0EF7  
                    i1l304 0F9F                      i1l209 06E2                      i1l180 0E64  
                    i1l190 0E78                      i1l182 0E6A                      i1l184 0E6B  
                    i1l193 0E79                      i1l186 0E71                      i1l178 0E63  
                    i1l188 0E72                      i1l196 0E21          ?i1_Lcd_Set_Cursor 0024  
                    _RCREG 001A              ??_Keypad_Init 0000                      _SPBRG 0099  
        ??_Lcd_Delete_Char 0000                      _TXREG 0019                ?i1_Lcd_Port 0020  
       ??i1_Lcd_Set_Cursor 0025  enviarInformacion@caracter 0032           main@caracter_asc 0044  
                    atoi@n 0038                      atoi@s 0033                      pclath 000A  
                    status 0003                      wtemp0 007E                ?_USART_Init 003C  
         __end_of_Lcd_Init 1000           __end_of_Lcd_Port 0E9A            __initialization 000F  
             __end_of_atoi 07F9               __end_of_main 0300                     ??_atoi 0035  
                   ??_main 0000        __end_of_Keypad_Init 0800                     u110_20 0E68  
                   u110_21 0E67                     u111_20 0E6F                     u111_21 0E6E  
                   i1l2201 0F7C                     i1l2211 0F8A                     i1l2203 0F7E  
                   i1l2213 0F90                     i1l2205 0F81                     i1l2215 0F96  
                   i1l2207 0F87                     u112_20 0E76                     u112_21 0E75  
                   i1l2209 0F89                     i1l1711 0E11                     i1l2191 0F6B  
                   i1l1713 0E14                     i1l2193 0F6D                     i1l1571 0E6F  
                   i1l1715 0E1E                     i1l1707 0E0C                     i1l2195 0F72  
                   i1l1573 0E76                     i1l1565 0E5D                     i1l1709 0E0D  
                   i1l1901 066D                     i1l2197 0F74                     i1l2189 0F67  
                   i1l1567 0E61                     i1l1911 0682                     i1l1903 066F  
                   i1l2199 0F77                     i1l1569 0E68                     i1l1913 068F  
                   i1l1921 069E                     i1l1905 0671                     i1l1931 06B9  
                   i1l1923 06A4                     i1l1915 0691                     i1l1907 0675  
                   i1l1941 06D7                     i1l1925 06B1                     i1l1933 06C0  
                   i1l1917 0693                     i1l1909 067C                     i1l1943 06DB  
                   i1l1935 06C6                     i1l1927 06B3                     i1l1919 0697  
                   i1l1951 0ECC                     i1l1937 06D3                     i1l1929 06B5  
                   i1l1961 0EE6                     i1l1953 0ECD                     i1l1945 0EC4  
                   i1l1939 06D5                     i1l1963 0EEA                     i1l1955 0ED9  
                   i1l1947 0EC6                     i1l1965 0EED                     i1l1957 0EDC  
                   i1l1949 0EC8                     i1l1967 0EF4                     i1l1959 0EE3  
                   i1l1897 065B                     i1l1899 0660                     u109_20 0E61  
                   u205_20 0F6B                     u109_21 0E60                     u205_21 0F6A  
                   u206_20 0F72                     u206_21 0F71                     u207_20 0F7C  
                   u207_21 0F7B                     u208_20 0F87                     u208_21 0F86  
                   u250_27 0E1A                     u180_20 0682                     u180_21 0681  
                   u181_25 0688                     u182_20 06A4                     u182_21 06A3  
                   u183_25 06AA                     u184_20 06C6                     u184_21 06C5  
                   u248_27 0EE0                     u185_25 06CC                     u249_27 0EF1  
                   u178_20 0660                     u178_21 065F                     u186_25 0ED0  
                   u179_25 0666          ?i1_Lcd_Write_Char 0020                  ??_Lcd_Cmd 002E  
                   _TRISC6 043E                     _TRISC7 043F         ??i1_Lcd_Write_Char 0021  
        __end_ofi1_Lcd_Cmd 0E22          i1Lcd_Write_Char@a 0024                  ??___aldiv 0035  
        i1Lcd_Write_Char@y 0023                     ___wmul 0E9A                     _memset 06E3  
                   saved_w 007E            Lcd_Set_Cursor@a 0033            Lcd_Set_Cursor@b 0031  
          Lcd_Set_Cursor@y 0035            Lcd_Set_Cursor@z 0034    __end_of__initialization 0023  
        __end_of_Lcd_Clear 0DD7          __end_of_Lcd_Blink 0DCE               ?_USART_Write 0020  
           __pcstackCOMMON 0000               __pidataBANK0 0DC1             _Lcd_Set_Cursor 05CD  
              _Keypad_Init 07F9          __end_of_Buzzer_On 0E5A                  ?_Lcd_Init 0020  
                ?_Lcd_Port 0020                 __pbssBANK0 004E                  ISR@estado 004E  
                  ISR@dato 002C                 __pmaintext 0026            _Lcd_Delete_Char 0DF4  
                  ?___wmul 002D                 __pintentry 0004                    ?_memset 002D  
   __end_of_Lcd_Set_Cursor 0658               ??i1_Lcd_Port 0000                 ??_Lcd_Init 0031  
               ??_Lcd_Port 0000                 __stringtab 0700             _Lcd_Write_Char 0EF8  
                  _Lcd_Cmd 0E22               ??_USART_Init 0040         __end_ofi1_Lcd_Port 0E7A  
                  ___aldiv 0534            ?_Lcd_Set_Cursor 0031                    __ptext1 06E3  
                  __ptext2 0DE1                    __ptext3 0DD7                    __ptext4 0786  
                  __ptext5 0E9A                    __ptext6 0F2F                    __ptext7 0534  
                  __ptext8 0FA8                    __ptext9 0DCE             USART_Init@baud 003C  
                  _columna 0052           ___aldiv@dividend 0031                    _renglon 0054  
                  atoi@neg 0037         __end_of_USART_Init 0F67     __end_of_Lcd_Write_Char 0F2F  
     end_of_initialization 0023          ??_Keypad_Get_Char 002D                    memset@c 002E  
                  memset@n 0030                    memset@p 0032    __end_of_Lcd_Delete_Char 0E09  
         ___aldiv@quotient 0038                  Lcd_Port@a 002D                  i1_Lcd_Cmd 0E09  
                _PORTAbits 0005                  _PORTBbits 0006                  _PORTCbits 0007  
                _TRISAbits 0085                  _TRISBbits 0086                  _TRISCbits 0087  
      __end_of_ASCII_CHARS 0786            ?_Lcd_Write_Char 0020          _enviarInformacion 0DE1  
       ?_enviarInformacion 002E                  _Lcd_Clear 0DCE                  _Lcd_Blink 0DC5  
      ??_enviarInformacion 0000             __end_of___wmul 0EC1                 ?i1_Lcd_Cmd 0020  
           __end_of_memset 06FE               ?_Keypad_Init 0020        start_initialization 000F  
              __end_of_ISR 0FA8  __end_of_enviarInformacion 0DF4                  _Buzzer_On 0E3B  
         i1_Lcd_Set_Cursor 0658           ?_Lcd_Delete_Char 0037                 ?_Lcd_Clear 0020  
               ?_Lcd_Blink 0020                   ??___wmul 0000                __pdataBANK0 0052  
          Lcd_Write_Char@a 0031                   ??_memset 0000            Lcd_Write_Char@y 0030  
               memset@dest 002D                _ASCII_CHARS 0706                  ___latbits 0001  
            __pcstackBANK0 0020       i1Lcd_Write_Char@temp 0022                 ?_Buzzer_On 002D  
                 ?_Lcd_Cmd 0020           ??_Lcd_Set_Cursor 0032        ISR@renglon_recibido 0051  
                 ?___aldiv 002D           i1_Lcd_Write_Char 0EC1                ??i1_Lcd_Cmd 0021  
     i1Lcd_Set_Cursor@temp 0029                  __pstrings 0700     main@CaracteresEscritos 004B  
          _Keypad_Get_Char 0300       ISR@caracter_recibido 004F            ___aldiv@divisor 002D  
        interrupt_function 0004            ___aldiv@counter 0036             ___wmul@product 0031  
                 Lcd_Cmd@a 0030                ??_Lcd_Clear 0000                ??_Lcd_Blink 0000  
              __stringbase 0705                 _ADCON1bits 009F          ___wmul@multiplier 002D  
         ??_Lcd_Write_Char 002E                  main@tecla 004A   enviarInformacion@columna 0030  
                 _Lcd_Init 0FA8                   _Lcd_Port 0E7A   enviarInformacion@renglon 002E  
   Lcd_Delete_Char@columna 0039                ??_Buzzer_On 002F     Lcd_Delete_Char@renglon 0037  
            ??_USART_Write 0000    __end_of_Keypad_Get_Char 0534         __end_of__stringtab 0706  
 __end_ofi1_Lcd_Set_Cursor 06E3          i1Lcd_Set_Cursor@a 0026          i1Lcd_Set_Cursor@b 0024  
        i1Lcd_Set_Cursor@y 0028          i1Lcd_Set_Cursor@z 0027        ISR@columna_recibida 0050  
                 __ptext10 0DF4                   __ptext11 0EF8                   __ptext20 0EC1  
                 __ptext12 05CD                   __ptext21 0658                   __ptext13 0DC5  
                 __ptext22 0E09                   __ptext14 0E22                   __ptext23 0E5A  
                 __ptext15 0E7A                   __ptext16 07F9                   __ptext17 0300  
                 __ptext18 0E3B                   __ptext19 0F67                i1Lcd_Port@a 0020  
      __end_of_USART_Write 0DE1       Buzzer_On@duration_ms 002D         Lcd_Write_Char@temp 002F  
                 intlevel1 0000   __end_ofi1_Lcd_Write_Char 0EF8                 i1Lcd_Cmd@a 0023  
                stringcode 0700           ?_Keypad_Get_Char 0020         Lcd_Set_Cursor@temp 0036  
               i1_Lcd_Port 0E5A                   stringdir 0700                   stringtab 0700  
             ___aldiv@sign 0037            USART_Write@data 002D                 _USART_Init 0F2F  
              _USART_Write 0DD7  
